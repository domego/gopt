// Code generated by go-bindata.
// sources:
// .gitignore
// Makefile
// NAME
// README.md
// api_doc.md
// app.go.tmpl
// cfg/config.go.tmpl
// config/config.yaml
// controller/controller.go.tmpl
// controller/gen_controller.go.tmpl
// controller/gen_route.go.tmpl
// controller/route.go.tmpl
// fresh.conf
// gen_types.go.tmpl
// main.go.tmpl
// model/all/all.go.tmpl
// model/database/db.go.tmpl
// model/database/table.go.tmpl
// router.go.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\xc1\x4a\xc3\x40\x10\x86\xef\xf3\x14\x03\xbd\x85\x76\xf7\x20\x28\xf4\x28\xf6\x20\x28\x8a\xf8\x00\xdd\x6c\xa6\x9b\x91\x49\x26\xec\xcc\x5a\xf3\xf6\x92\xea\xed\xe3\xff\x3f\xbe\x1d\x3e\xf2\x9c\x2a\x93\xe1\x45\x2b\x2e\x55\x4b\x4d\x93\x61\x9a\x07\x5c\xa4\x15\x9e\x0d\xba\x40\x3f\x04\x5d\x18\x44\xa0\x0b\xa6\x1b\xae\xc2\x3d\xc0\x0e\x3f\xc9\x1c\xfb\x2d\xb1\xee\xb1\x6f\x2c\x03\x5e\xd9\x47\x3c\x17\x45\xdf\xbe\x43\x3e\x43\x17\x36\xdc\xf4\xb7\xe6\x4b\x73\xd4\x0b\xfa\x48\x58\x14\xb3\x7e\x53\x4d\x85\xd0\x55\x65\x8f\xb6\x50\xe6\x0b\xe7\x24\xb2\xe2\x75\xa4\x19\x9b\xd1\x7f\xf2\x85\x9d\x9e\x9f\x4e\xd0\x05\x6d\xb7\xd8\x7b\xd5\x2f\xca\x7e\x10\xcd\x49\xb0\x08\x0f\x84\x39\xe5\x91\xf6\xf8\x71\x3a\xe2\xe8\xbe\xd8\x31\xc6\xc2\x3e\xb6\x3e\x64\x9d\xe2\x6b\x32\xa7\x3a\xf1\x3c\x58\xbc\xf9\x91\xcd\x1a\x59\x7c\xb8\xbb\x87\xf0\xb7\x00\x88\x96\x08\x3e\x2d\x11\x7e\x03\x00\x00\xff\xff\x51\x45\x48\x4d\x1e\x01\x00\x00")

func GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_Gitignore,
		".gitignore",
	)
}

func Gitignore() (*asset, error) {
	bytes, err := GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".gitignore", size: 286, mode: os.FileMode(420), modTime: time.Unix(1498529781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _makefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xf2\x73\xf4\x75\xb5\x4d\x48\x4e\x2c\x51\x00\xb1\x12\xb8\xf4\x02\x3c\xfc\xfd\x22\xad\x14\x92\x4a\x33\x73\x52\xb8\xb8\xc0\x94\x15\x17\xa7\x43\x7a\x3e\x44\x48\x41\x37\x5f\x21\x29\x33\x4f\x5f\x45\x03\xa4\x5e\x93\x8b\x2b\xad\x28\xb5\x38\x03\xa4\x02\xcc\x50\xd0\x4d\x56\x00\x33\xf4\x92\xf3\xf3\xd2\xb8\x00\x01\x00\x00\xff\xff\xaa\x71\x32\x0b\x5e\x00\x00\x00")

func makefileBytes() ([]byte, error) {
	return bindataRead(
		_makefile,
		"Makefile",
	)
}

func makefile() (*asset, error) {
	bytes, err := makefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Makefile", size: 94, mode: os.FileMode(420), modTime: time.Unix(1498556775, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _name = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\xe5\x02\x04\x00\x00\xff\xff\xc5\x48\x82\xef\x0a\x00\x00\x00")

func nameBytes() ([]byte, error) {
	return bindataRead(
		_name,
		"NAME",
	)
}

func name() (*asset, error) {
	bytes, err := nameBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME", size: 10, mode: os.FileMode(420), modTime: time.Unix(1497174547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xa8\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\xe5\xe2\x32\xd4\x53\x78\x3a\x7f\xd7\xb3\x39\x6b\x5e\x2e\xdc\xf9\x7c\xf6\xba\xe7\xbb\x27\x3f\x9b\xd7\x62\xcd\x65\xa4\xa7\xe0\x1f\xe4\xab\xa0\xad\xe0\xe2\xe4\x9c\x98\x9c\x91\xaa\x11\x94\x9a\x92\x59\xac\xef\x9b\x9a\x9b\x0c\xe2\x6a\x5a\x73\x19\xeb\x29\x38\x06\x78\x3a\x16\xa5\x17\x5b\x73\x99\xe8\x29\x84\x54\x16\xa4\x16\x5b\x73\x01\x02\x00\x00\xff\xff\x0f\x48\xaa\x33\x5c\x00\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 92, mode: os.FileMode(420), modTime: time.Unix(1497174569, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _api_docMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\xb1\x4a\x04\x31\x14\x45\xfb\x7c\xc5\x85\xa4\x34\xf9\x80\x01\x8b\x01\x1b\x0b\x61\xd9\x1f\x90\x61\x27\xcc\x2e\xe8\x8c\xcc\x64\xd2\x3c\xd2\x2c\xd6\x3b\x8d\x8a\x20\xd8\x88\xf5\x28\x08\x8b\x20\xfa\x35\x09\xfb\x19\x92\xe8\x42\xba\xf7\xb8\xe7\xde\xfb\x1e\xe7\x1c\xe5\xe2\x3c\xec\x5e\xfd\xf4\x72\x98\x3f\xc2\xe3\x0e\x9c\x73\x46\x84\xbe\x6a\x1b\x0d\x55\xde\x6c\xe0\x1c\x93\x52\x4a\xc6\x23\x4e\xa4\xce\xf4\xb0\x72\x2e\x82\x19\x29\x36\x27\x10\x16\xc5\x29\xd4\xb2\x1b\x8d\x76\x8e\x25\x43\x74\x40\xc4\x10\x05\x22\x61\x73\x37\x67\x12\xff\xdd\xfb\xd9\x7f\xdf\x16\x89\xb5\x6a\x51\x99\x75\x6a\xc5\x61\xde\x87\xf7\x6d\x78\xf8\xf4\x5f\xd3\x51\xbd\xd0\x66\xdd\xd5\xb9\xee\xa7\x6d\xb8\x7f\x2b\xb2\x63\xac\x2a\xfb\x66\xbc\xd6\xad\x19\x22\x08\x48\x10\x55\x7d\x73\x59\x77\x2b\x28\xe7\x88\x74\x5b\xff\x25\xfc\xdc\xf9\xa7\x67\xc6\x00\x80\xa8\xd7\xc3\x78\x65\x12\x25\xac\x5a\xa6\x2d\x7e\x42\x04\xdd\xa6\xce\x6c\xfc\x0d\x00\x00\xff\xff\xf0\x61\x38\x8f\x3e\x01\x00\x00")

func api_docMdBytes() ([]byte, error) {
	return bindataRead(
		_api_docMd,
		"api_doc.md",
	)
}

func api_docMd() (*asset, error) {
	bytes, err := api_docMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api_doc.md", size: 318, mode: os.FileMode(420), modTime: time.Unix(1498746236, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\xbd\x6a\xdc\x4e\x14\xc5\x6b\xcd\x53\x5c\x0b\x0c\x12\xec\x5f\xe2\xdf\x1a\xb6\x58\x92\xc5\x5e\xd8\x2c\x46\xb2\x2b\x63\xc2\xac\xe6\x6a\x3c\xac\x34\x57\xcc\x68\xd7\x98\xe0\x27\xc8\x57\x95\x2a\x55\xba\xbc\x81\x9b\x80\x5f\x26\x1f\xee\xf2\x0a\xe1\x8e\x56\xc4\x31\xa4\x49\x27\xe6\x9c\x39\xe7\xe8\x37\x9d\xac\x36\x52\x23\xb4\xd2\x58\x21\x4c\xdb\x91\xeb\x21\x11\x51\xec\x6f\x7c\x25\x9b\x26\x16\x02\x20\xd6\xa6\xbf\xda\xae\xb3\x8a\xda\xbc\xde\xad\xa9\xda\xe4\x68\x55\x83\xde\xc7\x4f\x54\x6d\xec\x7f\x9a\xac\xa9\xf8\xeb\xa9\xa8\xa8\x45\x4d\xac\x6c\x4c\xef\xf3\xd6\x28\xd5\xe0\xb5\x74\xf8\x37\x23\x05\x5f\x43\x3a\x16\xa9\x10\xf5\xd6\x56\x70\x25\xb9\x78\xd6\x75\x49\x0a\xaf\x44\xa4\x8d\xcd\x4a\xec\x5f\x90\xc2\xa4\x22\x5b\x67\x73\xbb\x4b\x45\xe4\x68\xdb\x23\x1c\x4d\x81\xf5\x15\x5e\x27\xe3\x59\x76\xee\x31\xf9\x5d\x9c\x2d\x49\x6b\x74\x49\xfa\x87\xce\x97\x0a\xac\x68\x87\xee\x66\x90\x50\x1b\xdf\x17\x6c\x48\x82\x2d\x15\x91\x47\xb7\x43\xc7\x1d\x7b\x14\xdc\x53\x86\xc3\x61\xc9\x4c\x29\x87\xde\x4f\x60\xbc\x91\xe7\xf0\xfd\xed\x87\x87\x77\x77\x0f\xf7\x1f\x7f\x7c\x7e\x7d\x5e\x16\xff\x7f\xbd\xff\xf4\xed\xfd\xdd\xcf\x2f\x6f\x1c\x36\x24\xd5\x33\xb2\xb5\xd1\x63\x76\x56\x1a\x6d\x65\x73\x42\xb4\xf1\x17\x63\xc9\x69\x31\x7f\x59\x2e\x8e\x57\xb3\xe5\xe5\xc5\xfe\x89\xb2\x72\x71\xcc\x61\x97\x30\x05\xd9\x75\x68\x55\xf2\x8f\x01\x13\x60\xc6\x03\xd9\x68\x20\x5d\x84\x61\x43\x10\x53\xbc\x4d\x85\x88\x4c\x0d\x23\x6c\x38\x18\x20\x3f\xc7\xf5\x56\xf3\x33\x84\xbb\x0d\xe9\x6c\x61\x6b\xaa\x93\xf8\xd0\x1f\xc1\xd2\xf8\x1e\xad\xb1\x1a\xa4\x55\xc0\xe3\xf8\xfb\xe4\xec\xec\x14\xc8\xc2\xa1\x8f\x27\x3c\x7c\x25\x5b\x9c\xc0\x63\x76\xdc\x27\x22\x74\x01\xf3\xfe\x9f\x86\xac\x99\x55\x81\x35\x4f\x32\x35\xb0\xe5\x60\x0a\xd6\x34\x8f\xa6\xcf\xad\x62\x39\x8c\x99\x3b\x47\x2e\xac\x89\x27\xec\x0e\xc9\xb7\xe2\x57\x00\x00\x00\xff\xff\x5b\x7f\xec\x3c\xfe\x02\x00\x00")

func appGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_appGoTmpl,
		"app.go.tmpl",
	)
}

func appGoTmpl() (*asset, error) {
	bytes, err := appGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.go.tmpl", size: 766, mode: os.FileMode(420), modTime: time.Unix(1498556577, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cfgConfigGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc1\x8e\xd3\x30\x10\x3d\xc7\x5f\x31\x58\x02\x25\x68\x95\x00\xc7\x4a\x39\xa0\xa5\x48\x2b\x55\x1c\x56\xe2\x4c\xdd\x64\xe2\x5a\x75\xed\xc8\x76\xb2\xbb\xaa\x2a\x71\xe3\xc0\x9d\x13\xf0\x09\x88\x13\x17\x24\xbe\x66\xcb\x77\x20\xdb\x49\xda\x2e\x17\xa8\x54\x35\x79\xf3\xfc\xfc\xe6\xcd\xb4\x65\xd5\x86\x71\x84\xaa\xe1\x84\x88\x6d\xab\x8d\x83\x94\x24\x54\xe8\x42\xe8\xce\x09\x49\x49\x42\xb5\xa5\x84\x24\x94\x0b\xb7\xee\x56\x79\xa5\xb7\x45\xad\xb7\xc8\x75\xc1\xf5\x46\x38\x5b\x48\xcd\x29\x49\xee\xd8\x56\x02\xe5\xba\xdd\xf0\x5c\xa8\xc2\xbf\xe6\xfd\x0b\x4a\x32\x42\x7a\x66\x20\x25\x00\x45\x01\x97\x5a\x35\x82\xbf\x16\x12\xa1\x0a\x8f\xf0\xfb\xd3\x87\xfb\x9f\x3f\x0e\x9f\xbf\x1f\xbe\xbc\x27\x70\x4a\x28\x81\x46\x4e\x11\x7f\x72\xaf\x49\x8f\x3a\xa3\xc2\xe1\xdb\xd7\xfb\x5f\x1f\x87\xb3\xf0\x34\x2a\xf8\x7b\xa7\xfb\x46\xa6\x75\xa6\xab\x1c\x71\x77\x2d\x8e\x95\x08\xc1\x8e\x24\x2f\xeb\xda\xa0\xb5\xe0\x21\xa1\x38\x2c\xfd\x75\x33\xca\x22\x4c\x97\x24\x99\xab\x1e\xc2\xe7\x9c\x81\xaa\xf7\xd5\x85\xe6\x0b\xec\x51\x3e\xa8\x4a\xcd\xdf\x49\x8f\xd3\x25\xd9\x07\x4f\x06\x59\x3d\xdc\xee\x1f\x81\xa9\x1a\x5a\x66\xec\x18\x89\x6f\x9e\x34\x9d\xaa\xe0\x7a\x62\xa6\x78\x2b\x1c\xac\xb4\x96\xd9\xd8\x21\xec\x08\xc0\xca\x5e\x00\x1a\x03\xb3\x12\xe2\xc0\x72\x7f\xc6\x2b\xa4\xc7\x24\x33\x02\x20\x9a\xc0\x7b\x54\x82\x12\x32\x1c\x05\x90\x9a\xe7\x73\x63\xb4\x69\x52\x2a\x35\xab\xc7\x98\x1a\x9f\x7e\xc3\x84\xc4\xfa\x02\xdc\x1a\xa1\x65\x6e\x0d\xc2\xc2\x63\x4b\x2f\xe0\x5c\x37\x2a\x7b\x73\x51\x13\x40\xdb\x7c\x7e\x2b\x5c\xfa\x3c\x96\xf7\x24\x7e\x07\xed\x59\x09\x4f\xa2\xc2\xce\xa3\xde\x53\x09\x61\x59\xde\xaa\x2d\x33\x76\xcd\x64\xea\x9b\x8a\xf4\x7f\x71\xde\x8d\xe7\x26\xfb\x83\xf3\xe0\x16\x8d\xf9\x2f\x9b\x06\x5d\x67\xd4\x20\xe5\x07\x16\x06\x71\xa5\x84\x4b\xcf\x93\x0f\xcb\x56\x9e\x8e\xc8\x99\x2e\x44\xe2\xc9\x03\x94\x1d\x15\x3d\x32\xe9\x5d\xa3\xcf\x3b\xcd\x82\x92\xc2\x9b\xcb\x29\x9c\x13\xbd\x86\x49\x3b\xce\xee\xc8\xf9\x2b\x87\x2b\xd5\xe8\x26\xa5\x06\x4f\x46\x48\x63\x53\x83\xc7\xe9\x70\x00\x1f\xd8\xdb\x9f\x35\x39\x16\x82\xbe\x57\x7f\x85\x0d\xeb\xa4\x5b\x68\xce\xd1\xe4\x71\xc1\xcb\x50\x79\x83\x37\xe1\x35\x2c\x5a\x3e\x6e\xff\xe0\x57\xa2\x8a\xf8\x5c\xf5\x19\x94\x25\x3c\x1b\x1c\x8f\xa0\xff\x77\xd7\xb8\xea\x38\x1d\x3c\xfc\x09\x00\x00\xff\xff\xf2\x81\x50\xee\x8b\x04\x00\x00")

func cfgConfigGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_cfgConfigGoTmpl,
		"cfg/config.go.tmpl",
	)
}

func cfgConfigGoTmpl() (*asset, error) {
	bytes, err := cfgConfigGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cfg/config.go.tmpl", size: 1163, mode: os.FileMode(420), modTime: time.Unix(1498556508, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x4c\x49\x29\x4a\x2d\x2e\xb6\x52\x50\x32\x34\x32\xd7\x33\xd0\x33\xd0\x33\xb4\xaa\xae\xd6\x0b\xc8\x2f\x2a\xa9\xad\x55\xe2\x4a\xcd\x2b\xb3\x52\x50\x4a\x49\x4d\x2a\x4d\x57\xe2\xca\xc9\x4f\x8f\xcf\x49\x2d\x4b\xcd\xb1\x52\x50\x2a\x29\x4a\x4c\x4e\x55\xe2\x02\x04\x00\x00\xff\xff\x8b\x1d\xeb\xd8\x3f\x00\x00\x00")

func configConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_configConfigYaml,
		"config/config.yaml",
	)
}

func configConfigYaml() (*asset, error) {
	bytes, err := configConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/config.yaml", size: 63, mode: os.FileMode(420), modTime: time.Unix(1497174631, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerControllerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\x03\x31\x10\x86\xef\xf3\x14\xc3\x9e\xda\xa2\xd9\x27\xf0\xa0\xde\xa5\x54\xef\x32\xcd\x4e\xc7\xd0\xee\x4c\x48\xb2\x62\x09\x79\x77\x59\x57\xf6\x20\xd8\xdb\xcf\xff\x7d\xcc\xcf\xf4\x3d\x0a\x2b\x27\x2a\x8c\xc7\x2b\x4a\xd0\x58\x20\x92\x3f\x93\x30\xd6\xea\xf6\x4b\x7c\xa1\x91\x5b\x03\x08\x63\xb4\x54\x70\x03\x88\x9d\x84\xf2\x31\x1d\x9d\xb7\xb1\x97\xa0\xf7\x62\x1a\xfc\x9c\xba\x3f\x70\xb0\x91\xc5\x66\x72\x0e\x25\xdf\xa6\x7d\xa4\x44\xe3\xbf\x92\xfd\x38\x17\x93\x0e\xb6\x00\x9f\x94\xf0\x1d\x1f\xf0\x62\xe2\xde\x12\x79\x3e\xad\xd5\xec\xb9\x03\xeb\xc0\xe9\x75\xf2\x9e\x73\x86\x72\x8d\x8c\x4f\x94\x79\x3f\x4f\xe0\x32\xe4\xd6\x02\xa0\xd6\x44\x2a\x8c\xee\x60\x53\xe1\xdc\x1a\x9c\x26\xf5\x38\x58\xad\x6e\xf9\x7f\xe3\x71\x27\x41\xdd\xb3\x69\xe1\xaf\x72\xf7\x7b\x04\x77\xab\xf1\x98\x24\x6f\xb1\x42\x83\x5a\x59\x87\xd6\xe0\x3b\x00\x00\xff\xff\x11\x3d\x20\x6c\x61\x01\x00\x00")

func controllerControllerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerControllerGoTmpl,
		"controller/controller.go.tmpl",
	)
}

func controllerControllerGoTmpl() (*asset, error) {
	bytes, err := controllerControllerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/controller.go.tmpl", size: 353, mode: os.FileMode(420), modTime: time.Unix(1498535245, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerGen_controllerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xc9\x6e\xdb\x30\x10\xbd\xf3\x2b\x1e\x04\x34\x90\x5b\x97\xbe\x1b\xc8\x21\xdb\x21\x40\x9b\x1a\x69\xee\x0d\x43\x8d\x59\xd6\x12\xa9\x72\x09\x6a\x10\xfc\xf7\x42\x8b\x65\xd9\x4d\xd1\xea\x34\x9c\xf7\x66\x79\x33\xa3\xd5\x0a\x8a\x0c\x39\x11\x08\x2f\x7b\x28\x6d\xda\xc0\x5a\x21\x77\x42\x11\x52\xe2\x9b\xc1\x7c\x10\x0d\xe5\xcc\x98\x6e\x5a\xeb\x02\x4a\x06\x14\x4a\x87\xef\xf1\x85\x4b\xdb\xac\x94\x36\x1f\x95\x35\x5a\x76\x56\x71\x06\x56\xb6\x21\x65\x3b\x64\xa7\x83\xff\x1b\x6a\xff\x09\xae\x6a\xab\x0a\xb6\x60\xec\x55\x38\x7c\xc3\x25\x6a\xab\xf8\x93\x13\x92\xb6\x93\xab\xe3\xf1\x47\x32\x15\xb9\xaf\x51\x4a\xf2\x7e\x82\x62\xd0\xb5\xe7\xf7\xfe\xae\x69\xc3\x9e\xb1\x94\x9c\x30\x8a\xc0\x1f\x6d\x0c\xe4\x73\x66\x61\xdf\xf6\x92\x07\xad\x57\x4e\x79\xf8\xe0\xa2\x0c\x48\x0c\xb8\x16\x9e\x36\xc2\x89\x86\x01\x29\x41\x6f\xc1\xaf\x9c\x8a\x0d\x99\xe0\x91\x73\xef\x1d\x32\xb6\xc2\x79\xba\xda\xdc\x1f\xe1\x23\xb3\x27\xe2\x58\xa5\xb3\x9e\xf6\x6d\x67\x3d\x6f\xad\x6b\xd6\x45\x4a\xb1\xeb\xbe\xd6\x86\x30\x92\x0a\xfc\xf0\xd6\xbc\x0d\x3d\x23\x25\x32\xd5\xd8\xc0\x60\x65\xc6\xb6\xd1\x48\xdc\xda\xa9\x4e\x29\xf1\x5e\x69\xc3\x6f\xac\x09\xf4\x2b\x2c\x7a\x49\x6d\x27\xc7\x63\x7d\x79\xaa\x3a\x75\xb9\x24\xbf\xd6\xa6\x2a\x2f\x06\x0e\x9f\xd4\x2f\xfa\x3a\x27\xea\x73\x3e\x63\x2f\x46\x8d\xff\x3d\x8e\x31\xa5\xf6\xd7\x51\xd7\xd5\xbd\xc1\x38\x93\xde\x6b\x6c\x00\xff\xd2\x06\x6d\x8d\xa8\xa7\x00\x74\x1b\x38\x59\x69\x39\xb6\x3a\x69\x19\x44\x1e\xbe\xd9\x65\xdc\x39\x67\x5d\x29\x97\xb8\x18\x9d\xbe\xed\x5d\x9f\xc9\x7b\xa1\x68\x1e\x85\x1b\x5b\xd1\x7a\x08\xee\x39\xdd\xfb\xd0\xfe\x27\x21\x77\xcb\x39\x79\x4c\xb0\xc6\x5b\xab\x82\xf6\x70\xf4\x33\x6a\x47\x55\x31\x0f\xcb\x8b\xd9\xc3\x51\x88\xce\x4c\x8e\x7c\x98\xcc\x83\x0d\xbd\x4a\xf0\x5b\xda\x8a\x58\x87\x9c\x41\xb5\xa7\x13\x8d\xe7\x13\x40\xbf\xd9\x29\xe0\x24\xeb\xe1\x68\x86\xe9\xf7\xaf\xb9\xf3\xcf\xab\xc2\xec\x7f\x2b\x8b\xa1\xd4\x1a\xef\x3e\xbc\x16\x4b\x1c\xf7\x5e\xcd\x6f\x6e\x89\xe9\x22\x32\x3b\xe4\xf9\x1d\x00\x00\xff\xff\x14\x32\xb7\xe8\x72\x04\x00\x00")

func controllerGen_controllerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerGen_controllerGoTmpl,
		"controller/gen_controller.go.tmpl",
	)
}

func controllerGen_controllerGoTmpl() (*asset, error) {
	bytes, err := controllerGen_controllerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/gen_controller.go.tmpl", size: 1138, mode: os.FileMode(420), modTime: time.Unix(1498570964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerGen_routeGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x51\xcb\x6a\xe4\x30\x10\xbc\xeb\x2b\x1a\xb1\x07\x7b\xd9\x95\xef\x81\x39\x84\x49\x48\x2e\x99\x98\x3c\x3e\x40\x63\xb7\x35\x62\x2c\xc9\xc8\x72\x1e\x34\xfd\xef\xc1\xf2\x24\x13\x02\xf1\x45\xea\xea\xae\xaa\x2e\xa4\xaa\x02\x83\x1e\xa3\x4e\x08\xfb\x77\x30\xd6\x0f\x49\x0c\xba\x39\x6a\x83\x40\xa4\xea\xa5\xdc\x69\x87\xcc\x82\x08\xfe\x98\x18\xa6\x61\xc6\x70\xb1\x81\x69\x18\x30\x6e\xb5\xc3\x1e\x54\xee\x9d\x48\xba\xef\xeb\x30\xa6\x99\xa2\x2e\x4f\x35\xb3\xb0\x6e\x08\x31\x41\x21\x00\xa4\xb1\xe9\x30\xed\x55\x13\x5c\x65\xac\xff\x6f\x82\xb7\xcd\x5c\xc9\x1f\xc3\x36\x38\x34\x61\x9e\x1c\x6d\x1a\x2b\x67\xdb\xb6\xc7\x57\x1d\x51\x8a\x52\x88\x17\x1d\x81\xe8\x1c\x8a\xf9\x21\x4c\x09\x6f\x66\x0c\x7f\x8d\xf5\x2a\xe3\x98\x1b\xa2\x9b\x7c\x03\x11\x8d\x1d\x53\x6e\x17\x71\x3e\x17\xde\xb5\x37\xd6\x63\x09\x24\xe0\x77\xc7\x0d\x64\x85\xca\xa8\x90\x44\x8b\x7d\x1d\xb1\xb3\x6f\xcc\xb2\x5c\x11\xab\xe7\x11\x8b\x73\x7c\xb5\x0d\xce\x05\x7f\xab\x7d\xdb\x63\x2c\xca\x2c\x05\xa2\xa8\xbd\x41\x58\x7c\x47\xe6\x35\x43\xa2\xfc\xfe\xa0\xee\x30\x1d\x42\xcb\x9c\x13\xd5\x3a\x1d\x98\xe5\x3f\xb8\x0a\x44\x6a\x11\x95\x40\x64\xbb\xaf\x7f\x61\x26\x02\xdb\x81\x1d\x77\x21\x7d\xca\x41\x0e\x61\x4c\x72\x7d\x65\x7d\xff\xf8\xb4\xba\x05\x7d\x3b\xbb\x7f\xbf\x04\x00\x0b\x16\x1f\x01\x00\x00\xff\xff\x84\x87\x93\x7b\x6b\x02\x00\x00")

func controllerGen_routeGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerGen_routeGoTmpl,
		"controller/gen_route.go.tmpl",
	)
}

func controllerGen_routeGoTmpl() (*asset, error) {
	bytes, err := controllerGen_routeGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/gen_route.go.tmpl", size: 619, mode: os.FileMode(420), modTime: time.Unix(1498529013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerRouteGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xca\x31\x0a\x02\x31\x10\x46\xe1\x7e\x4e\xf1\xb3\x95\x2b\xb8\x7b\x0a\x5b\x91\xbd\x41\x36\x8c\xe3\x20\x99\x84\x38\x29\x24\xe4\xee\xb2\xd8\xd9\x3c\xbe\xe2\xad\x2b\x84\x8d\x6b\x70\xc6\xfe\x81\xa8\x15\xa7\x12\xe2\x2b\x08\xa3\xf7\xe5\xfe\xe3\x2d\x24\x1e\x83\x34\x95\x5c\x1d\x93\xa8\x3f\xdb\xbe\xc4\x9c\x56\x51\xbb\x48\x36\x8d\x87\x26\xa2\x47\xb3\x88\x8d\x45\xdf\xbe\xe5\xe6\x7c\xaa\x47\x71\x16\xb5\xe5\x6a\xa2\xc6\x33\x3a\x01\xf5\x7f\x99\x69\xd0\x37\x00\x00\xff\xff\x96\x6d\xa6\xc5\x8e\x00\x00\x00")

func controllerRouteGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerRouteGoTmpl,
		"controller/route.go.tmpl",
	)
}

func controllerRouteGoTmpl() (*asset, error) {
	bytes, err := controllerRouteGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/route.go.tmpl", size: 142, mode: os.FileMode(420), modTime: time.Unix(1498465950, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _freshConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4b\xcc\xc9\x4c\x89\x4f\xad\x28\xb1\x52\x80\x01\xbd\xf4\x7c\x1d\x05\xbd\x92\x82\x1c\x10\x99\x0b\xa6\x32\x4a\x72\x41\x54\x65\x62\x6e\x0e\x57\x5e\x7e\x7c\x51\x6a\x52\x69\x66\x0e\x42\x1b\x6e\xc5\x99\xe9\x79\xf9\x45\xa9\x29\x08\xc3\x15\x14\x12\x8b\x8b\x53\x4b\x8a\x75\x14\x4a\x72\x0b\x74\x14\x72\xf2\xd3\xb9\x00\x01\x00\x00\xff\xff\xc8\x0e\x9b\x57\x83\x00\x00\x00")

func freshConfBytes() ([]byte, error) {
	return bindataRead(
		_freshConf,
		"fresh.conf",
	)
}

func freshConf() (*asset, error) {
	bytes, err := freshConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fresh.conf", size: 131, mode: os.FileMode(420), modTime: time.Unix(1498529775, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gen_typesGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8d\xc1\x4a\x03\x31\x10\x86\xef\xf3\x14\x3f\xcb\x1e\xf4\x92\xd2\x6b\xa1\x4f\x20\x8a\xa0\x78\xb5\x69\x33\x2c\xd5\x34\x09\xd9\xd9\xc8\x32\xcc\xbb\x4b\xba\x07\xc1\xdb\x30\xf3\x7d\xdf\xec\x76\x13\x27\xae\x5e\x38\xe0\xbc\x62\x2a\x42\xc5\x5f\xbe\xfd\xc4\x50\x75\xaf\xdb\x68\x46\x74\xbd\x95\x5c\x05\x0f\x04\x0c\x72\xbd\xf1\x40\x8f\x44\xcd\x57\x7c\xe2\x88\xbe\x70\x2f\xf9\x87\x48\xb5\xfa\x34\x31\xc6\x86\xc3\x11\x92\xdf\x72\x15\x0e\xcf\xbe\xc0\xbd\xaf\x85\x67\x33\x92\xb5\xf4\xf8\xd8\xdc\x13\xaf\x30\xc3\x2c\x75\xb9\x08\x94\x80\x3f\x7d\xff\xdf\x1f\x9b\xfb\xf0\x71\x61\x98\xdd\xc1\xb1\xed\x7b\xc0\x0c\xaa\x69\x89\xd1\x9f\x23\xf7\x17\xdd\xdd\x48\x33\x9c\xbe\xe6\x9c\x0e\x83\xea\x92\x02\xd7\x78\x4d\xdb\xf9\xee\x0d\x27\xa8\x72\x0a\x66\x64\xa4\x0a\x4e\xa1\xb7\x7f\x03\x00\x00\xff\xff\x19\x31\x59\xf6\x12\x01\x00\x00")

func gen_typesGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_gen_typesGoTmpl,
		"gen_types.go.tmpl",
	)
}

func gen_typesGoTmpl() (*asset, error) {
	bytes, err := gen_typesGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen_types.go.tmpl", size: 274, mode: os.FileMode(420), modTime: time.Unix(1497164150, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\xc1\x6a\xdc\x30\x10\x3d\x4b\x5f\x31\x15\x04\xec\x62\xe4\x1e\x42\x0f\x01\x1f\x42\x49\x4b\x0e\x09\xcb\xb6\xd0\x43\x5b\x8a\xd6\x92\xb5\x43\x64\x8d\x90\xb4\x5b\xc2\xb2\xff\x5e\x24\xbb\xd9\xa5\x3e\x18\x6b\xe6\xe9\x3d\xbf\x99\x17\xd4\xf8\xa2\xac\x81\x59\xa1\xe7\x1c\xe7\x40\x31\x43\xc3\x99\x98\x9c\xb2\x82\x33\x81\xd4\x23\x1d\x32\xba\x72\xa0\x54\xde\x29\xc7\x91\xfc\x71\xfd\x44\x6f\x97\xea\x6b\x1a\x95\x73\x82\x73\x00\x61\x31\xef\x0f\x3b\x39\xd2\xdc\x6b\x9a\x8d\xa5\xde\xd2\x0b\xe6\xd4\x3b\xb2\xa2\x00\x4e\x27\xb9\x25\xca\x1b\x95\xf7\xe7\x73\x3f\x4e\x56\xf0\x96\xf3\xa3\x8a\x45\x7c\x24\x3f\x41\x79\xde\x8f\x93\x95\x9f\xc8\x4f\x68\x39\x53\x21\x3c\xab\xd9\xc0\xa2\xc9\x59\x40\x5d\x41\xe8\xf3\xd5\xdd\x80\xfa\x33\x3a\x53\x3b\x03\x08\x47\xb6\x57\x21\xc8\x80\x5a\xbc\x51\x54\xc0\x00\xe2\xf9\xfe\xe9\xa1\xea\x4e\x07\x3f\x02\x7a\xcc\x4d\x0b\x27\xce\x0a\xd5\x6f\x18\x80\x92\x7c\x7a\xd1\x18\x9b\x42\x23\xba\x7a\x26\x6d\x36\x26\xce\x2d\x67\xbb\xd4\x81\x89\x11\xee\x06\x58\x26\x24\xb7\x46\x55\xf1\xe6\x4a\xa7\xe5\x0c\xa7\x8a\x7b\x37\x80\x47\x57\xf8\x99\x23\x2b\x1f\x62\xa4\x38\x35\x22\x1a\xa5\xe1\x9f\x37\x53\x8a\x1d\xe4\xbd\x81\xa0\xf2\x1e\x30\xc1\xcd\x22\x43\xf1\x0e\x6e\x92\xe8\xe0\x8a\xbb\x36\x5a\xce\xce\x97\xe1\x0c\xeb\x78\x92\xfc\x16\x71\x6e\x96\x43\xb3\x4b\x6d\x07\xe2\xa7\x17\x2d\x3f\xaf\x6e\xff\x44\xcc\x66\x83\x7a\x71\x5c\x66\x39\xc0\xba\x42\xf9\xc5\xe4\x50\x3a\x9c\xad\xc6\xbe\x17\x70\x75\xb6\x8e\xb7\x83\x1f\xbf\x76\xaf\xd9\x34\x6b\x16\xe4\x63\x26\x55\x9a\x6d\xdb\xc1\x87\x8f\xb7\xb7\x17\xa1\xbd\xf2\xda\x99\x07\xbf\x2a\x51\x92\x5b\x33\xd3\xf1\x8d\xea\x7f\xe4\xd6\x38\x52\xfa\x2b\x5a\xaf\x5c\xbd\x02\x50\x52\xb0\x94\x9b\x0b\xba\x24\x76\xa1\x2c\x51\x95\x1b\x15\x93\x29\xbf\x7c\x31\x56\x92\x58\xa3\x34\x54\x86\xc7\xba\x5f\xce\xb4\x99\x4c\x84\xb2\x82\x47\x3f\xd1\xd4\x08\xe3\xb5\x68\x39\x5b\xe4\xef\x43\xa8\x22\x7f\x03\x00\x00\xff\xff\x8e\x73\x93\xa9\x19\x03\x00\x00")

func mainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTmpl,
		"main.go.tmpl",
	)
}

func mainGoTmpl() (*asset, error) {
	bytes, err := mainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tmpl", size: 793, mode: os.FileMode(420), modTime: time.Unix(1498556524, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelAllAllGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8c\x31\x8e\xc2\x30\x10\x45\xfb\x39\xc5\x57\xb4\x45\xd2\xd8\xfd\x4a\x5b\x6c\x48\x8d\x10\x37\x30\xc9\x60\x22\x1c\x3b\x32\xa6\x40\xa3\xb9\x3b\x22\x81\x54\x94\x33\xff\xbd\x67\xad\xe7\xc8\xd9\x15\x1e\x70\x7a\xc0\x8f\x71\x2e\x34\xbb\xfe\xea\x3c\x63\x4a\x03\x07\xa2\x71\x9a\x53\x2e\xa8\x09\x10\xc1\x4f\x4e\xa9\x1c\x5c\xb9\xe0\xf7\x0f\xe6\xf8\x39\x54\xd7\x39\xbb\xe8\x19\xa6\x6b\xb1\xbe\x2a\x91\xcd\x50\xb5\x4b\xd2\x8a\x98\xbd\x9b\x58\xb5\x82\x08\xc7\x41\x95\x1a\xa2\xf3\x3d\xf6\xd8\x85\x74\xe3\xff\x10\xea\x06\xf2\xbd\xb8\xc9\x66\x61\xbb\xf6\x85\xbe\x2b\x4a\xcf\x00\x00\x00\xff\xff\x61\xa1\xa3\x6c\xd1\x00\x00\x00")

func modelAllAllGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelAllAllGoTmpl,
		"model/all/all.go.tmpl",
	)
}

func modelAllAllGoTmpl() (*asset, error) {
	bytes, err := modelAllAllGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/all/all.go.tmpl", size: 209, mode: os.FileMode(420), modTime: time.Unix(1497967059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseDbGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x4f\x6b\xe3\x3a\x14\xc5\xd7\xd2\xa7\xb8\xcf\x3c\x8a\xfd\x48\xe5\xb7\x0e\x74\x31\x89\x87\xa1\xb4\x99\xce\x90\xc2\x2c\x8b\x6c\x5f\xbb\xa2\xb2\xe4\xc8\x72\x69\x10\xfa\xee\x83\xfc\xa7\x71\x87\x74\xa0\xfb\xae\x62\xdd\x73\xcf\xb1\x74\xfd\x53\xd2\x14\x6a\x54\x68\xb8\xc5\x12\xf2\x23\xd4\x42\xb5\x96\xb6\xbc\x78\xe2\x35\x82\x73\xbd\x2a\xd1\x48\xa1\x10\xd8\x77\xde\xa0\xf7\xd4\x39\xf8\xd7\xf2\x5c\x22\xac\xaf\x80\xdd\x0f\x4f\xde\x53\x2a\x9a\x56\x1b\x0b\x31\x25\x51\xc9\x2d\xcf\x79\x87\x69\x77\x90\x11\xa5\x24\xaa\x85\x7d\xec\x73\x56\xe8\x26\x2d\x75\x83\xb5\x4e\x6b\x6d\xda\x88\x92\x07\x58\x6a\xb5\xbe\xec\x0e\xf2\xb2\x34\xe2\x19\x4d\xda\x1c\x07\xfb\x79\xf7\x93\xb0\x5d\x2a\x75\xfd\x8e\x2e\xd4\xd0\x50\xe6\x11\x4d\x28\x7d\xe6\x26\xec\x2b\xdb\x6c\xb5\xaa\x44\x0d\xff\x95\x39\x9b\x17\x94\x92\x32\xbf\x56\x95\x26\x64\x2c\x87\x67\x4a\x3a\x34\x82\xcb\x71\xb5\x14\x12\x4a\xab\x5e\x15\xf0\x0d\x6d\xb6\x89\x13\x38\x49\xe0\x28\x11\x15\x8c\x61\xf0\xcf\x15\x28\x21\x43\x8d\x18\xb4\xbd\x51\x93\x40\x89\xa7\x64\x9e\xcf\x0a\xd0\x98\x30\xc6\xee\x20\xd9\x5d\x8b\x2a\x8e\xc6\x43\xaf\x60\xde\x1e\xdb\xeb\xde\x14\x18\x27\xc9\x90\x1e\xfa\x17\xd1\x2d\x57\xa2\x88\xd1\x98\x64\xc8\x15\xd5\xc9\xb7\xe3\x2f\xd7\xa5\xc4\xad\x56\xaa\x0b\x96\xff\x07\xc3\xfc\x66\xb6\x47\xbb\xec\x88\xcf\xfa\xce\xa6\x86\x7d\xfe\x3d\xf5\xb5\x23\x3e\xeb\x1b\x53\xcb\xbc\xe1\x6d\x38\xfb\x45\x40\x81\x65\xf9\x8e\xb7\x2e\xcb\xd7\x70\x1a\x4e\x26\xb8\xc4\xc2\xae\x61\xe8\xd8\x1d\xf7\x3f\x6f\xa7\x92\xf3\x9e\x12\xe7\xc0\x70\x55\xe3\x04\xe1\x0e\x2d\xef\xbc\x07\xe7\x40\x54\xd0\x70\x5b\x3c\xce\xa0\x8e\x0d\x23\xbf\x30\xbc\x98\x7d\x29\xcb\xa1\xf8\x4b\xd8\xc7\x20\xc4\xce\x41\xdf\xb6\x68\xb6\xbc\x41\xf9\xc6\xe1\xfc\x0a\x22\xe7\x96\xa5\x28\x09\x47\xbd\xc1\x63\x17\x3b\x17\x3e\xcb\x01\xd8\x0f\x23\x1a\x6e\x8e\x37\x78\xfc\xfa\x62\x0d\x87\x88\xf7\x56\x3f\x08\x55\x18\x6c\x50\xd9\xc8\x7b\x6b\x7a\x74\x0e\x65\x87\xde\x57\x5c\x76\x61\xa1\x4a\x3f\xc5\x9f\xfc\x21\x9f\x12\x32\xa9\x30\xfd\x4e\x23\x63\xf7\x86\x17\x78\xa7\xe2\x28\x5a\x81\xd4\x35\xcb\xb0\xe2\xbd\xb4\xb7\xba\xae\xd1\x24\xaf\x38\xc3\x15\x5c\xbc\xb2\xe9\xb2\xcd\x7a\x31\xd7\x30\xeb\xf5\x38\x08\x4f\xff\xe0\xd3\x9f\x00\xdf\x4f\x77\xe0\x1c\xe6\xcb\xfb\x71\x06\xf6\xa5\xfc\x71\xe4\x07\xf3\x27\xf8\x9f\xe0\x7f\x0c\xfc\x37\x4c\x7e\x14\xff\x37\xc4\xce\x97\x60\x2b\x75\x87\xc3\x05\x78\xef\xcf\x7d\xac\xb0\x6c\xc3\x86\xde\x78\xfe\xc6\xd3\x1e\x94\x90\xd4\xd3\xdf\x01\x00\x00\xff\xff\x69\xaa\x17\x12\x65\x07\x00\x00")

func modelDatabaseDbGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseDbGoTmpl,
		"model/database/db.go.tmpl",
	)
}

func modelDatabaseDbGoTmpl() (*asset, error) {
	bytes, err := modelDatabaseDbGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/db.go.tmpl", size: 1893, mode: os.FileMode(420), modTime: time.Unix(1498529049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseTableGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xef\x4f\xeb\x36\x14\xfd\x9e\xbf\xe2\x2e\x42\x4f\x09\x74\xae\xd8\xa6\x7d\x40\xaa\x26\xf5\x07\xac\x1a\xf4\x3d\x41\x11\x9a\xa6\x89\xe6\xc7\x4d\x31\x24\x76\x71\x1c\xa0\x8a\xf2\xbf\x4f\xb6\xd3\x90\x42\x53\xf2\xc6\x7b\x02\xa6\xf1\x85\xf4\x5e\xfb\xc6\xe7\x9e\xe3\x53\xbb\xdd\x2e\xcc\x91\xa1\xf0\x24\x86\xe0\x2f\x61\x4e\xd9\x42\x5a\x0b\x2f\xb8\xf1\xe6\x08\x79\x9e\xb1\x10\x45\x4c\x19\x02\x19\xf6\x27\x5e\x82\x45\x61\x59\x34\x59\x70\x21\xc1\xb1\x00\xec\xd0\x93\x9e\xef\xa5\xd8\x4d\x6f\x63\x5b\x05\x24\x4d\x50\x3f\x44\x89\xd4\xff\xfd\xa5\xc4\xd4\xb6\xd4\xe3\x9c\xca\xab\xcc\x27\x01\x4f\xba\x21\x4f\x70\xce\xbb\x73\x2e\x16\x76\x43\x8a\xb2\x1b\x2a\xd3\x6e\xe8\x37\x0d\xe0\x2a\x6f\x5b\xae\x65\xdd\x79\x02\x2e\xa1\x07\xea\xe5\x64\xc2\xef\xab\x40\x94\x48\xf2\x45\x50\x26\x63\x56\xc5\xd2\xdb\x98\x8c\x84\x98\xf0\x53\x7e\x9f\x56\x51\xbd\x4c\x32\xc1\xfb\x7e\x16\x45\x28\xaa\x78\x26\x69\x9c\x92\x31\x93\x3f\xff\x64\x59\x72\xb9\xd0\x5d\x59\x2c\x50\x0c\xbc\x04\x63\x20\x53\xcf\x8f\xd1\x74\x06\x52\x29\xb2\x40\x42\x6e\x01\xe4\x39\x08\x8f\xcd\x11\x76\x68\x07\x76\xee\xe0\xa0\x07\x64\xc0\xe3\x2c\x61\x29\x14\x85\x1e\x50\xab\xb2\x73\x47\x0e\x29\xc6\x61\x51\x40\x9e\xef\xdc\x91\x23\x3e\x5d\x2e\x54\xc5\x59\xe8\x1f\xd8\x3a\x54\xe6\x6d\xb8\x4e\x39\x7b\x12\x9b\x41\x9e\x23\x0b\x15\x37\x00\x97\xa1\x0f\xbb\xa1\x4f\x86\xfd\x31\x8b\x38\xa8\x3f\x5d\xe5\x47\x7b\xa6\xb2\xf2\x41\x67\xa7\xc2\x63\xa9\x17\x48\xca\x59\x2d\x5f\x58\x56\x94\xb1\x00\x26\x78\xdf\x88\xd2\x71\x61\xb7\xb9\x05\x0a\x3b\xf7\xaf\x15\xde\x6d\x45\x2e\xa8\xbc\xe2\x99\x1c\xf6\x1d\xd7\x4c\x20\x67\x28\xcd\x8a\x75\x44\xa0\xcc\x04\x53\x89\x56\x6b\xaa\x95\x6b\xb9\xb8\x4f\x8d\xa3\xd4\x20\x45\x8f\xa1\x6f\x45\x9a\xe6\xcc\x24\x68\x04\x64\x88\x91\x97\xc5\x12\xaa\xb0\x4a\xa4\x28\x57\x71\x02\xb5\x09\x86\x9a\xf5\xe7\x62\x33\x48\x47\x2d\xaf\x19\x81\x0b\xb5\x36\x69\x38\xab\xfd\xa7\x30\x1d\x61\xbd\xa1\x4a\x07\x3d\xf8\xf4\xa8\x04\x03\x6c\xd8\x3f\xa8\x26\x91\x61\xbf\x63\x82\xfe\x89\xb7\xa8\xc7\xd5\xe7\x8e\x5e\xe6\xd7\xac\xac\x26\x2a\xe7\xb9\xce\xdc\x55\xff\x89\x12\x61\x0f\xe4\x43\xfb\xe2\x47\x28\xcf\x6e\xe3\xd1\x03\x06\x99\xe4\xc2\x71\x41\x19\x07\xa9\x85\x74\x6d\x1a\x55\xe5\x7f\xe8\x01\xa3\x71\x89\xf9\xb1\xd1\x2a\xf7\xac\xfb\xaa\x55\xed\x97\x32\x66\x29\x0a\xb9\xa1\xfd\xaa\xd2\xd3\x75\xd6\x9d\x60\x7d\xff\xeb\x04\x8d\x00\x6f\xc1\xec\x63\xb0\x03\x81\xca\x87\x2f\x3d\x69\xd7\xe5\xb3\x1a\x35\xc9\xe2\x18\xec\x3f\x47\x67\xf6\x9a\xea\xca\xac\xb1\x0c\xb0\xa9\x72\x2a\xbb\x2e\x4c\xd3\xf3\x75\x44\x2b\xb7\xe9\x81\x1e\xef\x18\x97\x3b\x42\x79\x3e\x1d\x4c\x69\x82\x8e\x4b\xce\x19\x7d\x70\x5c\xb7\xf6\x26\x8c\x53\x6c\x5d\xb7\xaa\x78\xcc\x03\x2f\x36\x35\xeb\xb5\xaa\x3d\xb1\xa1\xf2\xbb\x05\xb5\xfa\x7e\xd9\x06\x65\xc3\x66\xdf\xc0\x75\xb6\x08\xff\xe7\xfa\x5d\x83\xfa\x97\x5c\x3f\x3e\xa1\x10\xca\x16\x2a\x53\x2d\x8d\x83\xfb\xd7\xae\xf1\x2a\x35\x60\xcd\xa7\x16\x1e\xa3\x81\x83\x42\xb8\x5f\x67\xbd\xe7\x5a\x4c\xa5\x25\xa9\x83\x8b\xaa\x8c\x42\x70\xf1\xad\x2d\xea\x0d\x65\x9b\xf0\x10\x63\x72\x3e\x1d\xbc\x9e\x5a\x53\xea\xed\xc4\xfa\x28\xad\x37\x17\xe9\x65\x47\x8b\xa5\x26\xd3\x52\x4c\xdf\x41\xa6\x43\x8c\xb1\x92\x69\x7b\xcd\x85\x7a\x5a\xf8\x0a\xc1\xed\x1a\x9a\x9e\x75\xd5\x2c\x28\x5c\x3f\xe5\x3b\xfb\x4f\xd9\x80\xa7\xe5\xd4\x5d\xe1\xe5\x6a\xfd\xa5\xc4\xe7\xc5\xb6\x4c\xdb\x6f\x2b\xc3\xcd\xd3\xd6\x27\xa9\x31\x2b\x5f\x68\x60\x7f\x45\xdc\x11\xca\xe6\x93\xf5\x15\x0a\x74\x02\xce\x42\x75\xbb\xa1\x6c\xde\x01\x4f\xcc\x53\x20\x84\x50\x26\x51\x44\x5e\x80\x79\xe1\xc2\x5f\x7f\xbf\x7c\xee\x4e\x95\x05\x6d\x1b\x98\x17\x8d\x27\xda\x52\xa7\x75\x3f\x3d\xc3\x18\x03\xe9\x7c\x52\x95\x3b\x60\x9f\x8d\x8e\x47\x83\x29\xe4\xf9\x1c\xa5\xae\xa9\xe5\xa3\x0a\xa7\xb5\x53\x3c\x1c\x9e\x7e\x3e\x81\x59\x9e\xd7\xdf\x3b\x83\x8b\xdf\x47\xa7\x23\xb0\x61\x0f\x14\x54\x83\x91\x10\xd2\x72\x07\x00\x44\x5c\xa8\x25\x96\x97\x0b\x23\x6c\x8d\xd8\x8c\x7f\x7e\xc1\x59\x3f\x81\xa6\xad\xb8\x18\xf0\x8c\xc9\x16\x5c\x50\x26\x7f\xfd\x65\xcb\xed\x20\x60\xb2\xa9\x9b\x63\x26\x9d\x55\x27\x03\xfd\xba\x7d\xf7\x3b\xb5\xac\x44\x1f\x30\xd9\x0a\xfc\x21\x15\x69\x1b\xf0\xaf\xbf\xff\x35\x8b\x70\x73\xcf\x3e\x33\xed\x96\xdf\x48\x82\x7b\x1a\xe2\x1e\xd8\x70\x3c\x3e\x19\x4f\x61\xdf\x7e\xb1\xb5\x26\x46\x46\xea\x0b\xdf\x71\xa1\xf7\xe4\x27\x8e\x2a\x91\x97\xd6\x50\x76\x9e\xd1\x58\x07\x8a\xcd\xfc\xb4\xba\x94\x6f\x63\xac\xbf\xd4\xf0\x1d\xe6\x25\x58\x71\x16\x69\x4f\x5f\x63\xec\x63\x13\x36\x53\x3b\x40\x43\xdc\x03\x7b\xd6\xfb\xcd\x2e\x31\x7e\x4c\xb2\x2e\xa8\xbc\x1a\x70\x16\x52\x7d\x87\x57\xb0\x3a\xb0\xb6\xe7\xfe\xf3\xfc\xd5\x1c\xed\x23\xf2\xe8\xdc\xe0\x12\xf2\x9c\x7c\x11\x34\xf1\xc4\xf2\x0f\x5c\x9a\x5f\x12\x3f\x3c\x4d\x6b\x98\x8a\xc2\xec\xb4\x1b\x5c\xbe\x2b\x7e\xfe\x09\x00\x00\xff\xff\x99\x9c\xf5\x42\x4f\x17\x00\x00")

func modelDatabaseTableGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseTableGoTmpl,
		"model/database/table.go.tmpl",
	)
}

func modelDatabaseTableGoTmpl() (*asset, error) {
	bytes, err := modelDatabaseTableGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/table.go.tmpl", size: 5967, mode: os.FileMode(420), modTime: time.Unix(1498812106, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xbf\x4a\x04\x41\x0c\x87\xfb\x3c\x45\x58\x2c\x6e\x05\x67\x7b\xc1\x52\xec\xe4\xd8\x37\x98\x5b\x73\xb9\x20\x9b\x59\xe6\x32\x85\x84\xbc\xbb\x8c\x27\x9c\x6c\x65\x93\x3f\x3f\xf8\xf2\x65\x9a\x90\x49\xa9\x66\x23\x3c\x7d\x21\x8b\x6e\x06\x5b\x5e\x3e\x33\x13\xae\x59\x14\xdc\x1f\x6a\x29\x76\xcc\x76\xc1\xe7\x17\x4c\xf3\xef\x12\x01\xb2\x6e\xa5\x1a\x1e\x00\x71\x60\xb1\x4b\x3b\xa5\xa5\xac\x13\x8b\x3e\x71\x51\x59\xfa\x34\x80\xbb\x9c\x31\xbd\xd5\xd2\xb6\x6b\x84\x7b\xcd\xca\x74\x0f\x3a\xfc\xc7\x11\x31\xb9\xa7\xe3\xed\x83\x5b\x30\xa0\x3b\xe9\x47\x67\x7f\x1a\x8c\x00\xe7\xa6\x0b\x56\x62\xb9\xda\x5c\x9a\xd1\xa1\xf6\x8a\x8f\x2c\x9a\x5e\x95\x45\x69\x44\xff\x87\xfa\xee\x7a\xcf\x2b\x45\xa4\x79\x7f\x73\xdc\xdb\x03\xbe\x03\x00\x00\xff\xff\x73\xeb\x69\x81\x35\x01\x00\x00")

func routerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_routerGoTmpl,
		"router.go.tmpl",
	)
}

func routerGoTmpl() (*asset, error) {
	bytes, err := routerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.go.tmpl", size: 309, mode: os.FileMode(420), modTime: time.Unix(1498544965, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".gitignore": Gitignore,
	"Makefile": makefile,
	"NAME": name,
	"README.md": readmeMd,
	"api_doc.md": api_docMd,
	"app.go.tmpl": appGoTmpl,
	"cfg/config.go.tmpl": cfgConfigGoTmpl,
	"config/config.yaml": configConfigYaml,
	"controller/controller.go.tmpl": controllerControllerGoTmpl,
	"controller/gen_controller.go.tmpl": controllerGen_controllerGoTmpl,
	"controller/gen_route.go.tmpl": controllerGen_routeGoTmpl,
	"controller/route.go.tmpl": controllerRouteGoTmpl,
	"fresh.conf": freshConf,
	"gen_types.go.tmpl": gen_typesGoTmpl,
	"main.go.tmpl": mainGoTmpl,
	"model/all/all.go.tmpl": modelAllAllGoTmpl,
	"model/database/db.go.tmpl": modelDatabaseDbGoTmpl,
	"model/database/table.go.tmpl": modelDatabaseTableGoTmpl,
	"router.go.tmpl": routerGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".gitignore": &bintree{Gitignore, map[string]*bintree{}},
	"Makefile": &bintree{makefile, map[string]*bintree{}},
	"NAME": &bintree{name, map[string]*bintree{}},
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"api_doc.md": &bintree{api_docMd, map[string]*bintree{}},
	"app.go.tmpl": &bintree{appGoTmpl, map[string]*bintree{}},
	"cfg": &bintree{nil, map[string]*bintree{
		"config.go.tmpl": &bintree{cfgConfigGoTmpl, map[string]*bintree{}},
	}},
	"config": &bintree{nil, map[string]*bintree{
		"config.yaml": &bintree{configConfigYaml, map[string]*bintree{}},
	}},
	"controller": &bintree{nil, map[string]*bintree{
		"controller.go.tmpl": &bintree{controllerControllerGoTmpl, map[string]*bintree{}},
		"gen_controller.go.tmpl": &bintree{controllerGen_controllerGoTmpl, map[string]*bintree{}},
		"gen_route.go.tmpl": &bintree{controllerGen_routeGoTmpl, map[string]*bintree{}},
		"route.go.tmpl": &bintree{controllerRouteGoTmpl, map[string]*bintree{}},
	}},
	"fresh.conf": &bintree{freshConf, map[string]*bintree{}},
	"gen_types.go.tmpl": &bintree{gen_typesGoTmpl, map[string]*bintree{}},
	"main.go.tmpl": &bintree{mainGoTmpl, map[string]*bintree{}},
	"model": &bintree{nil, map[string]*bintree{
		"all": &bintree{nil, map[string]*bintree{
			"all.go.tmpl": &bintree{modelAllAllGoTmpl, map[string]*bintree{}},
		}},
		"database": &bintree{nil, map[string]*bintree{
			"db.go.tmpl": &bintree{modelDatabaseDbGoTmpl, map[string]*bintree{}},
			"table.go.tmpl": &bintree{modelDatabaseTableGoTmpl, map[string]*bintree{}},
		}},
	}},
	"router.go.tmpl": &bintree{routerGoTmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


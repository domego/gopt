// Code generated by go-bindata.
// sources:
// .gitignore
// Makefile
// NAME
// README.md
// app.go.tmpl
// cfg/config.go.tmpl
// config/config.yaml
// controller/controller.go.tmpl
// controller/gen_controller.go.tmpl
// controller/gen_route.go.tmpl
// doc/api_doc.md.tmpl
// fresh.conf
// gen_types.go.tmpl
// main.go.tmpl
// model/all/all.go.tmpl
// model/database/db.go.tmpl
// model/database/table.go.tmpl
// router.go.tmpl
// webapp/api.vue_resource.js.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\xc1\x4a\xc3\x40\x10\x86\xef\xf3\x14\x03\xbd\x85\x76\xf7\x20\x28\xf4\x28\xf6\x20\x28\x8a\xf8\x00\xdd\x6c\xa6\x9b\x91\x49\x26\xec\xcc\x5a\xf3\xf6\x92\xea\xed\xe3\xff\x3f\xbe\x1d\x3e\xf2\x9c\x2a\x93\xe1\x45\x2b\x2e\x55\x4b\x4d\x93\x61\x9a\x07\x5c\xa4\x15\x9e\x0d\xba\x40\x3f\x04\x5d\x18\x44\xa0\x0b\xa6\x1b\xae\xc2\x3d\xc0\x0e\x3f\xc9\x1c\xfb\x2d\xb1\xee\xb1\x6f\x2c\x03\x5e\xd9\x47\x3c\x17\x45\xdf\xbe\x43\x3e\x43\x17\x36\xdc\xf4\xb7\xe6\x4b\x73\xd4\x0b\xfa\x48\x58\x14\xb3\x7e\x53\x4d\x85\xd0\x55\x65\x8f\xb6\x50\xe6\x0b\xe7\x24\xb2\xe2\x75\xa4\x19\x9b\xd1\x7f\xf2\x85\x9d\x9e\x9f\x4e\xd0\x05\x6d\xb7\xd8\x7b\xd5\x2f\xca\x7e\x10\xcd\x49\xb0\x08\x0f\x84\x39\xe5\x91\xf6\xf8\x71\x3a\xe2\xe8\xbe\xd8\x31\xc6\xc2\x3e\xb6\x3e\x64\x9d\xe2\x6b\x32\xa7\x3a\xf1\x3c\x58\xbc\xf9\x91\xcd\x1a\x59\x7c\xb8\xbb\x87\xf0\xb7\x00\x88\x96\x08\x3e\x2d\x11\x7e\x03\x00\x00\xff\xff\x51\x45\x48\x4d\x1e\x01\x00\x00")

func GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_Gitignore,
		".gitignore",
	)
}

func Gitignore() (*asset, error) {
	bytes, err := GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".gitignore", size: 286, mode: os.FileMode(420), modTime: time.Unix(1498529781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _makefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xf2\x73\xf4\x75\xb5\x4d\x48\x4e\x2c\x51\x00\xb1\x12\xb8\xf4\x02\x3c\xfc\xfd\x22\xad\x14\x92\x4a\x33\x73\x52\xb8\xb8\xc0\x94\x15\x17\xa7\x43\x7a\x3e\x44\x48\x41\x37\x5f\x21\x29\x33\x4f\x5f\x45\x03\xa4\x5e\x93\x8b\x2b\xad\x28\xb5\x38\x03\xa4\x02\xcc\x50\xd0\x4d\x56\x00\x33\xf4\x92\xf3\xf3\xd2\xb8\x00\x01\x00\x00\xff\xff\xaa\x71\x32\x0b\x5e\x00\x00\x00")

func makefileBytes() ([]byte, error) {
	return bindataRead(
		_makefile,
		"Makefile",
	)
}

func makefile() (*asset, error) {
	bytes, err := makefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Makefile", size: 94, mode: os.FileMode(420), modTime: time.Unix(1498556775, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _name = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\xe5\x02\x04\x00\x00\xff\xff\xc5\x48\x82\xef\x0a\x00\x00\x00")

func nameBytes() ([]byte, error) {
	return bindataRead(
		_name,
		"NAME",
	)
}

func name() (*asset, error) {
	bytes, err := nameBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME", size: 10, mode: os.FileMode(420), modTime: time.Unix(1497174547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xa8\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\xe5\xe2\x32\xd4\x53\x78\x3a\x7f\xd7\xb3\x39\x6b\x5e\x2e\xdc\xf9\x7c\xf6\xba\xe7\xbb\x27\x3f\x9b\xd7\x62\xcd\x65\xa4\xa7\xe0\x1f\xe4\xab\xa0\xad\xe0\xe2\xe4\x9c\x98\x9c\x91\xaa\x11\x94\x9a\x92\x59\xac\xef\x9b\x9a\x9b\x0c\xe2\x6a\x5a\x73\x19\xeb\x29\x38\x06\x78\x3a\x16\xa5\x17\x5b\x73\x99\xe8\x29\x84\x54\x16\xa4\x16\x5b\x73\x01\x02\x00\x00\xff\xff\x0f\x48\xaa\x33\x5c\x00\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 92, mode: os.FileMode(420), modTime: time.Unix(1497174569, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\xbd\x6a\xdc\x4e\x14\xc5\x6b\xcd\x53\x5c\x0b\x0c\x12\xec\x5f\xe2\xdf\x1a\xb6\x58\x92\xc5\x5e\xd8\x2c\x46\xb2\x2b\x63\xc2\xac\xe6\x6a\x3c\xac\x34\x57\xcc\x68\xd7\x98\xe0\x27\xc8\x57\x95\x2a\x55\xba\xbc\x81\x9b\x80\x5f\x26\x1f\xee\xf2\x0a\xe1\x8e\x56\xc4\x31\xa4\x49\x27\xe6\x9c\x39\xe7\xe8\x37\x9d\xac\x36\x52\x23\xb4\xd2\x58\x21\x4c\xdb\x91\xeb\x21\x11\x51\xec\x6f\x7c\x25\x9b\x26\x16\x02\x20\xd6\xa6\xbf\xda\xae\xb3\x8a\xda\xbc\xde\xad\xa9\xda\xe4\x68\x55\x83\xde\xc7\x4f\x54\x6d\xec\x7f\x9a\xac\xa9\xf8\xeb\xa9\xa8\xa8\x45\x4d\xac\x6c\x4c\xef\xf3\xd6\x28\xd5\xe0\xb5\x74\xf8\x37\x23\x05\x5f\x43\x3a\x16\xa9\x10\xf5\xd6\x56\x70\x25\xb9\x78\xd6\x75\x49\x0a\xaf\x44\xa4\x8d\xcd\x4a\xec\x5f\x90\xc2\xa4\x22\x5b\x67\x73\xbb\x4b\x45\xe4\x68\xdb\x23\x1c\x4d\x81\xf5\x15\x5e\x27\xe3\x59\x76\xee\x31\xf9\x5d\x9c\x2d\x49\x6b\x74\x49\xfa\x87\xce\x97\x0a\xac\x68\x87\xee\x66\x90\x50\x1b\xdf\x17\x6c\x48\x82\x2d\x15\x91\x47\xb7\x43\xc7\x1d\x7b\x14\xdc\x53\x86\xc3\x61\xc9\x4c\x29\x87\xde\x4f\x60\xbc\x91\xe7\xf0\xfd\xed\x87\x87\x77\x77\x0f\xf7\x1f\x7f\x7c\x7e\x7d\x5e\x16\xff\x7f\xbd\xff\xf4\xed\xfd\xdd\xcf\x2f\x6f\x1c\x36\x24\xd5\x33\xb2\xb5\xd1\x63\x76\x56\x1a\x6d\x65\x73\x42\xb4\xf1\x17\x63\xc9\x69\x31\x7f\x59\x2e\x8e\x57\xb3\xe5\xe5\xc5\xfe\x89\xb2\x72\x71\xcc\x61\x97\x30\x05\xd9\x75\x68\x55\xf2\x8f\x01\x13\x60\xc6\x03\xd9\x68\x20\x5d\x84\x61\x43\x10\x53\xbc\x4d\x85\x88\x4c\x0d\x23\x6c\x38\x18\x20\x3f\xc7\xf5\x56\xf3\x33\x84\xbb\x0d\xe9\x6c\x61\x6b\xaa\x93\xf8\xd0\x1f\xc1\xd2\xf8\x1e\xad\xb1\x1a\xa4\x55\xc0\xe3\xf8\xfb\xe4\xec\xec\x14\xc8\xc2\xa1\x8f\x27\x3c\x7c\x25\x5b\x9c\xc0\x63\x76\xdc\x27\x22\x74\x01\xf3\xfe\x9f\x86\xac\x99\x55\x81\x35\x4f\x32\x35\xb0\xe5\x60\x0a\xd6\x34\x8f\xa6\xcf\xad\x62\x39\x8c\x99\x3b\x47\x2e\xac\x89\x27\xec\x0e\xc9\xb7\xe2\x57\x00\x00\x00\xff\xff\x5b\x7f\xec\x3c\xfe\x02\x00\x00")

func appGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_appGoTmpl,
		"app.go.tmpl",
	)
}

func appGoTmpl() (*asset, error) {
	bytes, err := appGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.go.tmpl", size: 766, mode: os.FileMode(420), modTime: time.Unix(1498556577, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cfgConfigGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc1\x8e\xd3\x30\x10\x3d\xc7\x5f\x31\x58\x02\x25\x68\x95\x00\xc7\x4a\x39\xa0\xa5\x48\x2b\x55\x1c\x56\xe2\x4c\xdd\x64\xe2\x5a\x75\xed\xc8\x76\xb2\xbb\xaa\x2a\x71\xe3\xc0\x9d\x13\xf0\x09\x88\x13\x17\x24\xbe\x66\xcb\x77\x20\xdb\x49\xda\x2e\x17\xa8\x54\x35\x79\xf3\xfc\xfc\xe6\xcd\xb4\x65\xd5\x86\x71\x84\xaa\xe1\x84\x88\x6d\xab\x8d\x83\x94\x24\x54\xe8\x42\xe8\xce\x09\x49\x49\x42\xb5\xa5\x84\x24\x94\x0b\xb7\xee\x56\x79\xa5\xb7\x45\xad\xb7\xc8\x75\xc1\xf5\x46\x38\x5b\x48\xcd\x29\x49\xee\xd8\x56\x02\xe5\xba\xdd\xf0\x5c\xa8\xc2\xbf\xe6\xfd\x0b\x4a\x32\x42\x7a\x66\x20\x25\x00\x45\x01\x97\x5a\x35\x82\xbf\x16\x12\xa1\x0a\x8f\xf0\xfb\xd3\x87\xfb\x9f\x3f\x0e\x9f\xbf\x1f\xbe\xbc\x27\x70\x4a\x28\x81\x46\x4e\x11\x7f\x72\xaf\x49\x8f\x3a\xa3\xc2\xe1\xdb\xd7\xfb\x5f\x1f\x87\xb3\xf0\x34\x2a\xf8\x7b\xa7\xfb\x46\xa6\x75\xa6\xab\x1c\x71\x77\x2d\x8e\x95\x08\xc1\x8e\x24\x2f\xeb\xda\xa0\xb5\xe0\x21\xa1\x38\x2c\xfd\x75\x33\xca\x22\x4c\x97\x24\x99\xab\x1e\xc2\xe7\x9c\x81\xaa\xf7\xd5\x85\xe6\x0b\xec\x51\x3e\xa8\x4a\xcd\xdf\x49\x8f\xd3\x25\xd9\x07\x4f\x06\x59\x3d\xdc\xee\x1f\x81\xa9\x1a\x5a\x66\xec\x18\x89\x6f\x9e\x34\x9d\xaa\xe0\x7a\x62\xa6\x78\x2b\x1c\xac\xb4\x96\xd9\xd8\x21\xec\x08\xc0\xca\x5e\x00\x1a\x03\xb3\x12\xe2\xc0\x72\x7f\xc6\x2b\xa4\xc7\x24\x33\x02\x20\x9a\xc0\x7b\x54\x82\x12\x32\x1c\x05\x90\x9a\xe7\x73\x63\xb4\x69\x52\x2a\x35\xab\xc7\x98\x1a\x9f\x7e\xc3\x84\xc4\xfa\x02\xdc\x1a\xa1\x65\x6e\x0d\xc2\xc2\x63\x4b\x2f\xe0\x5c\x37\x2a\x7b\x73\x51\x13\x40\xdb\x7c\x7e\x2b\x5c\xfa\x3c\x96\xf7\x24\x7e\x07\xed\x59\x09\x4f\xa2\xc2\xce\xa3\xde\x53\x09\x61\x59\xde\xaa\x2d\x33\x76\xcd\x64\xea\x9b\x8a\xf4\x7f\x71\xde\x8d\xe7\x26\xfb\x83\xf3\xe0\x16\x8d\xf9\x2f\x9b\x06\x5d\x67\xd4\x20\xe5\x07\x16\x06\x71\xa5\x84\x4b\xcf\x93\x0f\xcb\x56\x9e\x8e\xc8\x99\x2e\x44\xe2\xc9\x03\x94\x1d\x15\x3d\x32\xe9\x5d\xa3\xcf\x3b\xcd\x82\x92\xc2\x9b\xcb\x29\x9c\x13\xbd\x86\x49\x3b\xce\xee\xc8\xf9\x2b\x87\x2b\xd5\xe8\x26\xa5\x06\x4f\x46\x48\x63\x53\x83\xc7\xe9\x70\x00\x1f\xd8\xdb\x9f\x35\x39\x16\x82\xbe\x57\x7f\x85\x0d\xeb\xa4\x5b\x68\xce\xd1\xe4\x71\xc1\xcb\x50\x79\x83\x37\xe1\x35\x2c\x5a\x3e\x6e\xff\xe0\x57\xa2\x8a\xf8\x5c\xf5\x19\x94\x25\x3c\x1b\x1c\x8f\xa0\xff\x77\xd7\xb8\xea\x38\x1d\x3c\xfc\x09\x00\x00\xff\xff\xf2\x81\x50\xee\x8b\x04\x00\x00")

func cfgConfigGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_cfgConfigGoTmpl,
		"cfg/config.go.tmpl",
	)
}

func cfgConfigGoTmpl() (*asset, error) {
	bytes, err := cfgConfigGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cfg/config.go.tmpl", size: 1163, mode: os.FileMode(420), modTime: time.Unix(1498556508, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x4c\x49\x29\x4a\x2d\x2e\xb6\x52\x50\x32\x34\x32\xd7\x33\xd0\x33\xd0\x33\xb4\xaa\xae\xd6\x0b\xc8\x2f\x2a\xa9\xad\x55\xe2\x4a\xcd\x2b\xb3\x52\x50\x4a\x49\x4d\x2a\x4d\x57\xe2\xca\xc9\x4f\x8f\xcf\x49\x2d\x4b\xcd\xb1\x52\x50\x2a\x29\x4a\x4c\x4e\x55\xe2\x02\x04\x00\x00\xff\xff\x8b\x1d\xeb\xd8\x3f\x00\x00\x00")

func configConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_configConfigYaml,
		"config/config.yaml",
	)
}

func configConfigYaml() (*asset, error) {
	bytes, err := configConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/config.yaml", size: 63, mode: os.FileMode(420), modTime: time.Unix(1497174631, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerControllerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x6a\xeb\x30\x10\x85\xf7\xf3\x14\x43\x56\x49\xc8\x95\x9f\xe0\x2e\xfa\x93\x6d\x08\x69\xf7\x45\x91\xc7\x8a\x88\xad\x31\xa3\x51\x69\x10\x7a\xf7\x62\xa7\x0d\xa5\x90\xee\x0e\xf3\x7d\xcc\x81\xd3\x34\xe8\x29\x92\x58\x25\x3c\x5e\xd0\x87\x38\x2a\x8c\xd6\x9d\xad\x27\x2c\xc5\xec\xaf\x71\x67\x07\xaa\x15\x20\x0c\x23\x8b\xe2\x12\x10\x17\x3e\xe8\x29\x1f\x8d\xe3\xa1\xf1\x21\xfe\xf3\x1c\x83\x9b\xd2\xe2\x17\x6c\x79\x20\xcf\x13\x39\x07\x4d\x7f\xd3\x66\xb4\x62\x87\xbb\x12\xcf\x4e\xcf\x7e\x01\x2b\x80\x77\x2b\xf8\x86\xff\xb1\x67\x6f\x5e\xc5\x3a\xea\x6e\xa7\xc9\x33\x07\x8a\x2d\xc9\x4b\x76\x8e\x52\x02\xbd\x8c\x84\x8f\x36\xd1\x7e\xaa\xc0\xb9\x68\xd6\x6e\x37\x80\x52\xc4\x46\x4f\x68\x0e\x9c\x95\x52\xad\xd0\x34\xd8\x72\x29\xe6\x3a\xc0\xb4\xc8\x33\x25\x57\x2b\x74\x39\xba\x9f\x68\xe9\x70\xed\x43\x34\x4f\x1c\x95\x3e\x74\x73\x2d\x48\xb8\xbe\x19\x0f\xe2\xd3\x0a\x4b\x09\x1d\x86\xb4\x63\xdd\x0e\xa3\x5e\xd0\x1c\x28\xe5\x5e\x6b\x5d\xca\x1c\x30\x44\x25\xe9\xac\xa3\x52\x37\x78\xb2\x69\x2b\xc2\x82\x47\xe6\x7e\x55\x0a\xc5\xb6\xd6\x02\x78\xff\x8d\x90\x66\x89\x5f\x26\x54\xf8\x4e\x9f\x01\x00\x00\xff\xff\x05\xf1\x61\x1c\xe9\x01\x00\x00")

func controllerControllerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerControllerGoTmpl,
		"controller/controller.go.tmpl",
	)
}

func controllerControllerGoTmpl() (*asset, error) {
	bytes, err := controllerControllerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/controller.go.tmpl", size: 489, mode: os.FileMode(420), modTime: time.Unix(1500744106, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerGen_controllerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\xcd\x6a\xe4\x46\x10\xbe\xf7\x53\x14\x22\x31\x52\x98\x48\xf7\x81\x39\xf8\xef\x30\x24\x71\x06\xdb\xb7\x10\xe2\xb6\x54\x6a\x77\x2c\x75\x2b\xdd\x2d\x93\x41\x34\x04\x83\xcf\x39\xe5\x1c\x72\x0f\x24\x3e\x2d\xec\xfb\x8c\x77\x1f\x63\xe9\xd6\xef\xfc\xd8\x2c\xab\xcb\x94\xea\xab\xae\xae\xfa\xea\x2b\x4d\x92\x00\x43\x81\x8a\x1a\x84\xdb\x35\x30\x2e\x2a\x43\x2a\x9a\xde\x53\x86\xd0\x34\xf1\xaa\x35\x2f\x68\x89\xd6\x92\xa6\xf9\x8a\x29\x59\x57\xee\x15\xe6\x0b\x88\x3b\x3f\xe1\x65\x25\x95\x81\x90\x00\x04\x79\x69\x02\xe2\x0c\xc6\xcd\x5d\x7d\x1b\xa7\xb2\x4c\x18\x17\xdf\x32\x29\x78\xea\xac\x60\x07\xcc\x64\x89\x4c\x3a\xe4\x9e\x1b\xfd\x36\x9a\x54\x54\xd1\xf2\xd5\x20\xf9\x56\x06\x0f\x26\x85\x64\x01\x89\x08\x79\xa0\x0a\x7e\x81\x05\x14\x92\xc5\xd7\x8a\xa6\x98\x0f\x2e\x17\x17\x5f\xa2\xc8\x50\x5d\xd5\x69\x8a\x5a\x0f\x50\x6d\x78\xa1\xe3\xa5\x3e\x2f\x2b\xb3\x1e\xbc\x79\x69\xe2\xab\x4a\x71\x61\x72\x42\x9a\x46\x51\xc1\x10\xe2\x4b\x59\x1b\xd4\xd6\x92\x24\x71\x54\xb6\x5c\x1d\x2b\xa6\xdd\xdb\x19\xea\xd4\xda\x8f\xff\xbd\x7b\x79\x7e\xdc\xfc\xf9\xf8\xf2\xd7\xff\xc4\xac\x2b\xdc\x09\xd4\x46\xd5\xa9\x81\x86\x00\x24\x09\x9c\x50\x8d\x2b\xd7\x3f\x6c\xfe\x7e\xff\xe1\x9f\x3f\x36\x4f\xff\x6e\x9e\x9e\xbb\xd3\x30\xc2\x04\xe0\xb4\xe0\x28\xcc\x52\xe4\x12\xfc\xe3\x69\xf3\x7d\x8d\x88\x0b\xa3\xe9\x1d\x1e\xaf\x96\xdf\xe1\xda\x87\x69\xa3\xb8\x60\x03\xa0\x58\x5d\xa2\x30\x1a\xe0\xa7\x9f\x07\xa8\x69\x80\xe7\x10\x8f\xa0\xb5\xde\xdb\x76\x5d\x51\xa5\x5d\xc6\x11\x1e\x23\x7d\x20\x8c\x2d\x3a\xeb\x7a\x5d\x39\xeb\x26\x97\xaa\x9c\x07\x4d\x53\x3b\xd6\x0b\x2e\xb0\x17\x57\x00\xbf\x6a\x29\x0e\x43\x37\xd0\x34\x28\xb2\xae\x80\xd6\xb2\xc4\xf1\x7d\x26\xb7\x6e\x69\xd9\x26\x79\x2d\xd2\x29\x14\xa6\xf0\x0d\xe3\x22\x3e\x95\xc2\xe0\xef\x26\xf2\x44\xb7\x0a\x73\xf2\xde\x9a\x45\xe3\x6b\x9f\x10\x36\x87\xad\x9a\xc6\xcd\xb0\x76\x7e\xa8\xd8\x19\x01\x70\x85\xa6\xf1\x09\x17\x59\x78\xd4\xde\x13\x0f\x53\x8b\x86\xbb\x27\x33\x82\xc5\x64\x74\x2b\xc7\xed\x88\x85\x69\xe4\xfb\xde\x9a\x86\xb5\x3b\x17\x44\x6e\x17\x9b\xcf\x9c\x8f\x4f\xc6\xf5\x49\xcd\x8b\x6c\x29\xa0\x9b\x8e\xf7\x0a\x69\x20\xfe\xb1\x32\x5c\x0a\x5a\x74\x93\x74\x0f\xcf\xb7\x97\x22\xec\x7a\x18\xc8\x6b\x59\xed\x9f\xc9\x6e\x9d\x2b\x25\x55\x98\xce\xe0\xa8\x73\xea\xca\xbb\x7e\x40\xad\x29\xc3\xe9\x29\x38\x95\x19\xce\xdb\xc3\x3e\xc6\xbd\xf7\x75\x7f\x4f\xd3\xfb\xd9\x34\xb8\x4b\xb0\x33\xa0\x5e\x0e\x5c\x83\xc2\xdf\x6a\xae\x30\x0b\xa6\xc7\x6c\x34\x79\x51\x68\x6a\x25\x06\x87\xed\xd4\xd5\xb1\x3d\xd2\xd0\x11\x76\x21\x8d\x6f\x1e\xe2\x33\xcc\x69\x5d\x98\x2f\x27\x68\x17\x85\x45\x2b\xe0\xdd\xb4\xb6\x57\xfc\xf6\xcf\xb8\x09\x96\x4c\xb6\xa2\xd7\xc9\xf6\x5e\x5b\x3b\x0a\x63\x0f\x22\x93\x6a\x76\x3e\x07\x0b\xa0\x55\x85\x22\x0b\x0f\xc2\xb3\xe9\xf7\x30\x0c\xbe\x7e\x08\x66\x93\xae\xac\x8d\xa2\xb1\x2a\xbb\x5f\x23\xd7\x1d\x95\x97\xa8\x7d\xcb\xd9\x74\x61\x67\xd0\xeb\x7a\xef\xd8\x38\x84\xfe\x24\x71\x83\x74\xe6\x0c\xee\xa8\xf6\xc2\x71\x7b\xfd\x4a\x42\xe2\x67\x35\x04\xb6\x43\x39\xa4\xd7\x36\x67\x2b\x97\x41\x28\xee\xb2\xfd\x3f\x8e\x49\xf8\xf8\x81\xea\xad\x4f\x01\x00\x00\xff\xff\xd5\xcd\x0c\x1d\x7d\x07\x00\x00")

func controllerGen_controllerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerGen_controllerGoTmpl,
		"controller/gen_controller.go.tmpl",
	)
}

func controllerGen_controllerGoTmpl() (*asset, error) {
	bytes, err := controllerGen_controllerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/gen_controller.go.tmpl", size: 1917, mode: os.FileMode(420), modTime: time.Unix(1501182111, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerGen_routeGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xcd\xce\xd3\x30\x10\xbc\xfb\x29\x56\x11\x87\x04\x15\xe7\x8e\xf4\x1d\xd0\xf7\x21\xe0\x40\x89\x0a\x3c\x80\x9b\x6c\x5c\xab\xb1\x1d\xd9\x0e\x3f\x5a\xed\xbb\x23\x3b\x81\xaa\x95\x5a\x2e\xed\x7a\x66\x67\x77\xc6\x4e\xdb\x82\x46\x87\x41\x25\x84\xe3\x6f\xd0\xc6\xcd\x49\xcc\xaa\x3f\x2b\x8d\x40\x24\xbb\xb5\xdc\x2b\x8b\xcc\x82\x08\x5e\xa9\x69\xea\x7c\x4c\xf0\xf6\x09\xe4\xbb\xad\xde\x28\x1d\xfc\x32\xe7\xd6\x4c\x2e\xf3\x8c\xe1\x59\x59\x9c\x40\x16\x8c\x59\x18\x3b\xfb\x90\xa0\x16\x00\x95\x36\xe9\xb4\x1c\x65\xef\x6d\xab\x8d\x7b\xa3\xbd\x33\x7d\xae\xaa\x1b\x72\xf0\x16\xb5\xcf\xcc\xd9\xa4\xd8\x5a\x33\x0c\x13\xfe\x54\x01\x73\x23\x51\x50\x4e\x23\xc8\x83\x5f\x12\x7e\x2a\xe3\x23\x73\x1e\x41\x24\x99\x2b\x22\x74\x03\xb3\x68\x84\xf8\xa1\x02\x10\x5d\x4c\x32\x17\xd1\x87\x7c\x86\xd7\xda\xb8\x75\x48\x28\x80\x18\x17\xd7\xc3\x01\xb5\x89\xa9\xc0\x75\xc8\xbf\x6b\xdf\x7b\xa7\x8d\xc3\x06\xa8\x38\xb8\x33\xf1\x09\x8a\x42\x96\x53\x9d\xed\x14\xb2\x0b\x38\x9a\x5f\xcc\x55\xf3\x40\x2c\xbf\x47\xac\x2f\x49\xe5\xb3\xb7\xd6\xbb\x8f\xca\x0d\x13\x86\xba\xd9\x5d\xc7\xde\xf0\xc8\x5c\x32\xef\xb6\xcc\x65\xc1\xcd\x0d\xad\x77\x03\xd0\xb6\xf9\x71\x5f\x30\xf6\x1b\x70\xd7\x09\x51\x79\x48\x90\x9f\x31\x9d\xfc\xc0\x5c\xa2\x74\x2a\x9d\x98\xab\x1d\xbc\x78\x22\xb9\x8a\x1a\x20\x32\xe3\xbf\x0f\x24\xbb\x01\x33\x82\x89\x7b\x9f\xfe\xca\xa1\x9a\x7d\x4c\xd5\xff\x96\x76\x5f\xbe\x7e\x7b\xb8\xa7\x04\xbc\xfe\x13\x00\x2c\x58\xfc\x09\x00\x00\xff\xff\x19\xa9\xad\xea\xd1\x02\x00\x00")

func controllerGen_routeGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerGen_routeGoTmpl,
		"controller/gen_route.go.tmpl",
	)
}

func controllerGen_routeGoTmpl() (*asset, error) {
	bytes, err := controllerGen_routeGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/gen_route.go.tmpl", size: 721, mode: os.FileMode(420), modTime: time.Unix(1500516527, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docApi_docMdTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xbd\x6e\xdb\x30\x14\x85\x77\x3e\xc5\x45\xa8\x21\x11\x62\x3d\x80\x80\x0e\x06\x62\x18\x2e\xd0\x44\xa8\xfd\x00\x62\x65\xda\x66\x60\x51\x02\x45\x19\x0d\x2e\x2e\xd0\xb5\x4b\x32\x26\x63\x81\xb6\x63\x93\xa5\x9d\xfa\x3c\x11\xe2\xb7\x28\x48\xc9\xf2\xcf\xd2\xc9\xd7\xfc\x8e\xce\x39\x97\x12\xe7\x30\x4c\x26\xcd\xfd\xcf\xd7\x87\xef\x6f\x2f\xbf\x9b\xa7\x7b\xe0\x9c\x21\xaa\x05\x44\x63\x53\xd4\x65\x45\x84\x68\x84\x5e\x4a\x08\xd4\x25\x04\x1b\x88\xdf\xed\x11\x43\x0c\x96\x6e\xbe\x16\xb9\x74\x24\xd8\x44\x6e\x24\x62\x9c\x73\x40\x54\x3a\x83\x40\x11\x45\x80\xd8\xb3\x73\x3f\x5f\xc9\x2a\x23\xba\x00\xee\x03\x83\x52\xd8\x55\x62\xe4\x42\x7d\xee\x7c\x3e\x16\xb5\x95\xed\x89\x0f\xea\x4a\xdc\xf6\x25\xbc\xa0\x6a\xa3\x8e\xb2\xba\xf1\xf6\x7f\xb1\x9c\xb1\x10\xc2\xf0\xfd\x74\x98\x4c\xe2\x30\x84\x14\x31\x13\xb9\x5c\xc3\x7e\x27\xef\xd6\x3b\xa4\x5e\x9f\x08\xbb\xea\xe4\x07\xad\xdd\x3d\x05\x9b\xc8\xc1\x9d\xf0\x83\xb4\xab\x62\xee\xa4\x88\xa0\x16\x90\x15\xda\x0a\xa5\x2b\xb7\x5d\xcb\xe0\x6c\x3c\x9a\x9d\x01\x51\x3a\x1e\xcd\x52\x28\x0c\x20\x4a\x3d\x27\x4a\x93\x9b\xe9\xac\x75\x19\x9a\x65\x9d\x4b\x6d\xab\x38\x0c\xfd\x8b\xd1\x85\x75\x0e\xfd\x39\x51\xf3\xf8\xad\x7b\xce\x0b\x8e\xe1\xee\xe6\x4a\x61\x2a\x39\x4c\x26\x3d\x3a\xd1\x31\x00\x57\xb4\xd6\x73\x69\xd6\x4a\x4b\xe8\x96\x8e\x01\x31\x9a\xdd\x95\xb2\x73\x8f\x6e\x4a\xab\x0a\x2d\xd6\x44\x97\xaf\x0f\x2f\xdb\x2f\x5f\xfd\xb1\xaa\xae\x0b\x3b\xca\x4b\x7b\x07\xd1\x95\x5c\x88\x7a\x6d\x89\xce\xb7\x7f\x9f\xde\x9e\x7f\xc4\x88\xd6\xa8\x7c\x5a\x8a\x4c\x1e\xd0\x8b\xbe\xf4\xbe\xfb\xb1\x4d\x95\x19\xf5\x49\xba\xa0\x5f\x8f\xcd\xf3\x9f\xf6\x0b\x8d\x11\x0f\xd0\xa9\x87\xff\x61\x0c\x06\x83\xc1\x80\xed\xfe\x9e\xd0\x7f\x01\x00\x00\xff\xff\x3d\x52\x3c\x76\xf6\x02\x00\x00")

func docApi_docMdTmplBytes() ([]byte, error) {
	return bindataRead(
		_docApi_docMdTmpl,
		"doc/api_doc.md.tmpl",
	)
}

func docApi_docMdTmpl() (*asset, error) {
	bytes, err := docApi_docMdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc/api_doc.md.tmpl", size: 758, mode: os.FileMode(420), modTime: time.Unix(1500638515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _freshConf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4b\xcc\xc9\x4c\x89\x4f\xad\x28\xb1\x52\x80\x01\xbd\xf4\x7c\x1d\x05\xbd\x92\x82\x1c\x10\x99\x0b\xa6\x32\x4a\x72\x41\x54\x65\x62\x6e\x0e\x57\x5e\x7e\x7c\x51\x6a\x52\x69\x66\x0e\x42\x1b\x6e\xc5\x99\xe9\x79\xf9\x45\xa9\x29\x08\xc3\x15\x14\x12\x8b\x8b\x53\x4b\x8a\x75\x14\x4a\x72\x0b\x74\x14\x72\xf2\xd3\xb9\x00\x01\x00\x00\xff\xff\xc8\x0e\x9b\x57\x83\x00\x00\x00")

func freshConfBytes() ([]byte, error) {
	return bindataRead(
		_freshConf,
		"fresh.conf",
	)
}

func freshConf() (*asset, error) {
	bytes, err := freshConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fresh.conf", size: 131, mode: os.FileMode(420), modTime: time.Unix(1498529775, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gen_typesGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8d\xc1\x4a\x03\x31\x10\x86\xef\xf3\x14\x3f\xcb\x1e\xf4\x92\xd2\x6b\xa1\x4f\x20\x8a\xa0\x78\xb5\x69\x33\x2c\xd5\x34\x09\xd9\xd9\xc8\x32\xcc\xbb\x4b\xba\x07\xc1\xdb\x30\xf3\x7d\xdf\xec\x76\x13\x27\xae\x5e\x38\xe0\xbc\x62\x2a\x42\xc5\x5f\xbe\xfd\xc4\x50\x75\xaf\xdb\x68\x46\x74\xbd\x95\x5c\x05\x0f\x04\x0c\x72\xbd\xf1\x40\x8f\x44\xcd\x57\x7c\xe2\x88\xbe\x70\x2f\xf9\x87\x48\xb5\xfa\x34\x31\xc6\x86\xc3\x11\x92\xdf\x72\x15\x0e\xcf\xbe\xc0\xbd\xaf\x85\x67\x33\x92\xb5\xf4\xf8\xd8\xdc\x13\xaf\x30\xc3\x2c\x75\xb9\x08\x94\x80\x3f\x7d\xff\xdf\x1f\x9b\xfb\xf0\x71\x61\x98\xdd\xc1\xb1\xed\x7b\xc0\x0c\xaa\x69\x89\xd1\x9f\x23\xf7\x17\xdd\xdd\x48\x33\x9c\xbe\xe6\x9c\x0e\x83\xea\x92\x02\xd7\x78\x4d\xdb\xf9\xee\x0d\x27\xa8\x72\x0a\x66\x64\xa4\x0a\x4e\xa1\xb7\x7f\x03\x00\x00\xff\xff\x19\x31\x59\xf6\x12\x01\x00\x00")

func gen_typesGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_gen_typesGoTmpl,
		"gen_types.go.tmpl",
	)
}

func gen_typesGoTmpl() (*asset, error) {
	bytes, err := gen_typesGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen_types.go.tmpl", size: 274, mode: os.FileMode(420), modTime: time.Unix(1497164150, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\xc1\x6a\xdc\x30\x10\x3d\x4b\x5f\x31\x15\x04\xec\x62\xe4\x1e\x42\x0f\x01\x1f\x42\x49\x4b\x0e\x09\xcb\xb6\xd0\x43\x5b\x8a\xd6\x92\xb5\x43\x64\x8d\x90\xb4\x5b\xc2\xb2\xff\x5e\x24\xbb\xd9\xa5\x3e\x18\x6b\xe6\xe9\x3d\xbf\x99\x17\xd4\xf8\xa2\xac\x81\x59\xa1\xe7\x1c\xe7\x40\x31\x43\xc3\x99\x98\x9c\xb2\x82\x33\x81\xd4\x23\x1d\x32\xba\x72\xa0\x54\xde\x29\xc7\x91\xfc\x71\xfd\x44\x6f\x97\xea\x6b\x1a\x95\x73\x82\x73\x00\x61\x31\xef\x0f\x3b\x39\xd2\xdc\x6b\x9a\x8d\xa5\xde\xd2\x0b\xe6\xd4\x3b\xb2\xa2\x00\x4e\x27\xb9\x25\xca\x1b\x95\xf7\xe7\x73\x3f\x4e\x56\xf0\x96\xf3\xa3\x8a\x45\x7c\x24\x3f\x41\x79\xde\x8f\x93\x95\x9f\xc8\x4f\x68\x39\x53\x21\x3c\xab\xd9\xc0\xa2\xc9\x59\x40\x5d\x41\xe8\xf3\xd5\xdd\x80\xfa\x33\x3a\x53\x3b\x03\x08\x47\xb6\x57\x21\xc8\x80\x5a\xbc\x51\x54\xc0\x00\xe2\xf9\xfe\xe9\xa1\xea\x4e\x07\x3f\x02\x7a\xcc\x4d\x0b\x27\xce\x0a\xd5\x6f\x18\x80\x92\x7c\x7a\xd1\x18\x9b\x42\x23\xba\x7a\x26\x6d\x36\x26\xce\x2d\x67\xbb\xd4\x81\x89\x11\xee\x06\x58\x26\x24\xb7\x46\x55\xf1\xe6\x4a\xa7\xe5\x0c\xa7\x8a\x7b\x37\x80\x47\x57\xf8\x99\x23\x2b\x1f\x62\xa4\x38\x35\x22\x1a\xa5\xe1\x9f\x37\x53\x8a\x1d\xe4\xbd\x81\xa0\xf2\x1e\x30\xc1\xcd\x22\x43\xf1\x0e\x6e\x92\xe8\xe0\x8a\xbb\x36\x5a\xce\xce\x97\xe1\x0c\xeb\x78\x92\xfc\x16\x71\x6e\x96\x43\xb3\x4b\x6d\x07\xe2\xa7\x17\x2d\x3f\xaf\x6e\xff\x44\xcc\x66\x83\x7a\x71\x5c\x66\x39\xc0\xba\x42\xf9\xc5\xe4\x50\x3a\x9c\xad\xc6\xbe\x17\x70\x75\xb6\x8e\xb7\x83\x1f\xbf\x76\xaf\xd9\x34\x6b\x16\xe4\x63\x26\x55\x9a\x6d\xdb\xc1\x87\x8f\xb7\xb7\x17\xa1\xbd\xf2\xda\x99\x07\xbf\x2a\x51\x92\x5b\x33\xd3\xf1\x8d\xea\x7f\xe4\xd6\x38\x52\xfa\x2b\x5a\xaf\x5c\xbd\x02\x50\x52\xb0\x94\x9b\x0b\xba\x24\x76\xa1\x2c\x51\x95\x1b\x15\x93\x29\xbf\x7c\x31\x56\x92\x58\xa3\x34\x54\x86\xc7\xba\x5f\xce\xb4\x99\x4c\x84\xb2\x82\x47\x3f\xd1\xd4\x08\xe3\xb5\x68\x39\x5b\xe4\xef\x43\xa8\x22\x7f\x03\x00\x00\xff\xff\x8e\x73\x93\xa9\x19\x03\x00\x00")

func mainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTmpl,
		"main.go.tmpl",
	)
}

func mainGoTmpl() (*asset, error) {
	bytes, err := mainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tmpl", size: 793, mode: os.FileMode(420), modTime: time.Unix(1498556524, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelAllAllGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8c\x31\x8e\xc2\x30\x10\x45\xfb\x39\xc5\x57\xb4\x45\xd2\xd8\xfd\x4a\x5b\x6c\x48\x8d\x10\x37\x30\xc9\x60\x22\x1c\x3b\x32\xa6\x40\xa3\xb9\x3b\x22\x81\x54\x94\x33\xff\xbd\x67\xad\xe7\xc8\xd9\x15\x1e\x70\x7a\xc0\x8f\x71\x2e\x34\xbb\xfe\xea\x3c\x63\x4a\x03\x07\xa2\x71\x9a\x53\x2e\xa8\x09\x10\xc1\x4f\x4e\xa9\x1c\x5c\xb9\xe0\xf7\x0f\xe6\xf8\x39\x54\xd7\x39\xbb\xe8\x19\xa6\x6b\xb1\xbe\x2a\x91\xcd\x50\xb5\x4b\xd2\x8a\x98\xbd\x9b\x58\xb5\x82\x08\xc7\x41\x95\x1a\xa2\xf3\x3d\xf6\xd8\x85\x74\xe3\xff\x10\xea\x06\xf2\xbd\xb8\xc9\x66\x61\xbb\xf6\x85\xbe\x2b\x4a\xcf\x00\x00\x00\xff\xff\x61\xa1\xa3\x6c\xd1\x00\x00\x00")

func modelAllAllGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelAllAllGoTmpl,
		"model/all/all.go.tmpl",
	)
}

func modelAllAllGoTmpl() (*asset, error) {
	bytes, err := modelAllAllGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/all/all.go.tmpl", size: 209, mode: os.FileMode(420), modTime: time.Unix(1497967059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseDbGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\xcd\x8e\xdb\x36\x10\x3e\x8b\x4f\x31\x15\x8a\x40\x5a\x38\x54\xfa\x83\x1e\x0c\xf8\x10\x4b\x41\x1b\x64\xdd\xb4\xb5\x81\x1e\x03\x4a\x1a\xc9\xc4\x52\xa4\x4c\x51\x8b\x18\x04\x9f\x23\x7d\x80\x5c\x7a\xe9\xa9\xe8\xa5\xcf\xd3\xa2\x79\x8b\x82\x92\x6c\x6b\x03\xb7\xc0\xde\x73\xb1\x35\x33\xdf\xf7\x51\x9c\xf9\x46\x49\x02\x35\x4a\xd4\xcc\x60\x09\xf9\x11\x6a\x2e\x5b\x43\x5a\x56\xdc\xb1\x1a\xc1\xda\x5e\x96\xa8\x05\x97\x08\xf4\x7b\xd6\xa0\x73\xc4\x5a\xf8\xdc\xb0\x5c\x20\x2c\x57\x40\x77\xc3\x93\x73\x84\xf0\xa6\x55\xda\x40\x44\x82\xb0\x64\x86\xe5\xac\xc3\xa4\x3b\x88\x90\x90\x20\xac\xb9\xd9\xf7\x39\x2d\x54\x93\x94\xaa\xc1\x5a\x25\xb5\xd2\x6d\x48\x82\x37\x30\xaf\xd5\xea\x69\x77\x10\x4f\x4b\xcd\xef\x51\x27\xcd\x71\xa0\x5f\x67\xdf\x71\xd3\x25\x42\xd5\x21\x01\xb8\x06\xe0\x72\x40\x94\xf9\x08\x50\xed\x5d\x4d\xb9\x4c\x34\x96\xbc\xa3\xf7\x5f\x85\x24\x26\xe4\x9e\x69\x88\x08\x40\xb6\x4e\x95\xac\x78\x0d\x37\x65\x4e\x4f\x01\x01\xf8\xc9\x83\x53\xc1\x51\x1a\xb8\x19\x99\x63\x44\x00\x92\x04\x32\xac\x58\x2f\x4c\xca\x8a\x3d\xee\x76\xb7\xf0\xe1\xcf\x5f\xfe\xf9\xed\x7d\xfa\x3c\xfd\xee\xc5\xdf\xef\xfe\xf8\xf0\xee\xf7\x2f\xfe\x7a\xff\xab\x97\xff\x08\xb7\x82\x2f\xbf\x86\x1b\xf8\xe6\xd9\xf0\x43\x48\x50\xe6\x2f\x65\xa5\x82\x60\x3c\xde\x3f\x93\xa0\x43\xcd\x99\x18\xa3\x79\x21\x26\xa4\xea\x65\x01\xdf\xa2\xc9\xd6\x51\x0c\x97\x12\x58\x12\xf0\x0a\x46\x31\xf8\x6c\x05\x92\x0b\x9f\x0b\x34\x9a\x5e\xcb\xa9\x40\x02\x47\x82\xd3\x7c\x16\x80\x5a\xfb\x31\x76\x07\x41\x5f\xb7\x28\xa3\x70\x6c\xfa\xe2\xdc\x13\xba\x55\xbd\x2e\x30\x8a\xe3\x41\xdd\xe3\x67\xd2\x2d\x93\xbc\x88\x50\xeb\x78\xd0\xe5\xd5\x85\xb7\x61\x6f\x5f\x96\x02\x53\x25\x65\xe7\x29\xcf\x06\xc2\xe9\x64\xba\x45\x33\x47\x44\x57\x79\x57\x55\xfd\x7b\xfe\xbf\xea\x19\x11\x5d\xe5\x8d\xaa\x65\xde\xb0\xd6\xdf\xfd\x89\xb7\x22\xcd\xf2\x0d\x6b\x6d\x96\x2f\xe1\xd2\x9c\x8c\x33\x81\x85\x59\xc2\x80\xd8\x1c\xb7\x3f\xde\x4e\x29\xeb\x1c\x09\xac\x05\xcd\x64\x8d\xd3\x12\x6c\xd0\xb0\xce\x39\xb0\x16\x78\x05\x0d\x33\xc5\xfe\xb4\x28\x23\x60\xdc\x1f\x18\x0e\xa6\xcf\xcb\x72\x48\xfe\xcc\xcd\xde\x17\x22\x6b\xa1\x6f\x5b\xd4\x29\x6b\x50\x3c\x60\x58\xb7\x80\xd0\xda\x79\x2a\x8c\xfd\x55\x5f\xe1\xb1\x8b\xac\xf5\x63\x39\x00\xfd\x41\xf3\x86\xe9\xe3\x2b\x3c\xbe\x78\x6b\x34\x83\x90\xf5\x46\xbd\xe1\xb2\xd0\xd8\xa0\x34\xa1\x73\x46\xf7\x68\x2d\x8a\x0e\x9d\xab\x98\xe8\x7c\x20\x4b\x37\xc9\x5f\xf8\x5e\x9f\x04\xc1\x54\x85\xe9\x7f\x6a\x19\xdd\x69\x56\xe0\x6b\x19\x85\xe1\x02\x84\xaa\xe9\x64\xef\x5b\x55\xd7\xa8\xe3\xb3\x9d\x61\x05\x4f\xce\xde\xb4\xd9\x7a\x39\xeb\xab\xef\xf5\x72\x6c\x84\x23\x1f\xf9\xd3\x5d\x0c\xbe\x9d\x76\xe0\x9a\xcd\xe7\xfb\x71\xc5\xec\xf3\xf2\xe3\x2d\x3f\x90\x3f\x19\xff\x93\xf1\x1f\x67\xfc\x07\x9e\x7c\xac\xfd\x1f\x38\xf6\xb4\x04\xa9\x50\x1d\x0e\x0b\xf0\x5f\x1f\xf7\x31\x43\xb3\x35\x1d\xb0\xd1\x69\xc6\xd3\x3b\x48\x2e\x88\x23\xff\x06\x00\x00\xff\xff\xc9\xc8\x53\x3c\xe5\x07\x00\x00")

func modelDatabaseDbGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseDbGoTmpl,
		"model/database/db.go.tmpl",
	)
}

func modelDatabaseDbGoTmpl() (*asset, error) {
	bytes, err := modelDatabaseDbGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/db.go.tmpl", size: 2021, mode: os.FileMode(420), modTime: time.Unix(1500714648, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseTableGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x6d\x4f\xdb\xc8\x13\x7f\x9f\x4f\x31\x7f\x8b\x22\xbb\xe4\xbf\x88\xeb\xe9\x5e\xe4\x14\x9d\x94\x07\x38\x54\xa0\x15\x04\x55\xa7\xaa\x22\x8e\x3d\x0e\x5b\xec\xdd\xb0\x5e\x03\x91\xe5\xef\x7e\xda\x5d\xdb\xd8\x89\x13\xcc\xd1\xaa\xe5\x74\x7d\xd3\x30\x3b\x3b\x9e\x87\xdf\xfc\x76\x67\xf7\xf7\x61\x8e\x0c\x85\x2b\xd1\x87\xd9\x12\xe6\x94\x2d\x64\x67\xe1\x7a\x37\xee\x1c\x21\x4d\x13\xe6\xa3\x08\x29\x43\x20\xa3\xc1\x99\x1b\x61\x96\x75\x3a\x34\x5a\x70\x21\xc1\xee\x00\x58\xbe\x2b\xdd\x99\x1b\xe3\x7e\x7c\x1b\x5a\x4a\x20\x69\x84\xfa\x47\x10\x49\xfd\xff\x6c\x29\x31\xb6\x3a\xea\xe7\x9c\xca\xeb\x64\x46\x3c\x1e\xed\xfb\x3c\xc2\x39\xdf\x9f\x73\xb1\xb0\x36\x2c\x51\x76\x43\x65\xbc\xef\xcf\x9e\x50\x10\xe8\xd3\x78\x93\x0e\x57\x2a\x5b\x17\xf7\x43\x3e\xb7\x3a\x4e\xa7\x73\xe7\x0a\xb8\x82\x3e\xa8\x08\xc8\x19\xbf\x2f\x05\x41\x24\xc9\x47\x41\x99\x0c\x59\x29\x8b\x6f\x43\x32\x16\xe2\x8c\x9f\xf3\xfb\xb8\x94\xea\x58\xc9\x19\xde\x0f\x92\x20\x40\x51\xca\x13\x49\xc3\x98\x1c\x33\xf9\xee\x97\x4e\x47\x2e\x17\x3a\xb5\x8b\x05\x8a\xa1\x1b\x61\x08\x64\xe2\xce\x42\x34\xe9\x85\x58\x8a\xc4\x93\x90\x76\x00\xd2\x14\x84\xcb\xe6\x08\x3b\xb4\x0b\x3b\x77\xd0\xeb\x03\x19\xf2\x30\x89\x58\x0c\x59\xa6\x15\x2a\x56\x76\xee\xc8\x21\xc5\xd0\xcf\x32\x48\xd3\x9d\x3b\x72\xc4\x27\xcb\x85\xb2\x38\xf5\x67\x3d\x4b\x8b\xf2\x75\x0b\xbe\xc6\x9c\xad\xc8\xa6\x90\xa6\xc8\x7c\x55\x60\x80\x2b\x7f\x06\x6f\xfd\x19\x19\x0d\x8e\x59\xc0\x41\xfd\xd3\x56\xfe\x6f\x4d\xd5\xaa\x7c\xd0\xab\x13\xe1\xb2\xd8\xf5\x24\xe5\xac\xb2\x9e\x75\x3a\x41\xc2\x3c\x38\xc3\xfb\x8d\x51\xda\x0e\xbc\xdd\x9c\x02\x15\x3b\x9f\x7d\x55\xf1\x6e\x33\xf2\x89\xca\x6b\x9e\xc8\xd1\xc0\x76\xcc\x06\x72\x81\xd2\x78\xac\x25\x02\x65\x22\x98\x5a\x68\xe5\x53\xc5\x5c\x4b\xe7\x76\x37\x6a\x29\x25\x55\x1e\x53\xbe\xa2\x68\xba\x66\x66\x81\x06\x40\x46\x18\xb8\x49\x28\xa1\x14\xab\x85\x18\x65\x21\x27\x50\xd9\x60\x4a\x53\xff\x9d\x35\x07\x69\x2b\xf7\x36\x47\xe0\x40\x25\x4d\x3a\x9c\xa2\x89\x55\x4c\x47\x58\x4d\xa8\xc2\x41\x1f\x76\x1f\x91\x60\x02\x1b\x0d\x7a\xe5\x26\x32\x1a\x74\x8d\x70\x76\xea\x2e\xaa\x72\xf5\x77\x57\xbb\xf9\x1c\xcf\x2a\xa0\xb2\xd7\x71\xe6\x14\xf9\x27\x0a\x84\x7d\x90\x0f\xed\x8d\x1f\xa1\xbc\xb8\x0d\xc7\x0f\xe8\x25\x92\x0b\xdb\x01\xc5\x3e\xa4\x22\xd2\xb6\x69\x50\x9a\xff\x5f\x1f\x18\x0d\xf3\x98\x1f\x13\xad\xd6\xd6\xb2\xaf\x52\xd5\xde\x95\x8f\x82\x46\xae\x58\x0e\x5d\xef\x1a\xdf\xe3\xd2\x76\x54\xdb\x53\x36\xd7\xdf\xca\x8d\x2a\xda\xb9\x58\x28\xde\x09\x6c\xab\x91\x8a\x7b\x5c\x44\xbd\x34\xad\x9a\x56\x7f\xe6\xc6\xdf\xe3\x32\xcb\x7a\x6f\xee\xac\xae\xf6\xaf\xee\x4d\x55\xc7\x79\x46\x7d\xdc\x3b\x9c\x70\xed\xb6\xed\x00\x0a\xf1\x98\xb4\x73\x45\xc3\xc3\x90\x22\x93\x8d\x89\xd3\x34\xad\x08\x57\x75\xe9\x29\xf7\x31\x2c\x0c\x55\x76\x1a\x57\xd7\xb2\xa3\xc5\x5d\xc8\x1b\x43\xcb\x27\x93\x13\xa7\x5e\x04\x46\xc3\xf6\x81\x8c\x30\x44\x89\x2f\x0c\xa4\x6a\xa4\x4d\x10\xef\x5e\xe2\xf1\x31\x8b\x51\xc8\x86\x8e\x55\x1f\x5b\x85\x76\xf5\xf0\xa8\x1f\x19\x7a\x81\x06\x80\xb7\x60\xa8\x1f\x2c\x4f\xa0\x3a\xff\xaf\x5c\x69\x55\x19\xa7\xd0\x3a\x4b\xc2\x10\xac\xbf\xc6\x17\x56\x8d\xa8\xf2\x55\x73\xca\x80\x45\xd5\xe1\x66\x55\xb9\x0c\x1a\x60\x57\x1c\x50\x7d\xd0\xfa\xb6\x39\x18\x8f\x50\x5e\x4e\x86\x13\x1a\xa1\xed\x90\x4b\x46\x1f\x6c\xc7\xa9\x7c\x09\xc3\x18\x5b\xdb\x2d\x2d\x9e\x70\xcf\x0d\x8d\xcd\xaa\xad\x92\x46\x1b\x2c\xff\xb4\x41\x15\x57\x92\x6d\xa1\x34\x9c\x0f\x0d\xb5\x4e\x16\xfe\x7f\xb5\xfe\xa9\x83\xfa\x87\xb5\x7e\xfc\x85\x42\x28\x5a\x28\xcf\xe1\x9c\x38\xf8\xec\xab\x63\x08\x4e\x29\xd4\x88\x6d\xe1\x32\xea\xd9\x28\x44\xc1\x4f\xb9\x92\xe1\x96\x1a\xe7\xff\xbe\xbe\x3b\xe4\x73\x75\x15\xe6\x22\xb0\xad\xcf\x05\xdd\xf5\xde\xc4\x5f\xba\xf0\x26\xb6\x36\x92\x61\xf9\xb9\xd6\x0c\x78\xa9\xb1\x9b\x33\xa0\xba\x5a\x2b\x57\x34\x75\x7f\x6b\x46\xfc\x81\x5d\x12\xa9\x93\x91\x5c\x4e\x86\x2f\x47\x92\x31\xf5\xe3\x7a\xe3\x11\xc9\x3f\xbc\x27\xae\xba\x39\xa0\xcb\xae\xc8\xc1\xf4\xfa\xbb\xc2\x5c\x42\xf2\xae\x68\x0f\x71\x5f\x6f\xf3\x5f\x80\xef\xb7\x06\x15\x6b\x45\x34\x0e\xf9\xf5\xb1\xd7\x3e\x58\x2d\x3e\xac\x9a\x53\xc3\xf3\xd3\xd6\x06\x4b\x89\xeb\xc6\xb6\x6c\x3b\x68\x8b\xfa\xe6\x6d\xf5\x4d\x4a\xa7\xa0\xa1\x0d\x60\x2b\x0a\x77\x84\x72\xf3\xa8\x79\x8d\x02\x6d\x8f\x33\x3f\xbf\xf7\x77\xc1\x15\xf3\x18\x08\x21\x94\x49\x14\x81\xeb\x61\x9a\x39\xf0\xf9\xcb\xd3\x83\x68\xac\x18\x6f\x9b\x62\x9a\x6d\x1c\xf1\xf2\xb6\xa8\x9e\x16\x17\x18\xa2\x27\xed\x5d\x65\xb9\x0b\xd6\xc5\xf8\x64\x3c\x9c\x40\x9a\xce\x51\x6a\x9b\x1a\x3e\xca\x70\x5c\x19\x6b\xe1\xf0\xfc\xc3\x29\x4c\xeb\xa3\xc8\x14\x3e\xfd\x39\x3e\x1f\x83\x05\x7b\xa0\x42\x35\x31\x12\x42\x5a\x37\x5c\xc0\x85\x72\x31\x9f\xb6\x0d\xb0\x75\xc4\x46\x7f\x7d\xe2\xaf\x8f\x64\x71\xab\x5a\x0c\x79\xc2\x64\x8b\x5a\x50\x26\x7f\xfb\x75\xcb\xb8\xec\xa9\x8b\x7f\x73\x36\x8f\x99\xb4\x8b\x4c\x7a\xfa\x73\x07\xce\x77\x4a\x59\x1e\xbd\xc7\x64\xab\xe0\x0f\xa9\x88\xdb\x04\xff\xf2\x07\x91\xcd\x20\x6c\xce\xd9\x07\xa6\xc9\xf9\x1b\x41\x70\x4f\x87\xb8\x07\x16\x9c\x1c\x9f\x1e\x4f\xe0\xc0\x7a\x32\xb5\x46\x66\x38\xdc\x76\xa0\xbf\xf2\xe6\x57\x2e\xa4\x39\x35\x54\x66\x3a\xf5\x67\xd6\x5c\x9f\x56\xaf\x54\xdb\x2a\x36\x58\xea\xf0\x6d\xe6\x46\x58\xd6\x2c\xd0\x9c\x5e\xab\xd8\xeb\x2e\xd8\x54\x75\x80\x0e\x71\x0f\xac\x69\xff\x0f\x2b\x8f\xf1\x75\x16\xeb\x13\x95\xd7\x43\xce\x7c\xaa\x1f\xb5\x54\x58\x5d\xa8\xf5\xdc\xbf\xbe\x7e\x15\x46\x7b\x8d\x75\xb4\x6f\x70\x09\xb5\x97\x35\xf3\xb4\xfe\x8d\xca\xa4\x66\x19\xc6\xe5\x21\x4f\x98\xba\x7a\x48\x91\x60\xc3\x84\xb3\xed\x69\x6a\xfb\x03\x1f\xf4\xe1\x06\x97\x5a\xb1\xf2\x99\xc7\x77\xac\x23\xcc\xdf\xd4\xb8\x7e\x97\x6b\xfb\x20\x57\xb9\x17\x97\x66\x8d\x3b\xcd\xb8\x83\xd5\x3b\xf8\xf7\x00\xde\xca\xfb\xa7\xe1\x8e\x1b\x5c\x3a\x15\x7c\xd5\x73\xf7\x7c\xd4\xad\xe1\xae\x40\xde\x0a\xf6\x72\xf1\x6a\x8e\x76\x77\x37\x17\xf2\x59\x33\xc6\x4b\xa7\x0c\xe3\x5a\x8b\x0e\xf9\x3b\x00\x00\xff\xff\xac\x84\x9a\xa0\x27\x1c\x00\x00")

func modelDatabaseTableGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseTableGoTmpl,
		"model/database/table.go.tmpl",
	)
}

func modelDatabaseTableGoTmpl() (*asset, error) {
	bytes, err := modelDatabaseTableGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/table.go.tmpl", size: 7207, mode: os.FileMode(420), modTime: time.Unix(1500714667, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xc1\x4a\x04\x41\x0c\x44\xef\xf9\x8a\x30\x78\xd8\x11\xec\xbe\x0b\xde\x14\x6f\xb2\xcc\x1f\xf4\xb6\xd9\x6c\x90\x49\x0f\x3d\x3d\x07\x09\xf9\x77\xe9\x5d\x61\x65\x4e\x5e\x92\xaa\x82\xe2\x55\x8c\xc8\xa4\x54\x53\x23\x3c\x7d\x23\x8b\x2e\x0d\x96\x94\xbf\x12\x13\xce\x49\x14\xcc\x1e\x6a\x29\xed\x98\xda\x05\x9f\x5f\x30\x4c\xbf\xc6\x1d\x64\x5e\x4a\x6d\x78\x00\xc4\x81\xa5\x5d\xb6\x53\xc8\x65\x8e\x2c\xfa\xc4\x45\x25\x77\x35\x80\x99\x9c\x31\xbc\xd7\xb2\x2d\xab\xbb\x59\x4d\xca\x74\x0f\x7a\xf9\x0f\xc3\x3d\x9a\x85\xe3\x6d\xc1\x2d\x18\xd0\x8c\xf4\xb3\x77\xaf\x0f\x46\x80\xf3\xa6\x19\x2b\xb1\xac\x6d\x2a\x5b\xa3\x43\xed\x17\x1f\x59\x34\xbc\x29\x8b\xd2\x88\xf6\x0f\x74\x8c\x68\x16\x5e\x69\xcd\x57\x7b\x47\x7f\xa4\x99\xdc\xc3\xb4\x47\x8c\xfb\x31\x0e\x3f\x01\x00\x00\xff\xff\x32\x59\xd7\x2f\x44\x01\x00\x00")

func routerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_routerGoTmpl,
		"router.go.tmpl",
	)
}

func routerGoTmpl() (*asset, error) {
	bytes, err := routerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.go.tmpl", size: 324, mode: os.FileMode(420), modTime: time.Unix(1500516645, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webappApiVue_resourceJsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\xcf\x8a\xd4\x40\x10\xc6\xef\xfd\x14\x9f\x83\x6c\x12\xd0\xde\xfb\x42\x3c\x29\xeb\x45\x19\x44\xf6\xde\x64\x6a\x36\x91\xa4\x3b\x74\x75\xd6\x85\xa2\x0e\x9e\x3c\x0b\x5e\x04\x9f\xc4\x3f\x8f\x23\x8b\x27\x5f\x41\xd2\x9b\xd9\x99\x59\x14\xf1\x92\x74\x55\xaa\x7e\x5f\x55\x75\xa5\x1b\xc6\x10\x13\x2e\x26\xc2\x36\x86\x01\xc5\xd5\x44\x85\x59\xbc\x82\x81\x98\xdd\x25\x41\x97\xaf\xd4\xd3\x40\x3e\x3d\x9e\xba\xc2\x98\x26\x78\x4e\xa0\x18\x9f\x3b\xbf\xe9\x29\xa2\x46\x59\xa1\x7e\x02\x31\xd8\x65\x5a\x8a\x31\xc4\xb2\xb8\xf9\xfe\xe1\xe6\xeb\xe7\x1f\xef\xbf\xfc\xfc\xf8\xe9\xd7\xb7\x77\x45\x65\x74\x07\x88\xc4\x63\xf0\x4c\x6b\x17\x99\x50\xdf\xd9\x3b\x52\xa4\x34\x45\x7f\xe7\xb6\x6f\x38\xf8\xb2\xb2\xa9\x25\x5f\xce\xe7\x5d\x1c\xd0\x6d\x51\x3e\x98\x5d\x96\xa7\xa6\x21\x66\x9c\x9c\x20\xdb\xb9\x8a\x63\xcb\x36\xc1\x27\xf2\xa9\x5a\x92\xef\x97\xfc\x87\xc8\x1c\xa7\xf9\xb9\x14\xb5\x8e\x61\xe8\x98\x6c\x24\x0e\xfd\x15\xe5\xa4\x39\x4c\x73\x7f\x22\xdd\x16\xf6\x3c\x86\x69\x64\x55\x91\xe8\xfc\x25\x1d\x3a\x1e\x8e\x2e\xb5\xeb\x48\xdb\xee\x1a\x67\x35\xec\xab\x30\x25\xba\xb5\x55\xcd\xe9\x29\x44\xec\x53\xe2\x46\xd5\x34\xbd\x63\x86\x08\xec\x4b\x37\x10\x54\x21\xb2\x92\xd5\x4c\x99\x45\x72\xe6\xa1\xc8\xce\x61\x80\x23\x0e\x66\x46\xe3\x06\xea\xf7\xa4\x72\xe3\x92\x43\x0d\xd1\x6a\x4f\x9d\xa7\x39\x37\xee\x3a\xcf\xb0\x2f\x28\xb5\x61\x83\xd5\xf9\xb3\xd7\x2b\xe8\xd1\x0c\x2e\x26\xb2\x6d\x4a\xa3\xbd\xa4\x54\x16\x47\x4d\x65\x8e\x5d\xbb\xd4\x42\xb5\x78\x04\xc1\xe8\xa2\x1b\xf8\x0c\x59\x51\x97\x5b\x3c\xda\x80\xca\x36\x2e\x35\x6d\xb9\xdf\xab\x4a\x04\xd4\x33\xfd\x4d\x77\x0c\xfc\x2f\xe1\x59\xee\x3f\xc4\xfc\x26\x4b\xa9\x48\x3e\x2e\x2f\xa3\x86\xae\xf3\x8f\x71\xbb\xb8\x22\x07\x73\x54\x45\x0d\x4f\x6f\x0f\xaf\xa8\xac\xee\x01\x7e\x07\x00\x00\xff\xff\x33\x69\xf6\x9a\x6e\x03\x00\x00")

func webappApiVue_resourceJsTmplBytes() ([]byte, error) {
	return bindataRead(
		_webappApiVue_resourceJsTmpl,
		"webapp/api.vue_resource.js.tmpl",
	)
}

func webappApiVue_resourceJsTmpl() (*asset, error) {
	bytes, err := webappApiVue_resourceJsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "webapp/api.vue_resource.js.tmpl", size: 878, mode: os.FileMode(420), modTime: time.Unix(1501765221, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".gitignore": Gitignore,
	"Makefile": makefile,
	"NAME": name,
	"README.md": readmeMd,
	"app.go.tmpl": appGoTmpl,
	"cfg/config.go.tmpl": cfgConfigGoTmpl,
	"config/config.yaml": configConfigYaml,
	"controller/controller.go.tmpl": controllerControllerGoTmpl,
	"controller/gen_controller.go.tmpl": controllerGen_controllerGoTmpl,
	"controller/gen_route.go.tmpl": controllerGen_routeGoTmpl,
	"doc/api_doc.md.tmpl": docApi_docMdTmpl,
	"fresh.conf": freshConf,
	"gen_types.go.tmpl": gen_typesGoTmpl,
	"main.go.tmpl": mainGoTmpl,
	"model/all/all.go.tmpl": modelAllAllGoTmpl,
	"model/database/db.go.tmpl": modelDatabaseDbGoTmpl,
	"model/database/table.go.tmpl": modelDatabaseTableGoTmpl,
	"router.go.tmpl": routerGoTmpl,
	"webapp/api.vue_resource.js.tmpl": webappApiVue_resourceJsTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".gitignore": &bintree{Gitignore, map[string]*bintree{}},
	"Makefile": &bintree{makefile, map[string]*bintree{}},
	"NAME": &bintree{name, map[string]*bintree{}},
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"app.go.tmpl": &bintree{appGoTmpl, map[string]*bintree{}},
	"cfg": &bintree{nil, map[string]*bintree{
		"config.go.tmpl": &bintree{cfgConfigGoTmpl, map[string]*bintree{}},
	}},
	"config": &bintree{nil, map[string]*bintree{
		"config.yaml": &bintree{configConfigYaml, map[string]*bintree{}},
	}},
	"controller": &bintree{nil, map[string]*bintree{
		"controller.go.tmpl": &bintree{controllerControllerGoTmpl, map[string]*bintree{}},
		"gen_controller.go.tmpl": &bintree{controllerGen_controllerGoTmpl, map[string]*bintree{}},
		"gen_route.go.tmpl": &bintree{controllerGen_routeGoTmpl, map[string]*bintree{}},
	}},
	"doc": &bintree{nil, map[string]*bintree{
		"api_doc.md.tmpl": &bintree{docApi_docMdTmpl, map[string]*bintree{}},
	}},
	"fresh.conf": &bintree{freshConf, map[string]*bintree{}},
	"gen_types.go.tmpl": &bintree{gen_typesGoTmpl, map[string]*bintree{}},
	"main.go.tmpl": &bintree{mainGoTmpl, map[string]*bintree{}},
	"model": &bintree{nil, map[string]*bintree{
		"all": &bintree{nil, map[string]*bintree{
			"all.go.tmpl": &bintree{modelAllAllGoTmpl, map[string]*bintree{}},
		}},
		"database": &bintree{nil, map[string]*bintree{
			"db.go.tmpl": &bintree{modelDatabaseDbGoTmpl, map[string]*bintree{}},
			"table.go.tmpl": &bintree{modelDatabaseTableGoTmpl, map[string]*bintree{}},
		}},
	}},
	"router.go.tmpl": &bintree{routerGoTmpl, map[string]*bintree{}},
	"webapp": &bintree{nil, map[string]*bintree{
		"api.vue_resource.js.tmpl": &bintree{webappApiVue_resourceJsTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


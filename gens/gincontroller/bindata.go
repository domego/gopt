// Code generated by go-bindata.
// sources:
// Makefile
// NAME
// README.md
// app.go.tmpl
// config/config.yaml
// config.go.tmpl
// controller/.route.go.tmpl.swp
// controller/controller.go.tmpl
// controller/gen_controller.go.tmpl
// controller/gen_route.go.tmpl
// controller/route.go.tmpl
// gen_types.go.tmpl
// main.go.tmpl
// model/all/all.go.tmpl
// model/database/.db.go.tmpl.swp
// model/database/.table.go.tmpl.swp
// model/database/db.go.tmpl
// model/database/table.go.tmpl
// router.go.tmpl
// DO NOT EDIT!

package gengincontroller

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _makefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xf2\x73\xf4\x75\xb5\x4d\x48\x4e\x2c\x51\x00\xb1\x12\xb8\xb8\x92\x4a\x33\x73\x52\xac\xb8\x38\x1d\xd2\xf3\x15\xc0\x6c\x05\xdd\x7c\x85\xa4\xcc\x3c\x7d\x15\x0d\x90\x0a\x4d\x2e\x2e\xbd\x00\x0f\x7f\xbf\x48\x2b\x88\x2c\x17\x20\x00\x00\xff\xff\x34\xa1\xfe\xdc\x41\x00\x00\x00")

func makefileBytes() ([]byte, error) {
	return bindataRead(
		_makefile,
		"Makefile",
	)
}

func makefile() (*asset, error) {
	bytes, err := makefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Makefile", size: 65, mode: os.FileMode(420), modTime: time.Unix(1497174442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _name = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\xe5\x02\x04\x00\x00\xff\xff\xc5\x48\x82\xef\x0a\x00\x00\x00")

func nameBytes() ([]byte, error) {
	return bindataRead(
		_name,
		"NAME",
	)
}

func name() (*asset, error) {
	bytes, err := nameBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME", size: 10, mode: os.FileMode(420), modTime: time.Unix(1497174547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xa8\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\xe5\xe2\x32\xd4\x53\x78\x3a\x7f\xd7\xb3\x39\x6b\x5e\x2e\xdc\xf9\x7c\xf6\xba\xe7\xbb\x27\x3f\x9b\xd7\x62\xcd\x65\xa4\xa7\xe0\x1f\xe4\xab\xa0\xad\xe0\xe2\xe4\x9c\x98\x9c\x91\xaa\x11\x94\x9a\x92\x59\xac\xef\x9b\x9a\x9b\x0c\xe2\x6a\x5a\x73\x19\xeb\x29\x38\x06\x78\x3a\x16\xa5\x17\x5b\x73\x99\xe8\x29\x84\x54\x16\xa4\x16\x5b\x73\x01\x02\x00\x00\xff\xff\x0f\x48\xaa\x33\x5c\x00\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 92, mode: os.FileMode(420), modTime: time.Unix(1497174569, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\xcd\x6a\xdc\x30\x14\x85\xd7\xd6\x53\xdc\x18\x02\x36\x38\x36\xdd\x06\x66\x31\xb4\x43\x32\x30\x1d\x82\x9d\xac\x42\x28\x1a\xeb\x5a\x11\x96\x25\x23\x79\x26\x84\x92\x27\xe8\xdf\xaa\xab\xae\xba\xeb\x1b\x64\x53\xc8\xcb\xf4\x27\xbb\xbe\x42\xb9\xf2\x0c\x4d\x87\xae\xba\x13\x3a\xf7\x9e\x73\xf4\xa9\xe7\x75\xcb\x25\x42\xc7\x95\x61\x4c\x75\xbd\x75\x03\x24\x2c\x8a\xfd\xad\xaf\xb9\xd6\x31\x63\x00\xb1\x54\xc3\xf5\x7a\x95\xd7\xb6\x2b\x9a\xcd\xca\xd6\x6d\x81\x46\x68\xf4\x3e\xde\x53\xa5\x32\x47\xd2\x1a\x55\xd3\x69\x5f\xd4\x68\x56\xf6\xa8\xe3\xa4\xb5\x6a\x28\x3a\x25\x84\xc6\x1b\xee\x30\x66\xd1\xbf\x07\x6d\xab\x06\x5f\x68\x2b\x63\x96\x32\xd6\xac\x4d\x0d\xd7\x9c\xa2\xa7\x7d\x9f\xa4\xf0\x9a\x45\x52\x99\xbc\xc2\xe1\xa5\x15\x98\xd4\x8d\xcc\x67\x66\x93\xb2\xc8\xd9\xf5\x80\x70\x3c\x01\x92\x97\x78\x93\xec\xee\xf2\x0b\x8f\xc9\x9f\xe0\x7c\x61\xa5\x44\x97\xa4\x7f\xe9\xb4\x54\x62\x6d\x37\xe8\x6e\x47\x09\xa5\xf2\x43\x49\x03\x49\x18\x4b\x59\xe4\xd1\x6d\xd0\x51\xc6\x96\x05\xe5\x54\xe1\x32\x14\x99\x0a\xe1\xd0\xfb\x0c\x76\x0b\x45\x01\x3f\xde\x7d\x7c\x7c\x7f\xff\xf8\xf0\xe9\xe7\x97\x37\x17\x55\xf9\xec\xdb\xc3\xe7\xef\x1f\xee\x7f\x7d\x7d\xeb\x50\x5b\x2e\x9e\x5b\xd3\x28\xb9\xb3\xce\x2b\x25\x0d\xd7\xa7\xd6\xb6\xfe\x72\x97\x71\x56\xce\x5e\x55\xf3\x93\xe5\x74\x71\x75\xb9\xfd\xa2\xbc\x9a\x9f\x90\xd9\x15\x4c\x80\xf7\x3d\x1a\x91\xfc\xa7\x41\x06\x44\x78\xe4\x1a\x8d\x9c\xcb\x50\x6c\x34\x22\x88\x77\x29\x63\x91\x6a\x60\x8b\x1a\x0e\x46\xc4\x2f\x70\xb5\x96\xf4\x07\x61\x55\x5b\x99\xcf\x4d\x63\x9b\x24\x3e\xf4\xc7\xb0\x50\x7e\x40\xa3\x8c\x04\x6e\x04\x50\x37\x3a\x9f\x9e\x9f\x9f\x81\x35\x70\xe8\xe3\x8c\x7a\x2f\x79\x87\x19\x3c\x21\x47\x69\x2c\x42\x17\x18\x6f\x5f\x34\x5a\x4d\x8d\x08\xa0\xa9\x90\x6a\x80\x46\x0e\x26\x60\x94\x7e\x52\x7c\x66\x04\xc9\xa1\xcb\xcc\x39\xeb\x42\x99\x38\xa3\xe9\xe0\x7c\xc7\x7e\x07\x00\x00\xff\xff\x71\x0a\xf0\xc6\xfc\x02\x00\x00")

func appGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_appGoTmpl,
		"app.go.tmpl",
	)
}

func appGoTmpl() (*asset, error) {
	bytes, err := appGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.go.tmpl", size: 764, mode: os.FileMode(420), modTime: time.Unix(1497324782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x4c\x49\x29\x4a\x2d\x2e\xb6\x52\x50\x32\x34\x32\xd7\x33\xd0\x33\xd0\x33\xb4\xaa\xae\xd6\x0b\xc8\x2f\x2a\xa9\xad\x55\xe2\x4a\xcd\x2b\xb3\x52\x50\x4a\x49\x4d\x2a\x4d\x57\xe2\xca\xc9\x4f\x8f\xcf\x49\x2d\x4b\xcd\xb1\x52\x50\x2a\x29\x4a\x4c\x4e\x55\xe2\x02\x04\x00\x00\xff\xff\x8b\x1d\xeb\xd8\x3f\x00\x00\x00")

func configConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_configConfigYaml,
		"config/config.yaml",
	)
}

func configConfigYaml() (*asset, error) {
	bytes, err := configConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/config.yaml", size: 63, mode: os.FileMode(420), modTime: time.Unix(1497174631, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xc1\xaf\xd3\x30\x0c\xc6\xcf\xf1\x5f\x61\x22\x81\x5a\x34\x5a\xc1\x71\x52\x0f\x08\xc6\x69\xe2\x80\xc4\x99\x65\xad\x9b\x45\x4b\xe3\x2a\x49\xc7\x7b\x9a\xf6\xbf\x23\xb7\x1d\x30\x2e\xbc\x69\x52\x1b\x7f\xf6\x97\x5f\x3f\x8f\xa6\x3d\x1b\x4b\x38\x18\x17\x00\xdc\x30\x72\xcc\x58\x80\xd2\x8e\x6b\xc7\x53\x76\x5e\x83\xd2\x9c\x34\x80\xd2\xd6\xe5\xd3\x74\xac\x5a\x1e\x6a\x4f\xe1\xc8\xef\x06\x53\x5b\x3e\xbb\x9c\x6a\xcf\x56\x83\x7a\x36\x83\x47\x6d\x79\x3c\xdb\xca\x85\x5a\x8e\xd5\xe5\x83\x86\x12\xa0\xae\xf1\x13\x87\xde\x59\x6c\x97\x47\xca\x71\x6a\x33\xe4\xe7\x91\xee\xca\x52\xc2\x2b\xa8\x8f\x5d\x17\x29\x25\x94\x92\x0b\x16\x0f\x62\xb5\xd5\x66\x29\xeb\x03\xa8\x5d\xb8\xe0\xfc\x7b\xec\xa0\x70\x11\x75\xcf\x76\x4f\x17\xf2\xff\xa8\x9e\xed\x0f\x2f\x75\x7d\x80\xdb\xcc\x14\xc9\x74\xeb\xed\xf2\x8a\x26\x74\x38\x9a\x98\x68\xc5\xfc\xe2\x3c\x41\x3f\x85\xf6\xaf\xce\x82\x9e\x5c\xc6\x23\xb3\x2f\xf1\xed\x3a\x7c\x05\x75\x4c\x1b\xa4\x18\x71\xdb\xe0\x92\x5c\xf5\x8d\x4c\x27\x06\xc5\x1f\xaf\x12\x94\xeb\xe7\xb6\x57\x0d\x06\xe7\x65\x50\x79\xb6\xd5\x2e\x46\x8e\x7d\xa1\x3d\x9b\xee\x1e\x51\xef\x3c\x61\x6f\x9c\xa7\x6e\x83\xf9\x44\x38\x9a\x7c\x42\x97\xf0\x75\xd2\x1b\x7c\x30\x9d\x5d\x05\x4b\xfc\x14\xa7\x6a\xf7\xe4\x72\xf1\x5e\x94\x1b\xc8\x7f\xb5\xdc\x36\xf8\x66\x41\xbe\xde\x40\x09\x47\x83\xf3\x9a\xbe\x87\xc1\xc4\x74\x32\xbe\x90\xef\x58\xba\xff\x0b\x3b\xdd\x87\x7e\x13\xaf\xb0\x33\x20\xc5\xf8\x12\xb2\x48\x79\x8a\x61\x75\x90\xb5\xac\x71\x4b\x12\x6b\xe0\xa5\x0c\xcb\xc5\x9f\xa9\x37\x93\xcf\x7b\xb6\x96\x62\xb5\xac\xb8\x41\x51\xbe\xd2\xcf\xf9\x58\xb4\xbd\xad\xee\xeb\x2f\xe1\x06\xbf\x02\x00\x00\xff\xff\xd5\x9e\x58\xbf\xe2\x02\x00\x00")

func configGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_configGoTmpl,
		"config.go.tmpl",
	)
}

func configGoTmpl() (*asset, error) {
	bytes, err := configGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.go.tmpl", size: 738, mode: os.FileMode(420), modTime: time.Unix(1497174442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerRouteGoTmplSwp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\xda\x4f\x8a\xd4\x40\x14\x06\xf0\xaf\xdd\x88\x0b\xbb\x44\x2f\x50\xb6\x2e\x66\x84\x4e\x8d\x7f\x16\x83\x7b\x11\x17\x23\xc3\x80\x82\xcb\x4a\xba\xa6\x3a\x4c\x52\x55\x54\x57\x10\x29\xa2\x6b\x17\xa2\x17\x98\x33\xe8\x09\x5c\x7a\x00\xaf\xe0\xd2\x4b\x48\xd2\x2d\xc8\x20\xd8\x22\x38\x0c\x7c\xbf\x4d\xbd\x17\x5e\x1e\x2f\x8b\x2c\x42\x5e\xb9\xf7\xfc\xc9\x81\xdc\x2f\xf6\x00\xe0\x1a\x70\xfa\xe5\xf0\x45\x3e\x7d\x87\x2b\xcb\x09\x5a\xdd\x94\xd8\x42\xdb\x78\x67\x4b\xff\xc7\xba\xd7\x43\x43\xf5\xd2\xc7\x93\x55\xd0\x95\x51\xab\x58\x29\x5b\xa7\x65\x57\x16\x95\x6f\x55\x63\x5c\xe9\xe7\xad\x56\xb6\x76\x21\xa9\x64\xda\xd0\xe8\x64\x54\xe5\x5d\x8a\xbe\x69\x4c\x54\xd1\x77\xc9\x14\xd6\x17\xa9\x0d\xcd\x36\xa3\x11\xd1\xa0\x4b\xc7\xf3\xfd\xab\xb8\x7f\xef\xee\xf8\xaa\xdf\x9a\xdd\x94\x37\xae\x3f\x3b\xef\xa9\x88\x88\x88\x88\x88\xe8\x3f\x4a\x61\x82\x37\x00\x2e\x6d\xf2\xcb\x9b\x73\x72\xe6\x24\x22\x22\x22\x22\x22\x22\xa2\x8b\x4b\x2f\x80\x87\x02\x88\x62\xfd\xff\xff\xe7\xf7\xff\x77\x01\x7c\x15\xc0\x27\x01\x7c\x14\xc0\x5b\x01\xa4\x4d\xdd\x03\x01\x48\x01\x7c\x9b\x02\x9f\xa7\xc0\x87\x29\xf0\x7e\x7a\xce\x0f\x42\x44\x44\x44\x44\x44\x44\x17\x4a\x0f\x29\x73\x36\x6e\xd1\x0f\xd1\x10\xdf\xb6\xd1\x77\xe1\xa9\x6e\x4d\xdf\x1f\xf9\x2e\x99\xc7\x43\x5e\xe4\xdc\x85\xb0\x55\xf5\xdf\xb5\x34\x51\x16\x07\x26\x2d\xfd\xa2\xef\x77\x66\xf9\x77\x37\xff\x53\xc3\xb1\x63\x34\xb6\x5e\xa5\xb1\x72\x67\xdc\x69\xdf\xc5\x71\xe7\x2a\x79\x74\xf6\xba\xbc\x63\x6b\x57\x3c\x72\xb6\x76\x66\x57\x66\xa0\x6e\x83\x8f\x49\xce\x7e\xd9\x9b\xb7\xb5\x9b\x5b\xef\xea\x6a\x88\x66\x08\xba\x3a\xd1\xd6\xc8\x9c\x8b\xc3\x75\xb8\x9e\x0b\x4a\x49\x6b\x9c\x89\x3a\x19\x59\xbe\x92\xe3\x96\x3d\x7e\x04\x00\x00\xff\xff\x3d\xd1\x55\xd6\x00\x30\x00\x00")

func controllerRouteGoTmplSwpBytes() ([]byte, error) {
	return bindataRead(
		_controllerRouteGoTmplSwp,
		"controller/.route.go.tmpl.swp",
	)
}

func controllerRouteGoTmplSwp() (*asset, error) {
	bytes, err := controllerRouteGoTmplSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/.route.go.tmpl.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1498465950, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerControllerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xb1\x4a\xc4\x40\x10\x86\xfb\x79\x8a\x21\xd5\xdd\xe1\x6d\x9e\xc0\x42\xec\x45\x4e\x7b\x99\x6c\xe6\xc6\x25\xc9\x4c\xd8\xdd\x88\x32\xec\xbb\x4b\x38\xb8\x42\xb0\xfb\xf8\xbf\xaf\xf8\xfb\x1e\x85\x95\x33\x55\xc6\xe1\x07\x25\xe9\x5a\x61\xa5\x38\x91\x30\xba\x87\xd7\x1b\xbe\xd0\xc2\xad\x01\xa4\x65\xb5\x5c\xf1\x00\x88\x9d\xa4\xfa\xb9\x0d\x21\xda\xd2\x4b\xd2\xb3\x98\xa6\xb8\x53\xf7\x47\xce\xac\x83\x9d\x17\xda\xdd\x94\xea\xff\xda\xa6\x54\x4b\x3f\x9b\x74\x70\x04\xf8\xa2\x8c\x1f\xf8\x88\xb3\x49\x78\xcf\x14\xf9\x7a\x9f\xf6\x2e\x5c\x58\x47\xce\x6f\x5b\x8c\x5c\x0a\x80\x7b\x26\x15\xc6\x70\xb1\xad\x72\x69\x0d\xae\x9b\x46\x1c\xcd\x3d\xdc\xde\x1f\x22\x9e\x24\x69\x78\x36\xad\xfc\x5d\x1f\x70\xa5\x4c\x4b\xc1\xd3\xbd\x78\xca\x52\x8e\xe8\xd0\xc0\x9d\x75\x6c\x0d\x7e\x03\x00\x00\xff\xff\x62\x22\x03\xc8\x1f\x01\x00\x00")

func controllerControllerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerControllerGoTmpl,
		"controller/controller.go.tmpl",
	)
}

func controllerControllerGoTmpl() (*asset, error) {
	bytes, err := controllerControllerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/controller.go.tmpl", size: 287, mode: os.FileMode(420), modTime: time.Unix(1498463995, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerGen_controllerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x41\x4b\x33\x31\x10\x86\xef\xf3\x2b\x5e\x7a\xf8\x68\x3f\x6c\xf6\x2e\xf4\x50\xf5\x2c\x52\xbd\x4b\x9a\x9d\xc6\xd0\xee\x64\x49\x26\x62\x09\xf9\xef\xb2\x2d\x2e\x2a\x78\x7b\xc9\xf3\x64\xde\x99\xae\x83\x67\xe1\x64\x95\xb1\x3f\xc3\x07\x19\x95\x46\xeb\x8e\xd6\x33\x6a\x35\x4f\xd7\xf8\x68\x07\x6e\x8d\x28\x0c\x63\x4c\x8a\x25\x01\x0b\x1f\xf4\xad\xec\x8d\x8b\x43\xe7\x83\xac\x7d\x94\xe0\xa6\xb4\xf8\x05\x4f\x2c\xfb\xb8\x1e\xec\xc4\x8e\x41\xff\xc6\xf1\x18\x34\x77\xa7\xe8\x17\xb4\x22\x7a\xb7\x09\xaf\xd8\xe0\x14\xbd\x79\x49\xd6\xf1\x61\x7e\x9a\x3c\xb3\x63\xe9\x39\x3d\x17\xe7\x38\x67\xa2\x5a\x93\x15\xcf\x30\xbb\x58\x94\x73\x6b\xa4\xe7\xf1\x72\xc2\x75\xf7\x6d\xf2\x19\x59\x53\x71\x8a\x4a\x8d\xe8\x50\xc4\xe1\x21\xce\xc2\xd2\xe1\xbf\x0f\x62\xee\xa3\x28\x7f\xe8\x0a\x95\x80\xd1\x26\x3b\x64\xdc\x6e\x7e\x0e\xaa\x8d\x80\x5a\xc3\x01\x66\x9b\x7c\x19\x58\x74\x6a\x04\x9c\xb9\x0b\xd2\x2f\xff\x5d\xff\xad\x2e\x16\x4b\x7f\x61\xfd\xf7\xae\x1b\xcc\x4e\xa3\x2f\xe7\x33\x00\x00\xff\xff\xf8\x73\x52\x56\x8d\x01\x00\x00")

func controllerGen_controllerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerGen_controllerGoTmpl,
		"controller/gen_controller.go.tmpl",
	)
}

func controllerGen_controllerGoTmpl() (*asset, error) {
	bytes, err := controllerGen_controllerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/gen_controller.go.tmpl", size: 397, mode: os.FileMode(420), modTime: time.Unix(1498464004, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerGen_routeGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\x4a\x03\x31\x14\x45\xf7\xf9\x8a\xcb\xe0\xa2\x15\xcd\xec\x85\xae\x54\x5c\x29\x83\x7f\x90\x4e\x5f\xdf\x04\x9d\x24\xa4\x89\x28\x8f\xf7\xef\x32\xc9\xa2\xab\x6e\xc2\x3d\x37\xb9\x07\x32\x8e\x60\x0a\x94\x5d\x21\x1c\xff\xc0\x3e\xa4\x62\x92\x9b\xbf\x1c\x13\x44\xec\xd4\xe3\x87\x5b\x49\xd5\x88\xe0\x8e\x73\xac\x69\x63\x3c\x1d\x50\x53\xa2\xfc\xec\x56\xfa\x86\x6d\x9d\xaa\xf1\x6b\x8a\xb9\x60\x60\x5f\x96\x7a\xb4\x73\x5c\x47\xf6\xe1\x91\x63\xf0\xf3\x96\x06\x63\x7e\x5c\x86\xc8\x55\xa5\xfa\x19\x6b\xa1\xb7\x8d\x71\xcf\x3e\xd8\xc6\xb9\x15\xe6\x5c\xc3\x8c\x4c\xec\x2f\xa5\xd5\xbb\xbc\x9d\xfd\xdd\x6b\x60\x1f\x68\x0f\x31\xb8\x6d\x3c\xa0\x2d\x6c\xa3\xdd\x20\xd2\xf5\x53\xa6\xb3\xff\x55\x1d\xf6\x6d\x9c\x5d\x60\x42\xbf\xba\xa8\x1a\xe0\xb6\xd2\x8a\xb4\xaf\xc3\xbe\x53\x59\xe2\x49\xb5\x69\x27\x57\x16\xd5\xe1\x01\x2f\x51\xc4\xf6\x51\x97\x53\x38\xa9\x1a\x35\xff\x01\x00\x00\xff\xff\x8d\xb4\x8e\x2d\x70\x01\x00\x00")

func controllerGen_routeGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerGen_routeGoTmpl,
		"controller/gen_route.go.tmpl",
	)
}

func controllerGen_routeGoTmpl() (*asset, error) {
	bytes, err := controllerGen_routeGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/gen_route.go.tmpl", size: 368, mode: os.FileMode(420), modTime: time.Unix(1498465889, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllerRouteGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xca\x31\x0a\x02\x31\x10\x46\xe1\x7e\x4e\xf1\xb3\x95\x2b\xb8\x7b\x0a\x5b\x91\xbd\x41\x36\x8c\xe3\x20\x99\x84\x38\x29\x24\xe4\xee\xb2\xd8\xd9\x3c\xbe\xe2\xad\x2b\x84\x8d\x6b\x70\xc6\xfe\x81\xa8\x15\xa7\x12\xe2\x2b\x08\xa3\xf7\xe5\xfe\xe3\x2d\x24\x1e\x83\x34\x95\x5c\x1d\x93\xa8\x3f\xdb\xbe\xc4\x9c\x56\x51\xbb\x48\x36\x8d\x87\x26\xa2\x47\xb3\x88\x8d\x45\xdf\xbe\xe5\xe6\x7c\xaa\x47\x71\x16\xb5\xe5\x6a\xa2\xc6\x33\x3a\x01\xf5\x7f\x99\x69\xd0\x37\x00\x00\xff\xff\x96\x6d\xa6\xc5\x8e\x00\x00\x00")

func controllerRouteGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_controllerRouteGoTmpl,
		"controller/route.go.tmpl",
	)
}

func controllerRouteGoTmpl() (*asset, error) {
	bytes, err := controllerRouteGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controller/route.go.tmpl", size: 142, mode: os.FileMode(420), modTime: time.Unix(1498465950, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gen_typesGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8d\xc1\x4a\x03\x31\x10\x86\xef\xf3\x14\x3f\xcb\x1e\xf4\x92\xd2\x6b\xa1\x4f\x20\x8a\xa0\x78\xb5\x69\x33\x2c\xd5\x34\x09\xd9\xd9\xc8\x32\xcc\xbb\x4b\xba\x07\xc1\xdb\x30\xf3\x7d\xdf\xec\x76\x13\x27\xae\x5e\x38\xe0\xbc\x62\x2a\x42\xc5\x5f\xbe\xfd\xc4\x50\x75\xaf\xdb\x68\x46\x74\xbd\x95\x5c\x05\x0f\x04\x0c\x72\xbd\xf1\x40\x8f\x44\xcd\x57\x7c\xe2\x88\xbe\x70\x2f\xf9\x87\x48\xb5\xfa\x34\x31\xc6\x86\xc3\x11\x92\xdf\x72\x15\x0e\xcf\xbe\xc0\xbd\xaf\x85\x67\x33\x92\xb5\xf4\xf8\xd8\xdc\x13\xaf\x30\xc3\x2c\x75\xb9\x08\x94\x80\x3f\x7d\xff\xdf\x1f\x9b\xfb\xf0\x71\x61\x98\xdd\xc1\xb1\xed\x7b\xc0\x0c\xaa\x69\x89\xd1\x9f\x23\xf7\x17\xdd\xdd\x48\x33\x9c\xbe\xe6\x9c\x0e\x83\xea\x92\x02\xd7\x78\x4d\xdb\xf9\xee\x0d\x27\xa8\x72\x0a\x66\x64\xa4\x0a\x4e\xa1\xb7\x7f\x03\x00\x00\xff\xff\x19\x31\x59\xf6\x12\x01\x00\x00")

func gen_typesGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_gen_typesGoTmpl,
		"gen_types.go.tmpl",
	)
}

func gen_typesGoTmpl() (*asset, error) {
	bytes, err := gen_typesGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen_types.go.tmpl", size: 274, mode: os.FileMode(420), modTime: time.Unix(1497164150, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x93\x41\x6b\x1b\x3d\x10\x86\xcf\xd2\xaf\x98\x4f\x60\xd8\xfd\xd8\xae\x7b\x08\x3d\x04\xf6\x10\xda\xb4\x04\x9a\x60\x92\x42\x0f\x69\x28\xb2\x77\x24\x0f\xd1\x4a\x42\x92\x93\x9a\x92\xff\x5e\x24\x6d\xb2\x26\x3e\x58\x1e\xe9\xd5\xbc\x33\x8f\x47\x5e\xee\x1e\xa5\x46\x98\x24\x59\xce\x69\xf2\x2e\x24\x68\x38\x13\xca\x48\x2d\xf2\x3a\xa5\xbc\x90\x5b\x93\x3b\x24\x32\x39\x70\x31\x7f\xc7\x14\x76\xce\x3e\xcd\x3f\xc9\xea\xba\x7b\x8c\x3b\x69\x8c\xe0\x9c\x09\x4d\x69\x7f\xd8\xf6\x3b\x37\xad\x0d\xda\xad\xfb\x30\xc9\xb5\x76\x8f\x94\xe2\xda\x38\x2d\x78\xcb\xf9\x93\x0c\xd9\x6e\xa7\x34\xe4\xcf\xff\x9f\x9d\x55\xa4\x39\x93\xde\xdf\xc8\x09\xa1\x66\xe6\xcc\xd3\x58\x04\x64\xd3\xe9\xb5\xa2\xfe\x4a\x06\x01\x06\x10\x35\x5c\xd7\xa5\x3f\xca\x29\x57\xeb\x69\xac\x02\x28\x1a\xe3\xf4\x5a\x7a\xdf\x7b\x1a\xc5\x9b\x4d\x11\x0c\x20\x6e\x2e\xae\x2f\x4b\x59\xea\x60\x77\x40\x96\x52\xd3\xc2\x5f\xce\xb2\xdd\x6f\x18\xc0\xc5\xfe\xfa\x71\xa4\xd0\xe4\x34\xa2\x2b\xb1\x1b\x71\x83\x61\x6a\x39\xdb\xc6\x0e\x30\x04\x38\x1f\xa0\xb2\xea\x6f\x51\x16\xf3\xe6\xc4\xa7\xe5\x8c\x54\xd1\xfd\x37\x80\x25\x93\xf3\x33\xe3\x74\x7f\x19\x82\x0b\xaa\x11\x01\xe5\x08\xaf\xfd\x63\xde\xec\x20\xed\x11\xbc\x4c\x7b\xa0\x08\xab\x6a\xe3\xc2\x39\xac\xa2\xe8\xe0\x24\x77\x39\x68\x39\x7b\x59\x00\x0e\x33\xc2\xd8\xff\x08\x34\x35\x35\x68\xb6\xb1\xed\x40\xfc\xb2\xa2\xe5\x2f\x73\xb7\xcf\x81\x12\x6e\x68\xac\x1d\x67\xde\x03\xcc\x7f\x66\xff\x0d\x93\xcf\x27\x9c\xcd\x8d\xfd\xcc\xe2\xd2\xd9\x8c\xb7\x83\xfb\x87\xed\x31\x61\x33\x4f\x45\x7f\x95\x9c\xcc\x87\x6d\xdb\xc1\xc7\x4f\x67\x67\x8b\xd1\x5e\xda\xd1\xe0\xa5\x9d\x9d\x5c\xec\x6f\x71\x72\x4f\x6f\xa9\xde\x2b\x6f\xd1\x38\x39\xde\x91\xb6\xd2\xd4\x2b\x16\x9f\xeb\x9c\x64\xd4\x19\x57\x8d\x1a\x25\x4d\x9c\xf9\x2e\x92\x77\x94\xaf\xac\x72\xaa\x11\xab\x78\x0e\xa1\x24\x86\x3a\x2e\x0b\xc8\x96\xb3\x32\x8f\xc3\x92\x84\x33\x56\xc5\xb3\x51\x41\xfc\x5a\x65\x7e\x3a\xb5\xae\xfc\x66\xfa\x8d\x0c\x11\xb3\x62\x01\xca\x8b\xf3\x17\x54\xf2\x60\xd2\x77\xa7\x35\x86\xfe\x0e\xd3\x26\xa0\xa2\x3f\x8d\x9a\x52\x7f\xe7\x03\xd9\xa4\x1a\x71\xbf\x1a\x1f\xe0\x7e\x15\x1f\x44\x07\x9e\xc6\xa5\xa8\x96\xf3\xb9\xaa\x93\x86\x53\x38\xe4\x72\x47\x54\x18\xe0\xa4\x3b\xb4\xa3\x68\x39\xab\xfc\x2e\xbc\x6f\x32\xd3\x7f\x01\x00\x00\xff\xff\x30\x54\xd7\xbe\xeb\x03\x00\x00")

func mainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTmpl,
		"main.go.tmpl",
	)
}

func mainGoTmpl() (*asset, error) {
	bytes, err := mainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tmpl", size: 1003, mode: os.FileMode(420), modTime: time.Unix(1497174442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelAllAllGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8c\x31\x8e\xc2\x30\x10\x45\xfb\x39\xc5\x57\xb4\x45\xd2\xd8\xfd\x4a\x5b\x6c\x48\x8d\x10\x37\x30\xc9\x60\x22\x1c\x3b\x32\xa6\x40\xa3\xb9\x3b\x22\x81\x54\x94\x33\xff\xbd\x67\xad\xe7\xc8\xd9\x15\x1e\x70\x7a\xc0\x8f\x71\x2e\x34\xbb\xfe\xea\x3c\x63\x4a\x03\x07\xa2\x71\x9a\x53\x2e\xa8\x09\x10\xc1\x4f\x4e\xa9\x1c\x5c\xb9\xe0\xf7\x0f\xe6\xf8\x39\x54\xd7\x39\xbb\xe8\x19\xa6\x6b\xb1\xbe\x2a\x91\xcd\x50\xb5\x4b\xd2\x8a\x98\xbd\x9b\x58\xb5\x82\x08\xc7\x41\x95\x1a\xa2\xf3\x3d\xf6\xd8\x85\x74\xe3\xff\x10\xea\x06\xf2\xbd\xb8\xc9\x66\x61\xbb\xf6\x85\xbe\x2b\x4a\xcf\x00\x00\x00\xff\xff\x61\xa1\xa3\x6c\xd1\x00\x00\x00")

func modelAllAllGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelAllAllGoTmpl,
		"model/all/all.go.tmpl",
	)
}

func modelAllAllGoTmpl() (*asset, error) {
	bytes, err := modelAllAllGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/all/all.go.tmpl", size: 209, mode: os.FileMode(420), modTime: time.Unix(1497967059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseDbGoTmplSwp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9a\x4d\x88\x1c\x45\x14\xc7\xff\xeb\xc5\xe9\xe9\x9d\xee\xa0\xa8\x78\xab\xb4\x12\x66\xe2\x6e\xf7\x26\x82\xc4\x81\x45\xb2\x3b\x9a\x2c\xc9\x9a\x95\x8d\x2e\x8a\x10\xaa\xa7\x6b\x7a\x9b\xed\xaf\xad\xae\x89\x3b\x14\xad\x82\xa0\x18\xf0\xe6\x17\xa2\x57\xc1\x43\x3c\xaa\x17\xf1\xe8\x17\x08\x1e\x05\x0f\x62\x14\x25\x67\x0f\xc6\x93\xf4\xc7\xec\xce\x24\xbb\x98\x93\x8b\x52\xbf\x4b\x53\xef\xbd\x7a\xfd\xfa\xf5\xff\x35\x0c\x53\xee\xc2\x33\x2b\xab\xe4\x94\xbd\x00\x00\x47\x80\x87\x4e\xad\x3c\xfb\xc7\x37\xaf\x43\xdb\x9c\x41\x44\x43\x17\xb7\x41\x14\x26\xb1\xef\x26\xff\x18\xf7\x62\x91\xd0\x79\x21\xe1\x5b\x59\x4a\xfb\xcc\xc9\x78\xdf\xf1\x03\xb1\x39\x74\xed\x7e\x12\x39\x21\x8b\xdd\x64\x3e\xa2\x8e\x1f\xc4\xa9\x70\x04\x8b\xd2\x90\x0a\xe6\x44\x89\xc7\x42\xc7\xa3\x82\xba\x34\x63\x8e\xe7\xda\x7e\x62\x8b\x28\x0d\x6f\xa7\x36\x85\x42\x31\xa6\x85\x87\x4f\x9e\x28\x47\xfd\x01\xeb\x28\xb9\xfb\xae\xa7\x0f\xbb\x20\x85\x42\xa1\x50\x28\x14\x0a\x85\x42\xf1\x2f\x22\xd2\x19\xbc\x04\xe0\x8e\x7a\x7d\xb6\xbe\xce\xdc\x74\x55\x28\x14\x0a\x85\x42\xa1\x50\x28\x14\x0a\x85\x42\xf1\xdf\x85\x7a\xc0\x73\x77\x02\x6f\x37\xaa\xff\xff\xc7\xbf\xff\xaf\x9b\xc0\x77\x26\xf0\xa9\x09\x7c\x62\x02\x57\x4d\xe0\x03\x13\x78\xdf\x04\x5e\x36\x81\xe7\x4d\xa0\x6b\x02\xf7\x9b\xc0\x7d\x26\x70\xaf\x09\x1c\x31\x81\x1b\x06\xf0\xa7\x01\xfc\x62\x00\xdf\x1a\xc0\xd7\x06\xf0\x95\x01\x7c\x6c\x00\xef\x19\xc0\x15\x03\x78\xcd\x00\xd6\x0c\xe0\x31\x03\x38\x69\x00\x8e\x01\x18\x06\xf0\x63\x0b\xf8\xa1\x05\x7c\xd6\x02\x5e\x6d\x01\xaf\xb4\x80\xd3\x2d\xc0\x9d\x05\xd6\x66\x81\xe3\xb3\x40\x67\x16\xb8\xa1\x03\xd7\x75\xe0\x77\x1d\xf8\x4d\x07\xbe\xd4\x81\xab\x3a\xf0\x8e\x0e\xbc\xa9\x03\x1b\x3a\xf0\x84\x0e\x3c\xaa\x03\x8f\xe8\xc0\x3d\x3a\x70\xad\x09\xfc\xd4\x04\xbe\x68\x02\x6f\x34\x81\x2b\x4d\xe0\x6c\x13\x08\x34\x60\x43\x03\x4e\x68\xc0\x82\x06\xfc\xd5\x00\x7e\x6d\x00\xd7\x1a\xc0\xcf\x0d\xe0\xfb\x06\xf0\x79\x03\xf8\xa8\x01\x7c\xd8\x00\xde\x6d\x54\xbd\x7a\xab\x71\xc8\x2f\x4e\xa1\x50\x28\x14\x8a\xff\x1d\x39\x34\xcf\x5d\x89\x07\x09\x59\x24\x71\x10\x42\xcb\xa1\xd5\x16\xbb\xb7\x64\x2f\x87\x49\xc6\xda\x1d\x68\xc1\x80\xd4\x71\x47\xcb\x40\x22\x31\x18\xc6\x7d\x52\x06\xf4\x96\xda\x1d\x22\xcb\x64\x9c\x89\x21\x8f\x49\xc6\x78\x40\xc3\xde\x52\xb1\x03\xda\xe4\x8a\x2c\x92\x63\x9e\x6b\x57\x0b\xd9\x5b\xea\x8e\x8f\x1b\xce\x91\x9e\xbb\x4a\xd3\x2e\xf1\xdc\x88\xa6\x39\x8a\xc2\x22\x9a\xda\x17\x39\xed\xb3\x0b\x71\xdb\xb2\xe6\x48\x98\xf8\x76\x8f\x0d\xe8\x30\x14\xe7\x13\xdf\x67\xbc\x03\x4d\x93\x92\xc5\x5e\x9e\x93\xfa\x0a\x4d\x4a\xc2\x69\xec\x33\x62\x5f\xa4\x6e\xc8\x56\x99\xa0\x59\xe9\x27\xc1\x80\x44\x54\xf4\x37\xc9\x83\xa2\xf0\xd4\x01\x4f\xd2\x88\xe5\x79\x75\x5f\xfb\xb4\xe7\x95\xc6\x8d\x40\x6c\x16\x8e\xb6\x94\x64\x98\xa6\x8c\x2f\xd3\x88\x85\x53\x3b\x64\x3e\x47\x2c\x29\x27\x4d\x56\xc7\x5e\x67\xe2\x1c\x1b\x65\x6d\x29\x83\x01\x61\xdb\xc4\x5e\xe3\x41\x44\xf9\xe8\x1c\x1b\x3d\xbe\x23\x38\x25\x16\x1d\x8a\xe4\x52\x10\xf7\x39\x8b\x58\x2c\xac\x3c\x17\x7c\xc8\xa4\x64\x61\xc6\xf2\x7c\x40\xc3\x8c\xd5\x8f\x52\xa5\xdf\xdb\x5f\xe4\xaf\xdb\x42\xba\x8b\xe4\x98\x9f\xf0\xd4\x2e\xbb\x26\x7b\x6e\x97\x4c\x74\x32\xa0\x21\xeb\x8b\x2e\x29\x23\x56\x47\xeb\x4f\x9d\xaf\x4d\xb2\x68\x50\xf9\x8e\xeb\xe0\xa2\xde\x55\xba\x73\x21\x65\xf1\x72\x12\xc7\x59\xbb\xb7\xb4\x9c\xc4\x83\xc0\xb7\x27\xad\x95\x02\xf6\x75\x15\x82\x58\x20\x72\xdf\xac\x2b\x5e\xc8\x6e\xcd\xba\x6b\xbd\x35\xeb\xae\x6b\x2a\x6b\x4a\xe3\xa0\xdf\x66\x9c\x57\x1b\x18\xe7\x7b\x2a\xd4\xf6\x9e\xba\xb0\x77\x17\x49\xb6\x1d\xda\x45\x75\x6d\x2b\x1a\x65\xdb\xa1\x35\xb7\x77\x87\xf5\x52\x88\xeb\xc9\x90\xf7\x59\xbb\xd3\xa9\xb2\xef\x2b\xd9\x60\x30\x65\xb8\x49\xf5\x67\x98\x58\xaf\xbd\xed\x0e\x39\xbe\xab\xe7\xe9\x21\xa8\x06\x66\x62\xc0\x94\xf0\x95\xf0\x0f\x49\xf8\xfb\x4a\x7e\x2c\xd0\x83\x3e\xee\x67\x98\xd8\x47\xe0\x9d\xe9\x0f\xba\xb6\xe7\x1d\x4b\x5d\x9b\xb4\x41\x1b\x57\x51\xe7\xa9\x16\xb8\x4c\x39\x69\x97\xd9\xac\x03\x8e\xa6\x6f\x05\xc2\xf1\x5c\xeb\xa0\x80\x64\x2b\x10\x99\x13\x26\xbe\x05\xed\x12\x99\x8c\xf1\x93\xf9\x6c\x3b\x9c\xf7\x78\x70\x99\x71\xa7\x6a\xc6\x74\x96\x9d\x80\x26\x2c\xa6\x81\x53\xe8\xc4\x02\x34\x6b\xf7\xd4\x7b\x19\x1c\x44\x69\xc2\x45\x51\x9f\x94\xe3\x99\xe9\x2e\xd6\x43\x40\xf2\x1c\x29\xed\x6f\x51\x9f\x11\x29\x87\xb1\xc7\x78\x18\xc4\x8c\xd8\xd5\x28\xc0\x71\x88\xcf\x62\xc6\xa9\x60\x1e\x71\x47\xa4\x3c\x65\x8f\xbf\x03\x00\x00\xff\xff\xfc\xb8\x08\xa1\x00\x30\x00\x00")

func modelDatabaseDbGoTmplSwpBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseDbGoTmplSwp,
		"model/database/.db.go.tmpl.swp",
	)
}

func modelDatabaseDbGoTmplSwp() (*asset, error) {
	bytes, err := modelDatabaseDbGoTmplSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/.db.go.tmpl.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1498465787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseTableGoTmplSwp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9a\x6d\x8c\x24\x45\xf9\xc0\x7f\xb7\x2f\xb3\xbb\x33\x3d\xdd\xff\xf0\xd7\x18\x3e\x18\x8b\xe1\x72\x99\x65\x97\x1e\xde\x54\x72\x71\x43\xdc\xbb\xe5\x5c\xe5\x96\x83\xdd\x3b\x24\x20\xbb\xdd\x33\x35\x7b\x7d\xdb\xd3\x3d\xdb\x5d\x73\xb7\xeb\x30\x20\x41\x13\xcd\x49\xc2\x17\xc5\xa8\x31\x18\xf9\x40\x34\x31\x21\x31\x91\xc4\xf0\xc1\x17\x62\x82\x10\x0c\x8a\xa8\x68\xa2\xc6\x90\x80\xc4\x77\x13\xfc\xa0\x31\xdd\xf3\xc2\xec\xee\xed\xed\x08\x72\x18\xac\xdf\x87\xad\xad\xa7\xba\x9f\x7a\xea\x79\xaa\x9f\x9a\xaa\x6e\xf7\x8a\x13\xf3\x47\xc5\xb5\xf6\x15\x00\xff\x07\x17\x3d\x74\xec\xd6\xdb\xd5\x7d\x4c\x9c\xdc\x47\xcd\xf1\x5d\x06\xa0\xe6\x87\xc1\xaa\x1b\xee\x79\xdd\x5d\x89\xc2\xd2\x99\x30\x5a\x8b\xeb\x4e\x59\x96\xe2\xa8\x5c\x5a\xf5\xd4\xc9\x86\x6b\x97\xc3\x5a\xc9\x97\x81\x1b\x5e\x5e\x73\x4a\xab\x5e\x50\x57\x25\x25\x6b\x75\xdf\x51\xb2\x54\x0b\x2b\xd2\x2f\x55\x1c\xe5\xb8\x4e\x2c\x4b\xca\x71\x7d\x69\xaf\x86\xb6\xaa\xd5\xfd\x41\xcc\xd3\x68\x34\x0d\x55\xbd\xfc\xda\x3c\x57\x5f\x75\x65\xfa\xa8\x5f\x5a\xb8\x44\xfc\xff\x45\xc7\xdf\x6c\xab\x34\x1a\x8d\x46\xa3\xd1\x68\x34\x1a\xcd\x05\x44\xd5\x87\xb9\x1b\x18\xea\xd4\xef\xee\x94\xfb\xb6\x95\x23\x9d\x32\xd7\x29\xef\xd9\xd6\x3e\xdc\x29\xa7\x3a\xe5\xd9\x6d\xed\x1a\x8d\x46\xa3\xd1\x68\x34\x1a\x8d\x46\xa3\xd1\x68\xde\x3c\x9c\x0a\x2c\xee\x83\xb5\xe1\xf6\xfb\xff\xee\xfe\xff\x25\x0b\x9e\xb4\xe0\x07\x16\x7c\xc7\x82\x47\x2c\x78\xd8\x82\x07\x2d\xf8\xac\x05\x9f\xb1\x60\xc3\x82\x13\x16\xbc\xd7\x82\x77\x5b\x70\x8d\x05\x97\x5a\x60\x59\xf0\x77\x13\x7e\x6d\xc2\x53\x26\x3c\x69\xc2\x43\x26\xdc\x6b\xc2\x94\x09\x97\x99\x60\x98\xf0\x72\x1e\x5e\xca\xc3\x8b\x79\x78\x38\x0f\x67\xf2\x20\xf3\xf0\xe1\x3c\x9c\xc8\xc3\xf1\x3c\xe4\xf2\xf0\x82\x01\x4f\x1b\xf0\xa8\x01\x5f\x32\xe0\x7e\x03\x3e\x6e\xc0\xc7\x0c\x88\x0d\x58\x37\xa0\x6e\xc0\xfb\x0c\x38\x60\x40\xde\x80\x57\x72\xf0\xcb\x1c\xfc\x2c\x07\xcf\xe5\xe0\x27\x39\x38\x9b\x83\x3b\x73\xf0\xd1\x1c\x6c\xe6\xa0\x94\x83\x8b\x73\x90\xc9\xc1\x50\x0e\xfe\x94\x85\x3f\x64\xe1\xf7\x59\x78\x2c\x0b\x9f\xcf\xc2\xbd\x59\x58\xce\xc2\x6c\x16\xde\x95\x85\x9f\x4e\xc0\xf7\x27\xe0\xd3\x13\x70\xe7\x04\xd4\x26\xe0\x83\x13\x30\x3c\x01\x7f\x1e\x87\x6f\x8f\xc3\x23\xe3\xf0\x95\x71\x78\x60\x1c\xe2\x71\x38\x31\x0e\x57\x8f\xc3\xcb\x63\xf0\xfc\x18\x3c\x38\x06\xf7\x8f\xc1\x3d\x63\x70\xc7\x18\xbc\x63\x0c\x32\x63\xf0\x6c\x06\x1e\xcf\xc0\x37\x33\xf0\xb5\x0c\x7c\x39\x03\xf7\x66\x60\x3d\x03\x6e\x06\xee\xc8\xc0\xed\x19\xb8\x2d\x03\x7f\x19\x85\x27\x46\xe1\x1b\xa3\x70\x70\x14\x8a\xa3\x70\xf1\x28\xbc\x7d\x14\x5e\x19\x81\xdf\x8e\xc0\xaf\x46\xe0\x99\x11\xf8\xe1\x08\x3c\x3d\x02\x77\x8d\xc0\xc9\x11\x18\x1b\x81\xbf\x0d\xc3\x0b\xc3\xf0\x9b\x61\x78\x76\x18\x7e\x34\x0c\xcf\x0c\xb7\xe7\x81\x35\x0c\xd7\x0d\xc3\x53\x43\xf0\xad\x21\xb8\x6f\x08\xee\x1c\x82\xd3\x43\xb0\x3a\x04\xe5\x21\xb8\x69\x08\x0e\x77\x0e\x8d\x84\x88\xa4\x6a\x44\x81\x08\xdd\x53\x88\xe4\xaf\xbd\x28\xd5\xe1\xd9\xf9\xa0\x1a\x16\x27\x11\xa2\x85\x10\x42\xd4\x9d\xc0\x2b\x17\x65\x14\x4d\xa6\xd5\xb6\xb0\x77\x6f\xe0\xf9\xa9\xc0\xab\x0a\x19\x45\xf6\x5c\x14\x85\x51\x71\x52\xcc\xcc\x88\x78\xdd\x4f\xaa\x0b\xe1\xcd\xe1\x99\xb8\xd7\xd0\xa4\x7b\xad\xb8\x64\x26\xb9\x3b\x95\x24\xd5\x83\x33\xa2\xe2\xda\x8b\xd2\x97\x65\x75\x63\x20\x8b\xa1\x7b\x6a\x5a\x14\x16\xe7\x6e\x98\x3b\xb4\x24\x9a\xcd\xaa\x27\xfd\x4a\xbc\x1c\x38\x35\x19\x0b\xfb\x50\xe8\x37\x6a\x41\xdc\x6a\x89\xeb\x6f\xbe\xf1\xa8\xa8\x36\x82\xb2\x38\x22\x55\xb3\xd9\xa8\xd7\x65\x74\xc8\xa9\x49\x5f\xd8\x4b\x8e\xeb\x2f\x38\x35\xd9\x6a\x5d\xef\x45\xb1\x2a\x96\xc3\xa0\x22\x62\x15\x79\xc1\xea\xb4\x70\xa2\xd5\x58\xd8\xb6\xed\x05\x4a\x46\x55\xa7\x2c\x9b\xad\x49\x21\x2e\xeb\x68\x58\x2e\xb7\x55\x2c\x38\xb5\xdd\x75\xcb\xd7\xa8\x7c\xa7\x0a\xd1\x84\xd6\xab\x01\x29\x07\xea\xdc\xee\xdf\xe9\xb9\x72\xa0\xa6\x7b\xee\xeb\x7c\x6b\xd3\x71\xe2\x7c\xa0\x8a\x5d\xff\x95\xc3\x46\xa0\x8a\x57\x4e\xb6\xdd\xb5\xd2\x6c\xf6\xf7\xbe\x22\x6e\xf9\xc0\xdc\xcd\x73\xa2\x20\xa6\x44\x32\x8c\xb6\xfd\xb6\x6d\x27\x5d\x76\x95\x26\x1d\x1c\x49\xa6\x47\x71\x92\x3d\x5d\x72\x28\xed\x6e\x6f\x97\x78\x81\x7a\xcf\x35\xdb\x06\x1f\xba\xa7\xe2\xde\xe8\x77\x4e\xca\x6a\x18\x89\xe5\xe9\xa4\x21\xb1\x28\x72\x82\x55\x99\xde\x92\x7a\x63\x20\x97\x2d\xef\xe6\xb0\xe2\x81\x44\x51\xff\xa4\x5b\x95\x2a\x1d\xd5\xf5\xc9\xe4\x5b\x38\xe7\xd4\x7b\xbd\xbe\x14\x6d\xeb\x0f\xce\x88\xdb\x3e\xb2\xfb\x04\x69\xb6\xf6\x76\xfa\x2d\x27\x65\x24\x07\x70\xfa\xf9\xfa\xe9\xc6\x62\x20\x47\x6e\xf7\xe2\x7c\x10\xcb\x48\x25\x0f\x6e\x72\x7d\xb3\x29\x83\x4a\xab\xad\xa8\xff\xff\xed\xb5\x9d\xf5\x76\xd8\xb7\xda\x98\x46\xa0\xd5\x12\x33\x42\x79\x35\x69\x2f\x84\x67\x8a\x93\xfd\x0a\xfc\x58\x0e\xac\xc1\x0b\xd4\xd5\x57\x15\x1b\xca\xf3\x63\xfb\x88\x54\xc7\x97\x0e\x2d\x79\x35\x59\x9c\xb4\x8f\x07\xde\x46\x71\xb2\x5f\x6f\x32\xe8\x75\x61\x1f\x09\x97\x36\xeb\x52\x14\xd2\x3b\x0b\xa2\x7f\x24\x5b\x3b\xfe\xf7\x86\xd2\x33\xe1\x86\xb0\xec\xf8\x6d\x23\xfe\x1b\x06\x25\x3a\x57\x2c\x34\x7c\x5f\x14\x6e\x9d\x5b\x2c\xf4\xe2\xd8\x6d\x4a\x3b\x16\x85\x46\xbd\xe2\x28\x59\x59\x76\x54\x4f\x81\x8e\xf5\x5b\x34\xd6\xe5\x48\x6e\x8d\x75\xb3\xd9\xc9\xbf\xdd\x9c\xd8\x16\xf7\x67\xb9\x64\x14\x47\xa4\x5a\x5c\xf7\xe7\x36\x64\xb9\xa1\x92\xdf\x00\xed\x4c\x96\xa4\x89\xf3\xac\x88\x93\xa2\x93\x4d\x26\x77\x2e\x0f\xf6\x72\xc5\xed\xe5\xa8\x7e\xb1\xda\x68\xe7\xa9\x4e\xe5\xd5\x5c\x35\x58\x8f\xdb\x0d\x15\xab\x61\x54\xb7\xfb\x44\x5d\x53\xba\xfa\x67\x84\xda\x18\x50\xf7\xa2\x54\x4b\x91\x13\xc4\x4e\x59\x79\x61\x50\x54\x1b\xe2\xb2\x8a\x6b\xf7\x89\x26\xb7\xa6\xde\xc3\xee\x51\xa7\x7e\xf0\xd5\xdc\x9a\xd6\xa7\xdb\x4d\xb3\xfd\xf2\xd9\xe9\xae\x41\x15\x57\xcc\x88\x03\x15\xd7\x6e\xaf\x96\x69\x8a\xde\x75\xf5\x1e\xc4\xe0\xee\xaa\xbb\x33\x02\x3d\x33\xf7\x7a\xd8\x63\xa9\x0e\xcb\xaa\xd3\xf0\x95\xb0\xfb\x67\x9d\x57\x15\x76\xb7\xa1\x37\xdf\xb6\x4e\xa6\x56\xc7\xd3\x89\xe9\x07\x76\x5f\x18\xdb\xc3\x59\x90\x67\x76\x5f\x17\x3d\x75\x32\x6c\xa4\x63\x1f\xfc\x27\xd8\x6e\xbf\x89\x3b\x06\x0d\xd8\xdf\xde\xc6\x0d\x64\xd3\xf2\xce\xe9\x22\xc4\x4a\xc5\x3d\x58\xb8\xbc\xb0\x92\xb4\x57\xdc\xb4\xbd\x13\xf8\x84\x5e\x6b\xfa\x9c\xf6\xe9\xdf\x7f\xba\x97\x48\x9a\xcd\xfd\xa7\x3b\x99\xa1\xd5\x6a\xdf\x91\x8a\x3a\xed\x05\x71\x2a\x0e\x83\x6d\xb2\x95\xbe\x20\xf7\x9e\xff\xfd\xde\xb4\xd8\x7f\x3a\xf1\x4b\x7f\x26\x50\x49\xc6\xd9\x7d\x6c\xb1\x8a\x1a\x65\x95\x0c\xf1\xb4\x13\x89\xe5\x5e\x8a\x9c\x4f\x52\x54\x4f\xe6\x6e\x2a\x19\xdb\x0b\xf2\xcc\x6c\xa3\x5a\x95\x51\x4f\xbe\x65\x77\xd1\x93\x56\x6b\xca\x3e\x16\x79\x81\xf2\x83\x9e\xac\xbb\x86\x40\x12\xbf\xc2\x39\xbf\x5c\x0f\xd7\x3c\x15\x17\x76\x6d\xf6\x82\x35\x4f\x95\x2a\xee\xf6\x2b\x36\x3c\x27\x94\x81\xe3\x95\x92\x44\x51\x48\x5c\x5d\x48\xed\x4d\xaf\xab\xd6\x54\x5a\x26\xfd\xa7\xff\xf4\x3e\x85\x8f\xd7\xfd\x02\x5e\xad\x1e\x46\x4a\x14\xa1\xee\x94\xd7\x9c\xd5\xd4\x55\x41\x45\x46\xbe\x17\x48\x61\x1f\x9e\x6d\xbb\x89\x52\x49\xac\xca\x40\x46\x49\xea\x15\xee\xa6\x48\xbf\xb2\x4f\xf7\xff\x97\x64\xe1\xc5\x6c\x7b\xff\xdf\x7d\x7f\xff\x4f\x0b\xfe\x61\xc1\x03\x16\xac\x5b\x70\x9b\x05\xbf\x30\xe1\x09\x13\xbe\x68\xc2\x59\x13\x3e\x61\xc2\x69\x13\x22\x13\x56\x4c\x58\x34\xe1\x26\x13\x8e\x99\xf0\x5c\x1e\x1e\xc9\xc3\x17\xf2\xf0\xb6\x3c\x0c\xe5\xe1\xc7\x06\x7c\xd7\x80\xc7\x0c\xf8\xba\x01\x5f\x35\xe0\x73\x06\x9c\x35\xe0\x53\x06\x7c\xd2\x80\x2b\x0c\xc8\x1a\xf0\xd7\x1c\xa8\x1c\xb8\x39\xb8\x26\x07\x97\xe6\xe0\x9d\x39\x30\x73\x90\xcd\xc1\x2b\x59\xf8\x5d\xd7\x6e\x8d\x46\xa3\xd1\x68\x34\x1a\x8d\x66\x3b\x03\x6c\xc9\x2e\xfc\x6b\x8a\xad\xc7\xc6\xe7\x78\x59\xf1\xda\xcf\x8d\x13\xf1\xb1\xc8\xab\x39\xd1\xe6\x87\xe4\x66\xab\xb5\x32\x73\x5d\x61\x5a\xac\xc9\xcd\xf3\x9e\x1f\xef\xb1\x47\x1e\xe0\xf0\xb8\xb8\x26\x37\xc5\x96\xbe\xdb\xdb\xc2\xff\xc0\x96\xf9\xad\x15\x9f\x82\x98\x12\x81\x53\x93\x62\x4a\x14\x56\x66\xae\xeb\x3b\xe8\x4f\xdf\x50\xbd\xc1\x61\x9a\xdd\x4c\x4d\xbe\xc5\x53\x27\x0f\x85\x41\xc5\x4b\x0f\x93\x12\x73\xa6\xc5\x96\x83\xff\xd4\x16\xb1\xe5\xd8\x5f\xc7\xf1\x7c\x71\x2c\x5c\xd0\xf8\xa5\x21\x7b\x3d\xc1\x4a\xf6\xff\x75\x13\x1e\x35\xdb\xfb\xff\xee\xf7\xfd\x3f\xb7\xe0\x7b\x16\xbc\xdf\x82\x92\x05\xfb\x2c\xf8\xa3\x09\x2f\x99\xf0\x7c\xb2\xbf\x37\xe1\xf1\xee\x7d\x1a\x8d\x46\xa3\xd1\x68\x34\x1a\x8d\x46\xa3\xd1\xbc\x41\xfc\x6f\x1d\x32\x14\xa6\xd2\x43\x99\x29\x51\x10\x37\xcc\x1f\x9d\x5f\x12\x57\x16\x06\xfb\x1e\x74\xcf\x83\x86\x7f\x05\x00\x00\xff\xff\x22\x92\x2e\x39\x00\x50\x00\x00")

func modelDatabaseTableGoTmplSwpBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseTableGoTmplSwp,
		"model/database/.table.go.tmpl.swp",
	)
}

func modelDatabaseTableGoTmplSwp() (*asset, error) {
	bytes, err := modelDatabaseTableGoTmplSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/.table.go.tmpl.swp", size: 20480, mode: os.FileMode(420), modTime: time.Unix(1498457116, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseDbGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x51\x6f\x9b\x30\x10\xc7\x9f\xf1\xa7\xb8\xa1\xa9\x82\x29\x85\x3d\x47\xea\xc3\x12\xa6\xa9\x6a\xb3\x6e\x4a\xa5\x3d\x56\x07\x1c\xd4\xaa\xb1\x89\x31\x55\x23\xcb\xdf\x7d\x32\x90\x86\x4c\xe9\xa4\xbe\xf7\x29\xf8\xee\xfe\x7f\xce\xc7\xef\x92\xa6\x50\x93\x24\x8d\x86\x4a\xc8\xf7\x50\x73\xd9\x1a\xd6\x62\xf1\x84\x35\x81\xb5\xbd\x2c\x49\x0b\x2e\x09\x92\x9f\xd8\x90\x73\xcc\x5a\xf8\x6c\x30\x17\x04\xcb\x2b\x48\xee\x87\x27\xe7\x18\xe3\x4d\xab\xb4\x81\x88\x05\x61\x89\x06\x73\xec\x28\xed\x76\x22\x64\x2c\x08\x6b\x6e\x1e\xfb\x3c\x29\x54\x93\xbe\x70\x54\x24\x91\xa7\xb5\xd2\x6d\xc8\x82\x07\x98\x67\x6b\x75\xd9\xed\xc4\x65\xa9\xf9\x33\xe9\xb4\xd9\x0f\x06\x27\x7a\x41\x32\x57\x97\x0d\xa6\xb5\x7a\xe2\xa6\x4b\x85\xaa\xdf\xac\xe0\xf2\x89\x9b\xb4\xcc\x43\x16\x33\xf6\x8c\xda\x37\x97\xad\xd6\x4a\x56\xbc\x86\x2f\x65\x9e\x1c\x0e\x8c\x05\x65\x7e\x2d\x2b\x15\x04\x63\xd8\x3f\xb3\xa0\x23\xcd\x51\x8c\xa7\x79\x22\x66\xac\xea\x65\x01\x3f\xc8\x64\xab\x28\x86\x63\x0a\x2c\x0b\x78\x05\xa3\x19\x7c\xba\x02\xc9\x85\x8f\x05\x9a\x4c\xaf\xe5\x94\x60\x81\x63\xc1\x61\x48\x0b\x20\xad\xfd\x2c\xbb\x9d\x48\xee\x5a\x92\x51\x38\xde\x7b\x01\x87\xf6\x92\xad\xea\x75\x41\x51\x1c\x0f\xee\xbe\x7e\x66\xdd\xa2\xe4\x45\x44\x5a\xc7\x83\x2f\xaf\x8e\xba\x0d\xbe\x5c\x97\x82\xd6\x4a\xca\xce\x4b\xbe\x0e\x82\xc3\x9b\x93\x2d\x99\x79\x45\x74\x56\x77\xd6\xd5\xf7\xf9\x7f\xd7\xd7\x8a\xe8\xac\x6e\x74\x2d\xf3\x06\x5b\x7f\xf7\x0b\x4f\x43\x92\xe5\x1b\x6c\x6d\x96\x2f\xe1\x38\x9c\x8c\xa3\xa0\xc2\x2c\x61\xa8\xd8\xec\xb7\xbf\x6f\xa7\x90\x75\x8e\x05\xd6\x82\x46\x59\xd3\x44\xe2\x86\x0c\x76\xce\x81\xb5\xc0\x2b\x68\xd0\x14\x8f\x07\x5a\xc7\x82\x11\x62\x18\x5e\x9c\x7c\x2b\xcb\x21\xf8\x87\x9b\x47\x9f\x88\xac\x85\xbe\x6d\x49\xaf\xb1\x21\x71\xa2\xb0\x6e\x01\xa1\xb5\xf3\x50\x18\xfb\xab\xde\xd0\xbe\x8b\xac\xf5\x9f\x65\x07\xc9\x2f\xcd\x1b\xd4\xfb\x1b\xda\x7f\x7f\x31\x1a\x21\xc4\xde\xa8\x07\x2e\x0b\x4d\x0d\x49\x13\x3a\x67\x74\x4f\xd6\x92\xe8\xc8\xb9\x0a\x45\xe7\x0f\xb2\x74\x93\xfd\x51\xef\xfd\x59\x10\x4c\x59\x98\x7e\xa7\x91\x25\xf7\x1a\x0b\xba\x93\x51\x18\x2e\x40\xa8\x3a\xc9\xa8\xc2\x5e\x98\x5b\x55\xd7\xa4\xe3\x57\x9c\xe1\x0a\x2e\x5e\xd9\xb4\xd9\x6a\x39\x9b\xab\x9f\xf5\x72\x1c\x84\x63\xff\xf0\xe9\x8e\x80\x6f\xa7\x1d\x38\x87\xf9\x7c\x3f\xce\xc0\x3e\x4f\xbf\x1f\xf9\x41\xfc\x01\xfe\x07\xf8\xef\x03\xff\x84\xc9\xf7\xe2\x7f\x42\xec\x61\x09\xd6\x42\x75\x34\x2c\xc0\x5b\x7f\xee\x63\x24\xc9\x56\xc9\x50\x1b\x1d\xbe\xf1\xd4\x83\xe4\x82\x39\xf6\x37\x00\x00\xff\xff\xf6\x4b\x87\xa6\x6a\x07\x00\x00")

func modelDatabaseDbGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseDbGoTmpl,
		"model/database/db.go.tmpl",
	)
}

func modelDatabaseDbGoTmpl() (*asset, error) {
	bytes, err := modelDatabaseDbGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/db.go.tmpl", size: 1898, mode: os.FileMode(420), modTime: time.Unix(1497970731, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseTableGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x6d\x4f\xe3\x46\x10\xfe\xee\x5f\x31\xb5\x10\xb2\x8f\xdc\x46\xd7\x56\xfd\x80\x14\x55\xca\x0b\x34\x2a\xe4\x4e\x90\xd3\xa9\xaa\x2a\xb2\xb6\xc7\x61\xc1\xde\x35\xeb\x35\x10\x59\xfe\xef\xd5\xee\x26\xc6\x86\x24\xe7\xbe\x49\x50\x1d\x5f\x70\x66\xd6\xe3\x79\x9e\x67\x76\x66\xb7\xdf\x87\x25\x72\x94\x54\x61\x04\xc1\x0a\x96\x8c\x67\xca\xc9\x68\x78\x4b\x97\x08\x65\x59\xf0\x08\x65\xc2\x38\x02\x19\x0f\x67\x34\xc5\xaa\x72\x1c\x96\x66\x42\x2a\xf0\x1c\x00\x37\xa2\x8a\x06\x34\xc7\x7e\x7e\x97\xb8\xda\xa0\x58\x8a\xe6\x21\x4e\x95\xf9\x1f\xac\x14\xe6\xae\xa3\x1f\x97\x4c\x5d\x17\x01\x09\x45\xda\x7f\x64\x54\x20\xa7\xac\xbf\x14\x32\x73\x9f\x39\x13\xe4\x81\x78\x9f\xd2\xfe\x92\xf1\x5b\xa6\xfa\x51\xb0\x7b\x85\xb8\x65\x2a\x77\x1d\xdf\x71\xee\xa9\x84\x2b\x18\x80\xce\x80\xcc\xc4\x43\x6d\x88\x53\x45\x3e\x49\xc6\x55\xc2\x6b\x5b\x7e\x97\x90\x89\x94\x33\x71\x21\x1e\xf2\xda\x6a\x72\x25\x33\x7c\x18\x16\x71\x8c\xb2\xb6\x17\x8a\x25\x39\x99\x72\xf5\xc3\xf7\x8e\xa3\x56\x99\xa1\x26\xcb\x50\x8e\x68\x8a\x09\x90\x39\x0d\x12\xb4\xf4\x40\xae\x64\x11\x2a\x28\x1d\x80\xb2\x04\x49\xf9\x12\xe1\x80\xf5\xe0\xe0\x1e\x8e\x07\x40\x46\x22\x29\x52\x9e\x43\x55\x99\x05\x8d\x28\x07\xf7\xe4\x84\x61\x12\x55\x15\x94\xe5\xc1\x3d\x39\x15\xf3\x55\xa6\x23\x2e\xa2\xe0\xd8\x35\xa6\xb5\xdf\x85\x9b\x5c\xf0\x67\xb6\x05\x94\x25\xf2\x48\x0b\x04\x70\x15\x05\xf0\x2e\x0a\xc8\x78\x38\xe5\xb1\x00\xfd\x67\xa2\xbc\x77\x17\xda\xab\x1e\x8d\x77\x2e\x29\xcf\x69\xa8\x98\xe0\x0d\x7f\xe5\x38\x71\xc1\x43\x98\xe1\xc3\x4e\x94\x9e\x0f\xef\x76\x53\xa0\xb1\x8b\xe0\x46\xe3\xdd\x17\xe4\x0b\x53\xd7\xa2\x50\xe3\xa1\xe7\xdb\x17\xc8\x25\x2a\x9b\xb1\xb1\x48\x54\x85\xe4\xda\xd1\x29\xa7\x46\xb8\x8e\xc9\x1d\xee\x5c\xa5\x17\x69\x79\xac\x7c\x1b\xd1\x8c\x66\xd6\xc1\x62\x20\x63\x8c\x69\x91\x28\xa8\xcd\xda\x91\xa3\xda\xd8\x09\x34\x5e\xb0\xd2\xb4\x9f\xab\xed\x20\x3d\x9d\xde\x6e\x04\x3e\x34\x68\x32\x70\x36\x9b\x50\x63\x3a\xc5\x26\xa1\xba\x0e\x06\x70\xf8\x54\x09\x16\xd8\x78\x78\x5c\xbf\x44\xc6\xc3\x9e\x35\x06\xe7\x34\x6b\xda\xf5\xef\x9e\x49\xf3\xaf\x64\xd6\x28\x2a\xef\x65\x9d\xf9\x1b\xfe\x89\x2e\xc2\x01\xa8\xc7\xee\xc1\x4f\x51\x5d\xde\x25\x93\x47\x0c\x0b\x25\xa4\xe7\x83\xee\x1d\xa4\x61\x32\xb1\x59\x5c\x87\xff\x6e\x00\x9c\x25\x6b\xcc\x4f\x44\x6b\xdf\x0b\xf6\x35\x55\xdd\x53\x99\xf2\x1c\xa5\xda\x42\xbf\x8e\xf4\x3c\xcf\x66\x27\x68\xef\x7f\xe3\x60\x31\xe0\x1d\xd8\x7d\x0c\x6e\x28\x51\x37\xe3\x2b\xaa\xdc\x66\xf9\x6c\x56\xcd\x8a\x24\x01\xf7\xb7\xc9\xa5\xdb\xaa\xba\xb5\xd7\xb6\x0c\x70\x99\xee\x54\x6e\xb3\x30\x2d\xe7\x6d\x44\x9b\x6e\x33\x00\xb3\xde\xb3\x5d\xee\x14\xd5\xe7\xf9\x68\xce\x52\xf4\x7c\xf2\x99\xb3\x47\xcf\xf7\x1b\x5f\xc2\x24\xc7\xce\x71\xeb\x88\x67\x22\xa4\x89\x8d\xd9\x8c\x55\xef\x89\x2d\x91\x5f\x2d\xa8\xcd\x7c\xd9\x07\x65\xcb\x66\xdf\xa2\x75\x91\x45\xdf\xb4\x7e\xd5\xa0\xfe\xa6\xd6\x4f\x4f\x28\xa5\x6e\x0b\x75\x53\x5d\x37\x0e\x11\xdc\xf8\xb6\x57\xe9\x05\xad\x3e\x95\x51\xce\x42\x0f\xa5\xf4\x5b\xad\xf7\x14\xd5\xee\xc9\x77\x8d\x12\xbd\x50\xf0\x48\x9f\x3e\x18\x5f\xf6\x80\xca\x65\x0e\x84\x10\xc6\x15\xca\x98\x86\x58\x56\x3e\xfc\xfe\xc7\xd7\xe7\x62\xae\xd3\xdd\xb7\xb0\xac\x76\x4e\x9c\xab\xde\x0b\xbc\x97\x98\x60\xa8\xbc\x43\x1d\xb9\x07\xee\xe5\xe4\x6c\x32\x9a\x43\x59\x2e\x51\x99\x98\x86\x6a\x1d\x38\x6f\x4c\x59\x38\xb9\xf8\x78\x0e\x8b\xb2\x6c\x7e\x77\x01\x5f\x7e\x99\x5c\x4c\xc0\x85\x23\xd0\x50\x2d\x46\x42\x48\x47\x22\x01\x62\x21\x75\x8a\xeb\xe1\x6f\xfb\xb1\x41\x6c\xd7\xbf\x3c\x80\xb4\x27\x44\xde\x49\x8b\x91\x28\xb8\xea\xa0\x05\xe3\xea\xa7\x1f\xf7\x4c\xef\x90\xab\x5d\x6c\x4e\xb9\xf2\x36\x4c\x86\xe6\x73\x1f\xfc\xff\x88\xb2\x35\xfa\x90\xab\x4e\xe0\x4f\x98\xcc\xbb\x80\xff\xe7\xe7\xb3\xdd\x45\xb8\x9d\xb3\x8f\x1c\xf5\xa6\xfb\x97\x4a\xf0\xc8\x40\x3c\x02\x17\xce\xa6\xe7\xd3\x39\x7c\x70\xbf\x4a\xad\xb5\xe9\x3b\x87\x39\xba\x0c\x9e\x5d\x41\x6a\x47\xb9\x6e\x2c\x6b\xe6\x39\x4b\x8c\xa1\xda\xae\x4f\xa7\x43\xf3\x3e\xc5\x86\x2b\x03\xdf\xe3\x34\xc5\x5a\xb3\xd8\x8c\xa7\x96\x62\x6f\x5b\xb0\x85\xde\x01\x06\xe2\x11\xb8\x8b\xc1\xcf\xee\x1a\xe3\xdb\x14\x4b\x5f\x74\x46\x82\x47\xcc\x9c\xb1\x35\xac\x1e\xb4\xf6\xdc\xff\x5e\xbf\x46\x47\x7b\x8b\x3a\x7a\xb7\xb8\x82\xb2\x24\x9f\x24\x4b\xa9\x5c\xfd\x8a\x2b\x7b\xd3\x7f\xf3\x32\xb5\x30\x55\x95\xdd\x69\xb7\xb8\x7a\x55\xfa\xfc\x19\x00\x00\xff\xff\xd7\x2e\xf2\x2e\xf4\x12\x00\x00")

func modelDatabaseTableGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseTableGoTmpl,
		"model/database/table.go.tmpl",
	)
}

func modelDatabaseTableGoTmpl() (*asset, error) {
	bytes, err := modelDatabaseTableGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/table.go.tmpl", size: 4852, mode: os.FileMode(420), modTime: time.Unix(1498457106, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc6\xc1\x09\x82\x31\x0c\x06\xd0\x7b\xa6\x08\x3d\xa9\x60\x9d\xc2\x05\xdc\xa0\x86\x18\x3f\xa4\x49\xa9\xe9\x49\xdc\xfd\xa7\x97\xc7\x1b\x4d\x3e\xcd\x94\x7b\x83\x13\xa1\x8f\x98\xc9\xc5\x90\xef\xf5\xac\x12\xfd\x66\xf0\xab\x85\x43\xf6\x0a\xd1\x6b\xb9\xf0\x54\xc3\x37\x1f\xb1\x52\x4f\x73\xcb\x17\x83\xd7\xbb\x1b\x5c\xcf\xfc\xa3\x3f\x1d\x01\x00\x00\xff\xff\x5c\x5c\x62\x07\x59\x00\x00\x00")

func routerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_routerGoTmpl,
		"router.go.tmpl",
	)
}

func routerGoTmpl() (*asset, error) {
	bytes, err := routerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.go.tmpl", size: 89, mode: os.FileMode(420), modTime: time.Unix(1497324800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"Makefile": makefile,
	"NAME": name,
	"README.md": readmeMd,
	"app.go.tmpl": appGoTmpl,
	"config/config.yaml": configConfigYaml,
	"config.go.tmpl": configGoTmpl,
	"controller/.route.go.tmpl.swp": controllerRouteGoTmplSwp,
	"controller/controller.go.tmpl": controllerControllerGoTmpl,
	"controller/gen_controller.go.tmpl": controllerGen_controllerGoTmpl,
	"controller/gen_route.go.tmpl": controllerGen_routeGoTmpl,
	"controller/route.go.tmpl": controllerRouteGoTmpl,
	"gen_types.go.tmpl": gen_typesGoTmpl,
	"main.go.tmpl": mainGoTmpl,
	"model/all/all.go.tmpl": modelAllAllGoTmpl,
	"model/database/.db.go.tmpl.swp": modelDatabaseDbGoTmplSwp,
	"model/database/.table.go.tmpl.swp": modelDatabaseTableGoTmplSwp,
	"model/database/db.go.tmpl": modelDatabaseDbGoTmpl,
	"model/database/table.go.tmpl": modelDatabaseTableGoTmpl,
	"router.go.tmpl": routerGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"Makefile": &bintree{makefile, map[string]*bintree{}},
	"NAME": &bintree{name, map[string]*bintree{}},
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"app.go.tmpl": &bintree{appGoTmpl, map[string]*bintree{}},
	"config": &bintree{nil, map[string]*bintree{
		"config.yaml": &bintree{configConfigYaml, map[string]*bintree{}},
	}},
	"config.go.tmpl": &bintree{configGoTmpl, map[string]*bintree{}},
	"controller": &bintree{nil, map[string]*bintree{
		".route.go.tmpl.swp": &bintree{controllerRouteGoTmplSwp, map[string]*bintree{}},
		"controller.go.tmpl": &bintree{controllerControllerGoTmpl, map[string]*bintree{}},
		"gen_controller.go.tmpl": &bintree{controllerGen_controllerGoTmpl, map[string]*bintree{}},
		"gen_route.go.tmpl": &bintree{controllerGen_routeGoTmpl, map[string]*bintree{}},
		"route.go.tmpl": &bintree{controllerRouteGoTmpl, map[string]*bintree{}},
	}},
	"gen_types.go.tmpl": &bintree{gen_typesGoTmpl, map[string]*bintree{}},
	"main.go.tmpl": &bintree{mainGoTmpl, map[string]*bintree{}},
	"model": &bintree{nil, map[string]*bintree{
		"all": &bintree{nil, map[string]*bintree{
			"all.go.tmpl": &bintree{modelAllAllGoTmpl, map[string]*bintree{}},
		}},
		"database": &bintree{nil, map[string]*bintree{
			".db.go.tmpl.swp": &bintree{modelDatabaseDbGoTmplSwp, map[string]*bintree{}},
			".table.go.tmpl.swp": &bintree{modelDatabaseTableGoTmplSwp, map[string]*bintree{}},
			"db.go.tmpl": &bintree{modelDatabaseDbGoTmpl, map[string]*bintree{}},
			"table.go.tmpl": &bintree{modelDatabaseTableGoTmpl, map[string]*bintree{}},
		}},
	}},
	"router.go.tmpl": &bintree{routerGoTmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


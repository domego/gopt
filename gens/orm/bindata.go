// Code generated by go-bindata.
// sources:
// Makefile
// NAME
// README.md
// app.go.tmpl
// config/config.yaml
// config.go.tmpl
// gen_types.go.tmpl
// main.go.tmpl
// model/all/all.go.tmpl
// model/database/.table.go.tmpl.swp
// model/database/db.go.tmpl
// model/database/table.go.tmpl
// router.go.tmpl
// DO NOT EDIT!

package genorm

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _makefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xf2\x73\xf4\x75\xb5\x4d\x48\x4e\x2c\x51\x00\xb1\x12\xb8\xb8\x92\x4a\x33\x73\x52\xac\xb8\x38\x1d\xd2\xf3\x15\xc0\x6c\x05\xdd\x7c\x85\xa4\xcc\x3c\x7d\x15\x0d\x90\x0a\x4d\x2e\x2e\xbd\x00\x0f\x7f\xbf\x48\x2b\x88\x2c\x17\x20\x00\x00\xff\xff\x34\xa1\xfe\xdc\x41\x00\x00\x00")

func makefileBytes() ([]byte, error) {
	return bindataRead(
		_makefile,
		"Makefile",
	)
}

func makefile() (*asset, error) {
	bytes, err := makefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Makefile", size: 65, mode: os.FileMode(420), modTime: time.Unix(1497174442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _name = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\xe5\x02\x04\x00\x00\xff\xff\xc5\x48\x82\xef\x0a\x00\x00\x00")

func nameBytes() ([]byte, error) {
	return bindataRead(
		_name,
		"NAME",
	)
}

func name() (*asset, error) {
	bytes, err := nameBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME", size: 10, mode: os.FileMode(420), modTime: time.Unix(1497174547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xa8\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\xe5\xe2\x32\xd4\x53\x78\x3a\x7f\xd7\xb3\x39\x6b\x5e\x2e\xdc\xf9\x7c\xf6\xba\xe7\xbb\x27\x3f\x9b\xd7\x62\xcd\x65\xa4\xa7\xe0\x1f\xe4\xab\xa0\xad\xe0\xe2\xe4\x9c\x98\x9c\x91\xaa\x11\x94\x9a\x92\x59\xac\xef\x9b\x9a\x9b\x0c\xe2\x6a\x5a\x73\x19\xeb\x29\x38\x06\x78\x3a\x16\xa5\x17\x5b\x73\x99\xe8\x29\x84\x54\x16\xa4\x16\x5b\x73\x01\x02\x00\x00\xff\xff\x0f\x48\xaa\x33\x5c\x00\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 92, mode: os.FileMode(420), modTime: time.Unix(1497174569, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\xcd\x6a\xdc\x30\x14\x85\xd7\xd6\x53\xdc\x18\x02\x36\x38\x36\xdd\x06\x66\x31\xb4\x43\x32\x30\x1d\x82\x9d\xac\x42\x28\x1a\xeb\x5a\x11\x96\x25\x23\x79\x26\x84\x92\x27\xe8\xdf\xaa\xab\xae\xba\xeb\x1b\x64\x53\xc8\xcb\xf4\x27\xbb\xbe\x42\xb9\xf2\x0c\x4d\x87\xae\xba\x13\x3a\xf7\x9e\x73\xf4\xa9\xe7\x75\xcb\x25\x42\xc7\x95\x61\x4c\x75\xbd\x75\x03\x24\x2c\x8a\xfd\xad\xaf\xb9\xd6\x31\x63\x00\xb1\x54\xc3\xf5\x7a\x95\xd7\xb6\x2b\x9a\xcd\xca\xd6\x6d\x81\x46\x68\xf4\x3e\xde\x53\xa5\x32\x47\xd2\x1a\x55\xd3\x69\x5f\xd4\x68\x56\xf6\xa8\xe3\xa4\xb5\x6a\x28\x3a\x25\x84\xc6\x1b\xee\x30\x66\xd1\xbf\x07\x6d\xab\x06\x5f\x68\x2b\x63\x96\x32\xd6\xac\x4d\x0d\xd7\x9c\xa2\xa7\x7d\x9f\xa4\xf0\x9a\x45\x52\x99\xbc\xc2\xe1\xa5\x15\x98\xd4\x8d\xcc\x67\x66\x93\xb2\xc8\xd9\xf5\x80\x70\x3c\x01\x92\x97\x78\x93\xec\xee\xf2\x0b\x8f\xc9\x9f\xe0\x7c\x61\xa5\x44\x97\xa4\x7f\xe9\xb4\x54\x62\x6d\x37\xe8\x6e\x47\x09\xa5\xf2\x43\x49\x03\x49\x18\x4b\x59\xe4\xd1\x6d\xd0\x51\xc6\x96\x05\xe5\x54\xe1\x32\x14\x99\x0a\xe1\xd0\xfb\x0c\x76\x0b\x45\x01\x3f\xde\x7d\x7c\x7c\x7f\xff\xf8\xf0\xe9\xe7\x97\x37\x17\x55\xf9\xec\xdb\xc3\xe7\xef\x1f\xee\x7f\x7d\x7d\xeb\x50\x5b\x2e\x9e\x5b\xd3\x28\xb9\xb3\xce\x2b\x25\x0d\xd7\xa7\xd6\xb6\xfe\x72\x97\x71\x56\xce\x5e\x55\xf3\x93\xe5\x74\x71\x75\xb9\xfd\xa2\xbc\x9a\x9f\x90\xd9\x15\x4c\x80\xf7\x3d\x1a\x91\xfc\xa7\x41\x06\x44\x78\xe4\x1a\x8d\x9c\xcb\x50\x6c\x34\x22\x88\x77\x29\x63\x91\x6a\x60\x8b\x1a\x0e\x46\xc4\x2f\x70\xb5\x96\xf4\x07\x61\x55\x5b\x99\xcf\x4d\x63\x9b\x24\x3e\xf4\xc7\xb0\x50\x7e\x40\xa3\x8c\x04\x6e\x04\x50\x37\x3a\x9f\x9e\x9f\x9f\x81\x35\x70\xe8\xe3\x8c\x7a\x2f\x79\x87\x19\x3c\x21\x47\x69\x2c\x42\x17\x18\x6f\x5f\x34\x5a\x4d\x8d\x08\xa0\xa9\x90\x6a\x80\x46\x0e\x26\x60\x94\x7e\x52\x7c\x66\x04\xc9\xa1\xcb\xcc\x39\xeb\x42\x99\x38\xa3\xe9\xe0\x7c\xc7\x7e\x07\x00\x00\xff\xff\x71\x0a\xf0\xc6\xfc\x02\x00\x00")

func appGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_appGoTmpl,
		"app.go.tmpl",
	)
}

func appGoTmpl() (*asset, error) {
	bytes, err := appGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.go.tmpl", size: 764, mode: os.FileMode(420), modTime: time.Unix(1497324782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x4c\x49\x29\x4a\x2d\x2e\xb6\x52\x50\x32\x34\x32\xd7\x33\xd0\x33\xd0\x33\xb4\xaa\xae\xd6\x0b\xc8\x2f\x2a\xa9\xad\x55\xe2\x4a\xcd\x2b\xb3\x52\x50\x4a\x49\x4d\x2a\x4d\x57\xe2\xca\xc9\x4f\x8f\xcf\x49\x2d\x4b\xcd\xb1\x52\x50\x2a\x29\x4a\x4c\x4e\x55\xe2\x02\x04\x00\x00\xff\xff\x8b\x1d\xeb\xd8\x3f\x00\x00\x00")

func configConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_configConfigYaml,
		"config/config.yaml",
	)
}

func configConfigYaml() (*asset, error) {
	bytes, err := configConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/config.yaml", size: 63, mode: os.FileMode(420), modTime: time.Unix(1497174631, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xc1\xaf\xd3\x30\x0c\xc6\xcf\xf1\x5f\x61\x22\x81\x5a\x34\x5a\xc1\x71\x52\x0f\x08\xc6\x69\xe2\x80\xc4\x99\x65\xad\x9b\x45\x4b\xe3\x2a\x49\xc7\x7b\x9a\xf6\xbf\x23\xb7\x1d\x30\x2e\xbc\x69\x52\x1b\x7f\xf6\x97\x5f\x3f\x8f\xa6\x3d\x1b\x4b\x38\x18\x17\x00\xdc\x30\x72\xcc\x58\x80\xd2\x8e\x6b\xc7\x53\x76\x5e\x83\xd2\x9c\x34\x80\xd2\xd6\xe5\xd3\x74\xac\x5a\x1e\x6a\x4f\xe1\xc8\xef\x06\x53\x5b\x3e\xbb\x9c\x6a\xcf\x56\x83\x7a\x36\x83\x47\x6d\x79\x3c\xdb\xca\x85\x5a\x8e\xd5\xe5\x83\x86\x12\xa0\xae\xf1\x13\x87\xde\x59\x6c\x97\x47\xca\x71\x6a\x33\xe4\xe7\x91\xee\xca\x52\xc2\x2b\xa8\x8f\x5d\x17\x29\x25\x94\x92\x0b\x16\x0f\x62\xb5\xd5\x66\x29\xeb\x03\xa8\x5d\xb8\xe0\xfc\x7b\xec\xa0\x70\x11\x75\xcf\x76\x4f\x17\xf2\xff\xa8\x9e\xed\x0f\x2f\x75\x7d\x80\xdb\xcc\x14\xc9\x74\xeb\xed\xf2\x8a\x26\x74\x38\x9a\x98\x68\xc5\xfc\xe2\x3c\x41\x3f\x85\xf6\xaf\xce\x82\x9e\x5c\xc6\x23\xb3\x2f\xf1\xed\x3a\x7c\x05\x75\x4c\x1b\xa4\x18\x71\xdb\xe0\x92\x5c\xf5\x8d\x4c\x27\x06\xc5\x1f\xaf\x12\x94\xeb\xe7\xb6\x57\x0d\x06\xe7\x65\x50\x79\xb6\xd5\x2e\x46\x8e\x7d\xa1\x3d\x9b\xee\x1e\x51\xef\x3c\x61\x6f\x9c\xa7\x6e\x83\xf9\x44\x38\x9a\x7c\x42\x97\xf0\x75\xd2\x1b\x7c\x30\x9d\x5d\x05\x4b\xfc\x14\xa7\x6a\xf7\xe4\x72\xf1\x5e\x94\x1b\xc8\x7f\xb5\xdc\x36\xf8\x66\x41\xbe\xde\x40\x09\x47\x83\xf3\x9a\xbe\x87\xc1\xc4\x74\x32\xbe\x90\xef\x58\xba\xff\x0b\x3b\xdd\x87\x7e\x13\xaf\xb0\x33\x20\xc5\xf8\x12\xb2\x48\x79\x8a\x61\x75\x90\xb5\xac\x71\x4b\x12\x6b\xe0\xa5\x0c\xcb\xc5\x9f\xa9\x37\x93\xcf\x7b\xb6\x96\x62\xb5\xac\xb8\x41\x51\xbe\xd2\xcf\xf9\x58\xb4\xbd\xad\xee\xeb\x2f\xe1\x06\xbf\x02\x00\x00\xff\xff\xd5\x9e\x58\xbf\xe2\x02\x00\x00")

func configGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_configGoTmpl,
		"config.go.tmpl",
	)
}

func configGoTmpl() (*asset, error) {
	bytes, err := configGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.go.tmpl", size: 738, mode: os.FileMode(420), modTime: time.Unix(1497174442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _gen_typesGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8d\xc1\x4a\x03\x31\x10\x86\xef\xf3\x14\x3f\xcb\x1e\xf4\x92\xd2\x6b\xa1\x4f\x20\x8a\xa0\x78\xb5\x69\x33\x2c\xd5\x34\x09\xd9\xd9\xc8\x32\xcc\xbb\x4b\xba\x07\xc1\xdb\x30\xf3\x7d\xdf\xec\x76\x13\x27\xae\x5e\x38\xe0\xbc\x62\x2a\x42\xc5\x5f\xbe\xfd\xc4\x50\x75\xaf\xdb\x68\x46\x74\xbd\x95\x5c\x05\x0f\x04\x0c\x72\xbd\xf1\x40\x8f\x44\xcd\x57\x7c\xe2\x88\xbe\x70\x2f\xf9\x87\x48\xb5\xfa\x34\x31\xc6\x86\xc3\x11\x92\xdf\x72\x15\x0e\xcf\xbe\xc0\xbd\xaf\x85\x67\x33\x92\xb5\xf4\xf8\xd8\xdc\x13\xaf\x30\xc3\x2c\x75\xb9\x08\x94\x80\x3f\x7d\xff\xdf\x1f\x9b\xfb\xf0\x71\x61\x98\xdd\xc1\xb1\xed\x7b\xc0\x0c\xaa\x69\x89\xd1\x9f\x23\xf7\x17\xdd\xdd\x48\x33\x9c\xbe\xe6\x9c\x0e\x83\xea\x92\x02\xd7\x78\x4d\xdb\xf9\xee\x0d\x27\xa8\x72\x0a\x66\x64\xa4\x0a\x4e\xa1\xb7\x7f\x03\x00\x00\xff\xff\x19\x31\x59\xf6\x12\x01\x00\x00")

func gen_typesGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_gen_typesGoTmpl,
		"gen_types.go.tmpl",
	)
}

func gen_typesGoTmpl() (*asset, error) {
	bytes, err := gen_typesGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen_types.go.tmpl", size: 274, mode: os.FileMode(420), modTime: time.Unix(1497164150, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x93\x41\x6b\x1b\x3d\x10\x86\xcf\xd2\xaf\x98\x4f\x60\xd8\xfd\xd8\xae\x7b\x08\x3d\x04\xf6\x10\xda\xb4\x04\x9a\x60\x92\x42\x0f\x69\x28\xb2\x77\x24\x0f\xd1\x4a\x42\x92\x93\x9a\x92\xff\x5e\x24\x6d\xb2\x26\x3e\x58\x1e\xe9\xd5\xbc\x33\x8f\x47\x5e\xee\x1e\xa5\x46\x98\x24\x59\xce\x69\xf2\x2e\x24\x68\x38\x13\xca\x48\x2d\xf2\x3a\xa5\xbc\x90\x5b\x93\x3b\x24\x32\x39\x70\x31\x7f\xc7\x14\x76\xce\x3e\xcd\x3f\xc9\xea\xba\x7b\x8c\x3b\x69\x8c\xe0\x9c\x09\x4d\x69\x7f\xd8\xf6\x3b\x37\xad\x0d\xda\xad\xfb\x30\xc9\xb5\x76\x8f\x94\xe2\xda\x38\x2d\x78\xcb\xf9\x93\x0c\xd9\x6e\xa7\x34\xe4\xcf\xff\x9f\x9d\x55\xa4\x39\x93\xde\xdf\xc8\x09\xa1\x66\xe6\xcc\xd3\x58\x04\x64\xd3\xe9\xb5\xa2\xfe\x4a\x06\x01\x06\x10\x35\x5c\xd7\xa5\x3f\xca\x29\x57\xeb\x69\xac\x02\x28\x1a\xe3\xf4\x5a\x7a\xdf\x7b\x1a\xc5\x9b\x4d\x11\x0c\x20\x6e\x2e\xae\x2f\x4b\x59\xea\x60\x77\x40\x96\x52\xd3\xc2\x5f\xce\xb2\xdd\x6f\x18\xc0\xc5\xfe\xfa\x71\xa4\xd0\xe4\x34\xa2\x2b\xb1\x1b\x71\x83\x61\x6a\x39\xdb\xc6\x0e\x30\x04\x38\x1f\xa0\xb2\xea\x6f\x51\x16\xf3\xe6\xc4\xa7\xe5\x8c\x54\xd1\xfd\x37\x80\x25\x93\xf3\x33\xe3\x74\x7f\x19\x82\x0b\xaa\x11\x01\xe5\x08\xaf\xfd\x63\xde\xec\x20\xed\x11\xbc\x4c\x7b\xa0\x08\xab\x6a\xe3\xc2\x39\xac\xa2\xe8\xe0\x24\x77\x39\x68\x39\x7b\x59\x00\x0e\x33\xc2\xd8\xff\x08\x34\x35\x35\x68\xb6\xb1\xed\x40\xfc\xb2\xa2\xe5\x2f\x73\xb7\xcf\x81\x12\x6e\x68\xac\x1d\x67\xde\x03\xcc\x7f\x66\xff\x0d\x93\xcf\x27\x9c\xcd\x8d\xfd\xcc\xe2\xd2\xd9\x8c\xb7\x83\xfb\x87\xed\x31\x61\x33\x4f\x45\x7f\x95\x9c\xcc\x87\x6d\xdb\xc1\xc7\x4f\x67\x67\x8b\xd1\x5e\xda\xd1\xe0\xa5\x9d\x9d\x5c\xec\x6f\x71\x72\x4f\x6f\xa9\xde\x2b\x6f\xd1\x38\x39\xde\x91\xb6\xd2\xd4\x2b\x16\x9f\xeb\x9c\x64\xd4\x19\x57\x8d\x1a\x25\x4d\x9c\xf9\x2e\x92\x77\x94\xaf\xac\x72\xaa\x11\xab\x78\x0e\xa1\x24\x86\x3a\x2e\x0b\xc8\x96\xb3\x32\x8f\xc3\x92\x84\x33\x56\xc5\xb3\x51\x41\xfc\x5a\x65\x7e\x3a\xb5\xae\xfc\x66\xfa\x8d\x0c\x11\xb3\x62\x01\xca\x8b\xf3\x17\x54\xf2\x60\xd2\x77\xa7\x35\x86\xfe\x0e\xd3\x26\xa0\xa2\x3f\x8d\x9a\x52\x7f\xe7\x03\xd9\xa4\x1a\x71\xbf\x1a\x1f\xe0\x7e\x15\x1f\x44\x07\x9e\xc6\xa5\xa8\x96\xf3\xb9\xaa\x93\x86\x53\x38\xe4\x72\x47\x54\x18\xe0\xa4\x3b\xb4\xa3\x68\x39\xab\xfc\x2e\xbc\x6f\x32\xd3\x7f\x01\x00\x00\xff\xff\x30\x54\xd7\xbe\xeb\x03\x00\x00")

func mainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTmpl,
		"main.go.tmpl",
	)
}

func mainGoTmpl() (*asset, error) {
	bytes, err := mainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tmpl", size: 1003, mode: os.FileMode(420), modTime: time.Unix(1497174442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelAllAllGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8c\x31\x8e\xc2\x30\x10\x45\xfb\x39\xc5\x57\xb4\x45\xd2\xd8\xfd\x4a\x5b\x6c\x48\x8d\x10\x37\x30\xc9\x60\x22\x1c\x3b\x32\xa6\x40\xa3\xb9\x3b\x22\x81\x54\x94\x33\xff\xbd\x67\xad\xe7\xc8\xd9\x15\x1e\x70\x7a\xc0\x8f\x71\x2e\x34\xbb\xfe\xea\x3c\x63\x4a\x03\x07\xa2\x71\x9a\x53\x2e\xa8\x09\x10\xc1\x4f\x4e\xa9\x1c\x5c\xb9\xe0\xf7\x0f\xe6\xf8\x39\x54\xd7\x39\xbb\xe8\x19\xa6\x6b\xb1\xbe\x2a\x91\xcd\x50\xb5\x4b\xd2\x8a\x98\xbd\x9b\x58\xb5\x82\x08\xc7\x41\x95\x1a\xa2\xf3\x3d\xf6\xd8\x85\x74\xe3\xff\x10\xea\x06\xf2\xbd\xb8\xc9\x66\x61\xbb\xf6\x85\xbe\x2b\x4a\xcf\x00\x00\x00\xff\xff\x61\xa1\xa3\x6c\xd1\x00\x00\x00")

func modelAllAllGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelAllAllGoTmpl,
		"model/all/all.go.tmpl",
	)
}

func modelAllAllGoTmpl() (*asset, error) {
	bytes, err := modelAllAllGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/all/all.go.tmpl", size: 209, mode: os.FileMode(420), modTime: time.Unix(1497967059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseTableGoTmplSwp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9a\x6d\x8c\x24\x45\x19\x80\x9f\xdb\x8f\xd9\xdd\x99\x9e\x6e\xe3\x47\x0c\x3f\x8c\xc5\x70\xb9\xcc\xb2\x4b\x0f\x5f\x2a\xb9\xb8\x21\xee\xdd\x72\xae\x72\xcb\xc1\xee\x1d\x12\x94\xdd\xee\x99\x9a\xbd\xbe\xed\xe9\x9e\xed\xae\xb9\xdb\x75\x18\x90\xa0\x89\xe6\x24\xe1\x8f\x62\xd4\x18\xfc\xf8\x41\x30\x31\x21\x31\x91\xc4\xf0\xc3\x0f\x62\x82\x10\x0c\x8a\xa8\x68\xa2\xc6\x90\x80\xc4\x6f\x13\xfc\xa1\x31\xdd\xf3\xc1\xec\xee\xed\xed\x08\x72\x18\xac\xe7\xc7\xd6\xd6\x5b\xdd\x6f\xbd\xf5\xbe\xd5\x6f\x4d\x55\xb7\x7b\xf9\x89\xf9\xa3\xe2\x1a\xfb\x72\x80\x37\xc1\x83\x5f\x39\x76\x8b\x88\xef\x61\xe2\xe4\x3e\x6a\x8e\xef\x32\x00\x35\x3f\x0c\x56\xdd\x70\xcf\xeb\xee\x48\x14\x96\xce\x84\xd1\x5a\x5c\x77\xca\xb2\x14\x47\xe5\xd2\xaa\xa7\x4e\x36\x5c\xbb\x1c\xd6\x4a\xbe\x0c\xdc\xf0\xb2\x9a\x53\x5a\xf5\x82\xba\x2a\x29\x59\xab\xfb\x8e\x92\xa5\x5a\x58\x91\x7e\xa9\xe2\x28\xc7\x75\x62\x59\x52\x8e\xeb\x4b\x7b\x35\xb4\x55\xad\xee\x0f\x62\x9e\x46\xa3\x69\xa8\xea\x65\xd7\xe4\xb9\xea\xca\x2b\xd2\x47\xfd\x92\xc2\xc5\xe2\x2d\x6f\x3e\xfe\x7a\x5b\xa5\xd1\x68\x34\x1a\x8d\x46\xa3\xd1\x68\x2e\x20\xaa\x3e\xcc\x9d\xc0\x50\xa7\x7e\x67\xa7\xdc\xb7\xad\x1c\xe9\x94\xb9\x4e\x79\xd7\xb6\xf6\xe1\x4e\x39\xd5\x29\xcf\x6e\x6b\xd7\x68\x34\x1a\x8d\x46\xa3\xd1\x68\x34\x1a\x8d\x46\xf3\xfa\xe1\x54\x60\x71\x1f\xac\x0d\xb7\xdf\xff\x77\xf7\xff\x2f\x58\xf0\xb8\x05\x3f\xb4\xe0\xbb\x16\x3c\x64\xc1\x03\x16\xdc\x6f\xc1\x67\x2d\xf8\x8c\x05\x1b\x16\x9c\xb0\xe0\x3d\x16\xbc\xcb\x82\xab\x2d\xb8\xc4\x02\xcb\x82\x7f\x98\xf0\x1b\x13\x9e\x30\xe1\x71\x13\xbe\x66\xc2\xdd\x26\x4c\x99\x70\xa9\x09\x86\x09\x2f\xe6\xe1\x85\x3c\x3c\x9f\x87\x07\xf2\x70\x26\x0f\x32\x0f\x1f\xca\xc3\x89\x3c\x1c\xcf\x43\x2e\x0f\xcf\x19\xf0\xa4\x01\x0f\x1b\xf0\x25\x03\xee\x35\xe0\xe3\x06\x7c\xcc\x80\xd8\x80\x75\x03\xea\x06\xbc\xd7\x80\x03\x06\xe4\x0d\x78\x29\x07\xbf\xca\xc1\xcf\x73\xf0\x4c\x0e\x7e\x9a\x83\xb3\x39\xb8\x3d\x07\x1f\xcd\xc1\x66\x0e\x4a\x39\xb8\x28\x07\x99\x1c\x0c\xe5\xe0\xcf\x59\xf8\x63\x16\xfe\x90\x85\x47\xb2\xf0\xf9\x2c\xdc\x9d\x85\xe5\x2c\xcc\x66\xe1\x9d\x59\xf8\xd9\x04\xfc\x60\x02\x3e\x3d\x01\xb7\x4f\x40\x6d\x02\x3e\x30\x01\xc3\x13\xf0\x97\x71\xf8\xce\x38\x3c\x34\x0e\x5f\x1d\x87\xfb\xc6\x21\x1e\x87\x13\xe3\x70\xd5\x38\xbc\x38\x06\xcf\x8e\xc1\xfd\x63\x70\xef\x18\xdc\x35\x06\xb7\x8d\xc1\xdb\xc7\x20\x33\x06\x4f\x67\xe0\xd1\x0c\x7c\x2b\x03\x5f\xcf\xc0\x97\x33\x70\x77\x06\xd6\x33\xe0\x66\xe0\xb6\x0c\x7c\x38\x03\xb7\x66\xe0\xaf\xa3\xf0\xd8\x28\x7c\x73\x14\x0e\x8e\x42\x71\x14\x2e\x1a\x85\xb7\x8d\xc2\x4b\x23\xf0\xbb\x11\xf8\xf5\x08\x3c\x35\x02\x3f\x1a\x81\x27\x47\xe0\x8e\x11\x38\x39\x02\x63\x23\xf0\xf7\x61\x78\x6e\x18\x7e\x3b\x0c\x4f\x0f\xc3\x8f\x87\xe1\xa9\xe1\xf6\x3c\xb0\x86\xe1\xda\x61\x78\x62\x08\xbe\x3d\x04\xf7\x0c\xc1\xed\x43\x70\x7a\x08\x56\x87\xa0\x3c\x04\x37\x0e\xc1\xe1\xce\xa1\x91\x10\x91\x54\x8d\x28\x10\xa1\x7b\x0a\x91\xfc\xb5\x17\xa5\x3a\x3c\x3b\x1f\x54\xc3\xe2\x24\x42\xb4\x10\x42\x88\xba\x13\x78\xe5\xa2\x8c\xa2\xc9\xb4\xda\x16\xf6\xee\x0d\x3c\x3f\x15\x78\x55\x21\xa3\xc8\x9e\x8b\xa2\x30\x2a\x4e\x8a\x99\x19\x11\xaf\xfb\x49\x75\x21\xbc\x29\x3c\x13\xf7\x1a\x9a\x74\xaf\x15\x17\xcf\x24\x77\xa7\x92\xa4\x7a\x70\x46\x54\x5c\x7b\x51\xfa\xb2\xac\x6e\x08\x64\x31\x74\x4f\x4d\x8b\xc2\xe2\xdc\xf5\x73\x87\x96\x44\xb3\x59\xf5\xa4\x5f\x89\x97\x03\xa7\x26\x63\x61\x1f\x0a\xfd\x46\x2d\x88\x5b\x2d\x71\xdd\x4d\x37\x1c\x15\xd5\x46\x50\x16\x47\xa4\x6a\x36\x1b\xf5\xba\x8c\x0e\x39\x35\xe9\x0b\x7b\xc9\x71\xfd\x05\xa7\x26\x5b\xad\xeb\xbc\x28\x56\xc5\x72\x18\x54\x44\xac\x22\x2f\x58\x9d\x16\x4e\xb4\x1a\x0b\xdb\xb6\xbd\x40\xc9\xa8\xea\x94\x65\xb3\x35\x29\xc4\xa5\x1d\x0d\xcb\xe5\xb6\x8a\x05\xa7\xb6\xbb\x6e\xf9\x0a\x95\xef\x54\x21\x9a\xd0\x7a\x39\x20\xe5\x40\x9d\xdb\xfd\x3b\x3d\x57\x0e\xd4\x74\xcf\x7d\x9d\x6f\x6d\x3a\x4e\x9c\x0f\x54\xb1\xeb\xbf\x72\xd8\x08\x54\xf1\x8a\xc9\xb6\xbb\x56\x9a\xcd\xfe\xde\x57\xc4\xcd\xef\x9f\xbb\x69\x4e\x14\xc4\x94\x48\x86\xd1\xb6\xdf\xb6\xed\xa4\xcb\xae\xd2\xa4\x83\x23\xc9\xf4\x28\x4e\xb2\xa7\x4b\x0e\xa5\xdd\xed\xed\x12\x2f\x50\xef\xbe\x7a\xdb\xe0\x43\xf7\x54\xdc\x1b\xfd\xce\x49\x59\x0d\x23\xb1\x3c\x9d\x34\x24\x16\x45\x4e\xb0\x2a\xd3\x5b\x52\x6f\x0c\xe4\xb2\xe5\xdd\x1c\x56\x3c\x90\x28\xea\x9f\x74\xab\x52\xa5\xa3\xba\x2e\x99\x7c\x0b\xe7\x9c\x7a\xaf\xd6\x97\xa2\x6d\xfd\xc1\x19\x71\xeb\x47\x76\x9f\x20\xcd\xd6\xde\x4e\xbf\xf9\xa4\x8c\xe4\x00\x4e\x3f\x5f\x3f\xdd\x58\x0c\xe4\xc8\xed\x5e\x9c\x0f\x62\x19\xa9\xe4\xc1\x4d\xae\x6f\x36\x65\x50\x69\xb5\x15\xf5\xff\xbf\xbd\xb6\xb3\xde\x0e\xfb\x56\x1b\xd3\x08\xb4\x5a\x62\x46\x28\xaf\x26\xed\x85\xf0\x4c\x71\xb2\x5f\x81\x1f\xcb\x81\x35\x78\x81\xba\xea\xca\x62\x43\x79\x7e\x6c\x1f\x91\xea\xf8\xd2\xa1\x25\xaf\x26\x8b\x93\xf6\xf1\xc0\xdb\x28\x4e\xf6\xeb\x4d\x06\xbd\x2e\xec\x23\xe1\xd2\x66\x5d\x8a\x42\x7a\x67\x41\xf4\x8f\x64\x6b\xc7\xff\xd9\x50\x7a\x26\x5c\x1f\x96\x1d\xbf\x6d\xc4\xff\xc2\xa0\x44\xe7\x8a\x85\x86\xef\x8b\xc2\x2d\x73\x8b\x85\x5e\x1c\xbb\x4d\x69\xc7\xa2\xd0\xa8\x57\x1c\x25\x2b\xcb\x8e\xea\x29\xd0\xb1\x7e\x83\xc6\xba\x1c\xc9\xad\xb1\x6e\x36\x3b\xf9\xb7\x9b\x13\xdb\xe2\xfe\x2c\x97\x8c\xe2\x88\x54\x8b\xeb\xfe\xdc\x86\x2c\x37\x54\xf2\x1b\xa0\x9d\xc9\x92\x34\x71\x9e\x15\x71\x52\x74\xb2\xc9\xe4\xce\xe5\xc1\x5e\xae\xb8\xbd\x1c\xd5\x2f\x56\x1b\xed\x3c\xd5\xa9\xbc\x9c\xab\x06\xeb\x71\xbb\xa1\x62\x35\x8c\xea\x76\x9f\xa8\x6b\x4a\x57\xff\x8c\x50\x1b\x03\xea\x5e\x94\x6a\x29\x72\x82\xd8\x29\x2b\x2f\x0c\x8a\x6a\x43\x5c\x5a\x71\xed\x3e\xd1\xe4\xd6\xd4\x7b\xd8\x3d\xea\xd4\x0f\xbe\x9c\x5b\xd3\xfa\x74\xbb\x69\xb6\x5f\x3e\x3b\xdd\x35\xa8\xe2\x8a\x19\x71\xa0\xe2\xda\xed\xd5\x32\x4d\xd1\xbb\xae\xde\x83\x18\xdc\x5d\x75\x77\x46\xa0\x67\xe6\x5e\x0f\x7b\x2c\xd5\x61\x59\x75\x1a\xbe\x12\x76\xff\xac\xf3\xaa\xc2\xee\x36\xf4\xe6\xdb\xd6\xc9\xd4\xea\x78\x3a\x31\xfd\xc0\xee\x0b\x63\x7b\x38\x0b\xf2\xcc\xee\xeb\xa2\xa7\x4e\x86\x8d\x74\xec\x83\xff\x04\xdb\xed\x37\x71\xc7\xa0\x01\xfb\xdb\xdb\xb8\x81\x6c\x5a\xde\x39\x5d\x84\x58\xa9\xb8\x07\x0b\x97\x15\x56\x92\xf6\x8a\x9b\xb6\x77\x02\x9f\xd0\x6b\x4d\x9f\xd3\x3e\xfd\xfb\x4f\xf7\x12\x49\xb3\xb9\xff\x74\x27\x33\xb4\x5a\xed\x3b\x52\x51\xa7\xbd\x20\x4e\xc5\x61\xb0\x4d\xb6\xd2\x17\xe4\xde\xf3\xbf\xdf\x9b\x16\xfb\x4f\x27\x7e\xe9\xcf\x04\x2a\xc9\x38\xbb\x8f\x2d\x56\x51\xa3\xac\x92\x21\x9e\x76\x22\xb1\xdc\x4b\x91\xf3\x49\x8a\xea\xc9\xdc\x4d\x25\x63\x7b\x41\x9e\x99\x6d\x54\xab\x32\xea\xc9\xb7\xec\x2e\x7a\xd2\x6a\x4d\xd9\xc7\x22\x2f\x50\x7e\xd0\x93\x75\xd7\x10\x48\xe2\x57\x38\xe7\x97\xeb\xe1\x9a\xa7\xe2\xc2\xae\xcd\x5e\xb0\xe6\xa9\x52\xc5\xdd\x7e\xc5\x86\xe7\x84\x32\x70\xbc\x52\x92\x28\x0a\x89\xab\x0b\xa9\xbd\xe9\x75\xd5\x9a\x4a\xcb\xa4\xff\xf4\x9f\xde\xa7\xf0\xf1\xba\x5f\xc0\xab\xd5\xc3\x48\x89\x22\xd4\x9d\xf2\x9a\xb3\x9a\xba\x2a\xa8\xc8\xc8\xf7\x02\x29\xec\xc3\xb3\x6d\x37\x51\x2a\x89\x55\x19\xc8\x28\x49\xbd\xc2\xdd\x14\xe9\x57\xf6\xe9\xfe\xff\xe2\x2c\x3c\x9f\x6d\xef\xff\xbb\xef\xef\xff\x65\xc1\x3f\x2d\xb8\xcf\x82\x75\x0b\x6e\xb5\xe0\x97\x26\x3c\x66\xc2\x17\x4d\x38\x6b\xc2\x27\x4c\x38\x6d\x42\x64\xc2\x8a\x09\x8b\x26\xdc\x68\xc2\x31\x13\x9e\xc9\xc3\x43\x79\xf8\x42\x1e\xde\x9a\x87\xa1\x3c\xfc\xc4\x80\xef\x19\xf0\x88\x01\xdf\x30\xe0\x41\x03\x3e\x67\xc0\x59\x03\x3e\x65\xc0\x27\x0d\xb8\xdc\x80\xac\x01\x7f\xcb\x81\xca\x81\x9b\x83\xab\x73\x70\x49\x0e\xde\x91\x03\x33\x07\xd9\x1c\xbc\x94\x85\xdf\x77\xed\xd6\x68\x34\x1a\x8d\x46\xa3\xd1\x68\xb6\x33\xc0\x96\xec\xc2\xbf\xa6\xd8\x7a\x6c\x7c\x8e\x97\x15\xaf\xfc\xdc\x38\x11\x1f\x8b\xbc\x9a\x13\x6d\x7e\x50\x6e\xb6\x5a\x2b\x33\xd7\x16\xa6\xc5\x9a\xdc\x3c\xef\xf9\xf1\x1e\x7b\xe4\x01\x0e\x8f\x8b\x6b\x72\x53\x6c\xe9\xbb\xbd\x2d\xfc\x2f\x6c\x99\xdf\x58\xf1\x29\x88\x29\x11\x38\x35\x29\xa6\x44\x61\x65\xe6\xda\xbe\x83\xfe\xf4\x0d\xd5\x6b\x1c\xa6\xd9\xcd\xd4\xe4\x9b\x3d\x75\xf2\x50\x18\x54\xbc\xf4\x30\x29\x31\x67\x5a\x6c\x39\xf8\x4f\x6d\x11\x5b\x8e\xfd\x75\x1c\xcf\x17\xc7\xc2\x05\x8d\x5f\x1a\xb2\x57\x13\xac\x64\xff\x5f\x37\xe1\x61\xb3\xbd\xff\xef\x7e\xdf\xff\x0b\x0b\xbe\x6f\xc1\xfb\x2c\x28\x59\xb0\xcf\x82\x3f\x99\xf0\x82\x09\xcf\x26\xfb\x7b\x13\x1e\xed\xde\xa7\xd1\x68\x34\x1a\x8d\x46\xa3\xd1\x68\x34\x1a\xcd\x6b\xc4\xff\xd7\x21\x43\x61\x2a\x3d\x94\x99\x12\x05\x71\xfd\xfc\xd1\xf9\x25\x71\x45\x61\xb0\xef\x41\xf7\x3c\x68\xf8\x77\x00\x00\x00\xff\xff\x46\x0f\x73\xe1\x00\x50\x00\x00")

func modelDatabaseTableGoTmplSwpBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseTableGoTmplSwp,
		"model/database/.table.go.tmpl.swp",
	)
}

func modelDatabaseTableGoTmplSwp() (*asset, error) {
	bytes, err := modelDatabaseTableGoTmplSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/.table.go.tmpl.swp", size: 20480, mode: os.FileMode(420), modTime: time.Unix(1498456751, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseDbGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x51\x6f\x9b\x30\x10\xc7\x9f\xf1\xa7\xb8\xa1\xa9\x82\x29\x85\x3d\x47\xea\xc3\x12\xa6\xa9\x6a\xb3\x6e\x4a\xa5\x3d\x56\x07\x1c\xd4\xaa\xb1\x89\x31\x55\x23\xcb\xdf\x7d\x32\x90\x86\x4c\xe9\xa4\xbe\xf7\x29\xf8\xee\xfe\x7f\xce\xc7\xef\x92\xa6\x50\x93\x24\x8d\x86\x4a\xc8\xf7\x50\x73\xd9\x1a\xd6\x62\xf1\x84\x35\x81\xb5\xbd\x2c\x49\x0b\x2e\x09\x92\x9f\xd8\x90\x73\xcc\x5a\xf8\x6c\x30\x17\x04\xcb\x2b\x48\xee\x87\x27\xe7\x18\xe3\x4d\xab\xb4\x81\x88\x05\x61\x89\x06\x73\xec\x28\xed\x76\x22\x64\x2c\x08\x6b\x6e\x1e\xfb\x3c\x29\x54\x93\xbe\x70\x54\x24\x91\xa7\xb5\xd2\x6d\xc8\x82\x07\x98\x67\x6b\x75\xd9\xed\xc4\x65\xa9\xf9\x33\xe9\xb4\xd9\x0f\x06\x27\x7a\x41\x32\x57\x97\x0d\xa6\xb5\x7a\xe2\xa6\x4b\x85\xaa\xdf\xac\xe0\xf2\x89\x9b\xb4\xcc\x43\x16\x33\xf6\x8c\xda\x37\x97\xad\xd6\x4a\x56\xbc\x86\x2f\x65\x9e\x1c\x0e\x8c\x05\x65\x7e\x2d\x2b\x15\x04\x63\xd8\x3f\xb3\xa0\x23\xcd\x51\x8c\xa7\x79\x22\x66\xac\xea\x65\x01\x3f\xc8\x64\xab\x28\x86\x63\x0a\x2c\x0b\x78\x05\xa3\x19\x7c\xba\x02\xc9\x85\x8f\x05\x9a\x4c\xaf\xe5\x94\x60\x81\x63\xc1\x61\x48\x0b\x20\xad\xfd\x2c\xbb\x9d\x48\xee\x5a\x92\x51\x38\xde\x7b\x01\x87\xf6\x92\xad\xea\x75\x41\x51\x1c\x0f\xee\xbe\x7e\x66\xdd\xa2\xe4\x45\x44\x5a\xc7\x83\x2f\xaf\x8e\xba\x0d\xbe\x5c\x97\x82\xd6\x4a\xca\xce\x4b\xbe\x0e\x82\xc3\x9b\x93\x2d\x99\x79\x45\x74\x56\x77\xd6\xd5\xf7\xf9\x7f\xd7\xd7\x8a\xe8\xac\x6e\x74\x2d\xf3\x06\x5b\x7f\xf7\x0b\x4f\x43\x92\xe5\x1b\x6c\x6d\x96\x2f\xe1\x38\x9c\x8c\xa3\xa0\xc2\x2c\x61\xa8\xd8\xec\xb7\xbf\x6f\xa7\x90\x75\x8e\x05\xd6\x82\x46\x59\xd3\x44\xe2\x86\x0c\x76\xce\x81\xb5\xc0\x2b\x68\xd0\x14\x8f\x07\x5a\xc7\x82\x11\x62\x18\x5e\x9c\x7c\x2b\xcb\x21\xf8\x87\x9b\x47\x9f\x88\xac\x85\xbe\x6d\x49\xaf\xb1\x21\x71\xa2\xb0\x6e\x01\xa1\xb5\xf3\x50\x18\xfb\xab\xde\xd0\xbe\x8b\xac\xf5\x9f\x65\x07\xc9\x2f\xcd\x1b\xd4\xfb\x1b\xda\x7f\x7f\x31\x1a\x21\xc4\xde\xa8\x07\x2e\x0b\x4d\x0d\x49\x13\x3a\x67\x74\x4f\xd6\x92\xe8\xc8\xb9\x0a\x45\xe7\x0f\xb2\x74\x93\xfd\x51\xef\xfd\x59\x10\x4c\x59\x98\x7e\xa7\x91\x25\xf7\x1a\x0b\xba\x93\x51\x18\x2e\x40\xa8\x3a\xc9\xa8\xc2\x5e\x98\x5b\x55\xd7\xa4\xe3\x57\x9c\xe1\x0a\x2e\x5e\xd9\xb4\xd9\x6a\x39\x9b\xab\x9f\xf5\x72\x1c\x84\x63\xff\xf0\xe9\x8e\x80\x6f\xa7\x1d\x38\x87\xf9\x7c\x3f\xce\xc0\x3e\x4f\xbf\x1f\xf9\x41\xfc\x01\xfe\x07\xf8\xef\x03\xff\x84\xc9\xf7\xe2\x7f\x42\xec\x61\x09\xd6\x42\x75\x34\x2c\xc0\x5b\x7f\xee\x63\x24\xc9\x56\xc9\x50\x1b\x1d\xbe\xf1\xd4\x83\xe4\x82\x39\xf6\x37\x00\x00\xff\xff\xf6\x4b\x87\xa6\x6a\x07\x00\x00")

func modelDatabaseDbGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseDbGoTmpl,
		"model/database/db.go.tmpl",
	)
}

func modelDatabaseDbGoTmpl() (*asset, error) {
	bytes, err := modelDatabaseDbGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/db.go.tmpl", size: 1898, mode: os.FileMode(420), modTime: time.Unix(1497970731, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelDatabaseTableGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x6d\x4f\xe3\x46\x10\xfe\xee\x5f\x31\xb5\x10\xb2\x8f\xdc\x46\xd7\x56\xfd\x80\x14\x55\xca\x0b\x34\x2a\xe4\x4e\x90\xd3\xa9\xaa\x2a\xb2\xb6\xc7\x61\xc1\xde\x35\xeb\x35\x10\x59\xfe\xef\xd5\xee\x26\xc6\x86\x24\xe7\xbe\x49\x50\x1d\x5f\x70\x66\xd6\xe3\x79\x9e\x67\x76\x66\xb7\xdf\x87\x25\x72\x94\x54\x61\x04\xc1\x0a\x96\x8c\x67\xca\xc9\x68\x78\x4b\x97\x08\x65\x59\xf0\x08\x65\xc2\x38\x02\x19\x0f\x67\x34\xc5\xaa\x72\x1c\x96\x66\x42\x2a\xf0\x1c\x00\x37\xa2\x8a\x06\x34\xc7\x7e\x7e\x97\xb8\xda\xa0\x58\x8a\xe6\x21\x4e\x95\xf9\x1f\xac\x14\xe6\xae\xa3\x1f\x97\x4c\x5d\x17\x01\x09\x45\xda\x7f\x64\x54\x20\xa7\xac\xbf\x14\x32\x73\x9f\x39\x13\xe4\x81\x78\x9f\xd2\xfe\x92\xf1\x5b\xa6\xfa\x51\xb0\x7b\x85\xb8\x65\x2a\x77\x1d\xdf\x71\xee\xa9\x84\x2b\x18\x80\xce\x80\xcc\xc4\x43\x6d\x88\x53\x45\x3e\x49\xc6\x55\xc2\x6b\x5b\x7e\x97\x90\x89\x94\x33\x71\x21\x1e\xf2\xda\x6a\x72\x25\x33\x7c\x18\x16\x71\x8c\xb2\xb6\x17\x8a\x25\x39\x99\x72\xf5\xc3\xf7\x8e\xa3\x56\x99\xa1\x26\xcb\x50\x8e\x68\x8a\x09\x90\x39\x0d\x12\xb4\xf4\x40\xae\x64\x11\x2a\x28\x1d\x80\xb2\x04\x49\xf9\x12\xe1\x80\xf5\xe0\xe0\x1e\x8e\x07\x40\x46\x22\x29\x52\x9e\x43\x55\x99\x05\x8d\x28\x07\xf7\xe4\x84\x61\x12\x55\x15\x94\xe5\xc1\x3d\x39\x15\xf3\x55\xa6\x23\x2e\xa2\xe0\xd8\x35\xa6\xb5\xdf\x85\x9b\x5c\xf0\x67\xb6\x05\x94\x25\xf2\x48\x0b\x04\x70\x15\x05\xf0\x2e\x0a\xc8\x78\x38\xe5\xb1\x00\xfd\x67\xa2\xbc\x77\x17\xda\xab\x1e\x8d\x77\x2e\x29\xcf\x69\xa8\x98\xe0\x0d\x7f\xe5\x38\x71\xc1\x43\x98\xe1\xc3\x4e\x94\x9e\x0f\xef\x76\x53\xa0\xb1\x8b\xe0\x46\xe3\xdd\x17\xe4\x0b\x53\xd7\xa2\x50\xe3\xa1\xe7\xdb\x17\xc8\x25\x2a\x9b\xb1\xb1\x48\x54\x85\xe4\xda\xd1\x29\xa7\x46\xb8\x8e\xc9\x1d\xee\x5c\xa5\x17\x69\x79\xac\x7c\x1b\xd1\x8c\x66\xd6\xc1\x62\x20\x63\x8c\x69\x91\x28\xa8\xcd\xda\x91\xa3\xda\xd8\x09\x34\x5e\xb0\xd2\xb4\x9f\xab\xed\x20\x3d\x9d\xde\x6e\x04\x3e\x34\x68\x32\x70\x36\x9b\x50\x63\x3a\xc5\x26\xa1\xba\x0e\x06\x70\xf8\x54\x09\x16\xd8\x78\x78\x5c\xbf\x44\xc6\xc3\x9e\x35\x06\xe7\x34\x6b\xda\xf5\xef\x9e\x49\xf3\xaf\x64\xd6\x28\x2a\xef\x65\x9d\xf9\x1b\xfe\x89\x2e\xc2\x01\xa8\xc7\xee\xc1\x4f\x51\x5d\xde\x25\x93\x47\x0c\x0b\x25\xa4\xe7\x83\xee\x1d\xa4\x61\x32\xb1\x59\x5c\x87\xff\x6e\x00\x9c\x25\x6b\xcc\x4f\x44\x6b\xdf\x0b\xf6\x35\x55\xdd\x53\x99\xf2\x1c\xa5\xda\x42\xbf\x8e\xf4\x3c\xcf\x66\x27\x68\xef\x7f\xe3\x60\x31\xe0\x1d\xd8\x7d\x0c\x6e\x28\x51\x37\xe3\x2b\xaa\xdc\x66\xf9\x6c\x56\xcd\x8a\x24\x01\xf7\xb7\xc9\xa5\xdb\xaa\xba\xb5\xd7\xb6\x0c\x70\x99\xee\x54\x6e\xb3\x30\x2d\xe7\x6d\x44\x9b\x6e\x33\x00\xb3\xde\xb3\x5d\xee\x14\xd5\xe7\xf9\x68\xce\x52\xf4\x7c\xf2\x99\xb3\x47\xcf\xf7\x1b\x5f\xc2\x24\xc7\xce\x71\xeb\x88\x67\x22\xa4\x89\x8d\xd9\x8c\x55\xef\x89\x2d\x91\x5f\x2d\xa8\xcd\x7c\xd9\x07\x65\xcb\x66\xdf\xa2\x75\x91\x45\xdf\xb4\x7e\xd5\xa0\xfe\xa6\xd6\x4f\x4f\x28\xa5\x6e\x0b\x75\x53\x5d\x37\x0e\x11\xdc\xf8\xb6\x57\xe9\x05\xad\x3e\x95\x51\xce\x42\x0f\xa5\xf4\x5b\xad\xf7\x14\xd5\xee\xc9\x77\x8d\x12\xbd\x50\xf0\x48\x9f\x3e\x18\x5f\xf6\x80\xca\x65\x0e\x84\x10\xc6\x15\xca\x98\x86\x58\x56\x3e\xfc\xfe\xc7\xd7\xe7\x62\xae\xd3\xdd\xb7\xb0\xac\x76\x4e\x9c\xab\xde\x0b\xbc\x97\x98\x60\xa8\xbc\x43\x1d\xb9\x07\xee\xe5\xe4\x6c\x32\x9a\x43\x59\x2e\x51\x99\x98\x86\x6a\x1d\x38\x6f\x4c\x59\x38\xb9\xf8\x78\x0e\x8b\xb2\x6c\x7e\x77\x01\x5f\x7e\x99\x5c\x4c\xc0\x85\x23\xd0\x50\x2d\x46\x42\x48\x47\x22\x01\x62\x21\x75\x8a\xeb\xe1\x6f\xfb\xb1\x41\x6c\xd7\xbf\x3c\x80\xb4\x27\x44\xde\x49\x8b\x91\x28\xb8\xea\xa0\x05\xe3\xea\xa7\x1f\xf7\x4c\xef\x90\xab\x5d\x6c\x4e\xb9\xf2\x36\x4c\x86\xe6\x73\x1f\xfc\xff\x88\xb2\x35\xfa\x90\xab\x4e\xe0\x4f\x98\xcc\xbb\x80\xff\xe7\xe7\xb3\xdd\x45\xb8\x9d\xb3\x8f\x1c\xf5\xa6\xfb\x97\x4a\xf0\xc8\x40\x3c\x02\x17\xce\xa6\xe7\xd3\x39\x7c\x70\xbf\x4a\xad\xb5\xe9\x3b\x87\x39\xba\x0c\x9e\x5d\x41\x6a\x47\xb9\x6e\x2c\x6b\xe6\x39\x4b\x8c\xa1\xda\xae\x4f\xa7\x43\xf3\x3e\xc5\x86\x2b\x03\xdf\xe3\x34\xc5\x5a\xb3\xd8\x8c\xa7\x96\x62\x6f\x5b\xb0\x85\xde\x01\x06\xe2\x11\xb8\x8b\xc1\xcf\xee\x1a\xe3\xdb\x14\x4b\x5f\x74\x46\x82\x47\xcc\x9c\xb1\x35\xac\x1e\xb4\xf6\xdc\xff\x5e\xbf\x46\x47\x7b\x8b\x3a\x7a\xb7\xb8\x82\xb2\x24\x9f\x24\x4b\xa9\x5c\xfd\x8a\x2b\x7b\xd3\x7f\xf3\x32\xb5\x30\x55\x95\xdd\x69\xb7\xb8\x7a\x55\xfa\xfc\x19\x00\x00\xff\xff\xd7\x2e\xf2\x2e\xf4\x12\x00\x00")

func modelDatabaseTableGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_modelDatabaseTableGoTmpl,
		"model/database/table.go.tmpl",
	)
}

func modelDatabaseTableGoTmpl() (*asset, error) {
	bytes, err := modelDatabaseTableGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/database/table.go.tmpl", size: 4852, mode: os.FileMode(420), modTime: time.Unix(1498456746, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc6\xc1\x09\x82\x31\x0c\x06\xd0\x7b\xa6\x08\x3d\xa9\x60\x9d\xc2\x05\xdc\xa0\x86\x18\x3f\xa4\x49\xa9\xe9\x49\xdc\xfd\xa7\x97\xc7\x1b\x4d\x3e\xcd\x94\x7b\x83\x13\xa1\x8f\x98\xc9\xc5\x90\xef\xf5\xac\x12\xfd\x66\xf0\xab\x85\x43\xf6\x0a\xd1\x6b\xb9\xf0\x54\xc3\x37\x1f\xb1\x52\x4f\x73\xcb\x17\x83\xd7\xbb\x1b\x5c\xcf\xfc\xa3\x3f\x1d\x01\x00\x00\xff\xff\x5c\x5c\x62\x07\x59\x00\x00\x00")

func routerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_routerGoTmpl,
		"router.go.tmpl",
	)
}

func routerGoTmpl() (*asset, error) {
	bytes, err := routerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.go.tmpl", size: 89, mode: os.FileMode(420), modTime: time.Unix(1497324800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"Makefile": makefile,
	"NAME": name,
	"README.md": readmeMd,
	"app.go.tmpl": appGoTmpl,
	"config/config.yaml": configConfigYaml,
	"config.go.tmpl": configGoTmpl,
	"gen_types.go.tmpl": gen_typesGoTmpl,
	"main.go.tmpl": mainGoTmpl,
	"model/all/all.go.tmpl": modelAllAllGoTmpl,
	"model/database/.table.go.tmpl.swp": modelDatabaseTableGoTmplSwp,
	"model/database/db.go.tmpl": modelDatabaseDbGoTmpl,
	"model/database/table.go.tmpl": modelDatabaseTableGoTmpl,
	"router.go.tmpl": routerGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"Makefile": &bintree{makefile, map[string]*bintree{}},
	"NAME": &bintree{name, map[string]*bintree{}},
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"app.go.tmpl": &bintree{appGoTmpl, map[string]*bintree{}},
	"config": &bintree{nil, map[string]*bintree{
		"config.yaml": &bintree{configConfigYaml, map[string]*bintree{}},
	}},
	"config.go.tmpl": &bintree{configGoTmpl, map[string]*bintree{}},
	"gen_types.go.tmpl": &bintree{gen_typesGoTmpl, map[string]*bintree{}},
	"main.go.tmpl": &bintree{mainGoTmpl, map[string]*bintree{}},
	"model": &bintree{nil, map[string]*bintree{
		"all": &bintree{nil, map[string]*bintree{
			"all.go.tmpl": &bintree{modelAllAllGoTmpl, map[string]*bintree{}},
		}},
		"database": &bintree{nil, map[string]*bintree{
			".table.go.tmpl.swp": &bintree{modelDatabaseTableGoTmplSwp, map[string]*bintree{}},
			"db.go.tmpl": &bintree{modelDatabaseDbGoTmpl, map[string]*bintree{}},
			"table.go.tmpl": &bintree{modelDatabaseTableGoTmpl, map[string]*bintree{}},
		}},
	}},
	"router.go.tmpl": &bintree{routerGoTmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

